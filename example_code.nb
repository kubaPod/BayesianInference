Notebook[{

Cell[CellGroupData[{
Cell["Nested sampling with the BayesianInference package", \
"Title",ExpressionUUID->"c3f34d57-925e-4f95-92c2-19d5b664416d"],

Cell[CellGroupData[{

Cell["General", \
"Chapter",ExpressionUUID->"624c9164-0fe4-4f1e-b362-624e99f78c18"],

Cell[TextData[{
 "This package implements the nested sampling algorithm as described by John \
Skilling in his 2006 paper \[OpenCurlyDoubleQuote]Nested Sampling for General \
Bayesian Computation\[CloseCurlyDoubleQuote] (Bayesian Analysis, 1, number 4, \
pp. 833 - 860; available at ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.117.\
5542&rep=rep1&type=pdf\"", "Text", StripOnInput -> False],
    "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.117.5542&rep=\
rep1&type=pdf"},
   "HyperlinkURL"]],ExpressionUUID->"d90716e5-c339-4a0f-bef1-e6bd26265ab8"],
 "). There is also some functionality for ordinary Markov Chain Monte Carlo \
(MCMC) sampling."
}], "Text",ExpressionUUID->"fe56e51f-9879-46b8-bd1b-3b8a3cf97438"],

Cell["Load the package:", \
"Text",ExpressionUUID->"c2cd2525-6743-4f5a-a26d-65c7614a84ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "BayesianInference`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[68]:=",ExpressionUUID->"9091f228-26fe-4eaf-9bca-4b7d4425d20b"],

Cell["The general workflow for using this package is as follows:", \
"Text",ExpressionUUID->"5dcbada7-f440-4639-9044-7fc10730d39a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Define an inference problem using ",
 StyleBox["defineInferenceProblem",
  FontWeight->"Bold"],
 ". This returns an ",
 StyleBox["inferenceObject",
  FontWeight->"Bold"],
 " that contains all of the relevant  information needed for the next steps. \
defineInferenceProblem will do some sanity checks to try and anticipate \
problems further ahead"
}], "Item",ExpressionUUID->"6b63ee2e-50da-4b21-a5c1-2c763db7823a"],

Cell[TextData[{
 "Use ",
 StyleBox["nestedSampling",
  FontWeight->"Bold"],
 " or ",
 StyleBox["parallelNestedSampling",
  FontWeight->"Bold"],
 " to run the algorithm on the inferenceObject"
}], "Item",ExpressionUUID->"1d7696b3-2f32-4e9d-ac6b-1f64a5d4d592"],

Cell["Use visualisation functions to interpret the result", \
"Item",ExpressionUUID->"d8765d25-4067-4336-ab15-3df55ef272f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["About the nested sampling algorithm", \
"Subsection",ExpressionUUID->"3e4cc027-46e9-4b2e-9a46-b456658641b5"],

Cell[CellGroupData[{

Cell["What is it good for?", \
"Subsubsection",ExpressionUUID->"ed5e2430-f506-4250-b3cb-d61895be5eb6"],

Cell["\<\
The main goal of this package is to provide easy-to use code to do Bayesian \
inference with in Wolfram Language. The focus of the package is on the \
inference of distribution parameters from data and the computation of the \
evidence integral to compare different models of the data. \
\>", "Text",ExpressionUUID->"dbe313a7-dfb0-4a75-a64f-fa3abbb4c331"],

Cell["\<\
As a simple example of a problem, you could have a vector of numbers and \
you'd like to find out what distribution models these data:\
\>", "Text",ExpressionUUID->"3857cc4e-a6f3-4717-abc4-91f04721295a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11751148528054446`"}], ",", 
     RowBox[{"-", "2.191995254140541`"}], ",", 
     RowBox[{"-", "0.5143685660334552`"}], ",", "0.2492396710667894`", ",", 
     "0.6840020913116259`", ",", "3.0847964529819953`", ",", 
     RowBox[{"-", "0.5024324412173994`"}], ",", "0.20244486030286893`", ",", 
     "0.4171228273329824`", ",", "0.2541157610514157`", ",", 
     RowBox[{"-", "12.07292196121161`"}], ",", "1.791517773009199`", ",", 
     "1.4615659758762654`", ",", 
     RowBox[{"-", "4.086822460322223`"}], ",", "2.0862808562289623`", ",", 
     RowBox[{"-", "0.4356962558165376`"}], ",", "1.3728589355070022`", ",", 
     "0.176323448749464`", ",", "3.8047877638159977`", ",", 
     "1.5122102999265055`"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "data", "]"}]}], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"b38f1d1f-7073-4b3b-ad9a-3dde81c7d822"],

Cell["\<\
The first idea is that these data could come from a normal distribution. A \
normal distribution has two free parameters that you would need to estimate:\
\>", "Text",ExpressionUUID->"9d94a05b-3602-4ac8-a07a-db99337cfc04"],

Cell[BoxData[
 RowBox[{"distNormal", " ", "=", 
  RowBox[{"NormalDistribution", "[", 
   RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"9cd65cdf-ce8f-43fc-8d28-1156e1934dc5"],

Cell["\<\
The posterior distribution of \[Mu] and \[Sigma] is given by, we know from \
Bayes\[CloseCurlyQuote] rule that:\
\>", "Text",ExpressionUUID->"279d221f-0b31-4b47-9206-a3dffa1d271e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ProbabilityPr]", 
   RowBox[{"[", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"\[Sigma]", "\[Conditioned]", "Data"}]}], "]"}]}], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"Likelihood", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}], 
    RowBox[{"\[ProbabilityPr]", 
     RowBox[{"[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], 
   "Z"]}]], "DisplayFormula",ExpressionUUID->"7f0a8756-0a26-4830-870e-\
79897b8d4b33"],

Cell["So to infer the posterior distribution, we need 3 things:", \
"Text",ExpressionUUID->"c5ea679b-fadb-4d10-a49a-e7c980d05bba"],

Cell[CellGroupData[{

Cell[TextData[{
 "The likelihood function",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{" ", 
     RowBox[{"Likelihood", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8fd5acbe-adfa-414e-b4f5-a185b3755f50"],
 ", which is an unnormalised function of \[Mu] and \[Sigma]. In this package, \
the likelihood is generally expressed as loglikelihood, because \
machine-precision arthmatic will often underflow when calculating the regular \
likelihood function. Whenever I mention the loglikelihood function in the \
context of this code package, I will always mean a function that:"
}], "Item",ExpressionUUID->"a8786c69-b027-4b09-8fc5-2c9a347f1b3a"],

Cell[CellGroupData[{

Cell["\<\
Had the data \[OpenCurlyDoubleQuote]backed in\[CloseCurlyDoubleQuote] to it. \
The data is treated as a given and will always be part of the loglikelihood \
function and never an argument. This is primarily for efficiency reasons.\
\>", "Subitem",ExpressionUUID->"d2ddd59c-f231-404c-b1a5-62a839e08ef9"],

Cell["Accepts the parameters as a list like such: ", \
"Subitem",ExpressionUUID->"f29b60ae-a67a-4ebf-b7f7-c4df3a3b62d6"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"logLikeFunction", "  ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "paramVector", "}"}], ",", 
    RowBox[{"Likelihood", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"paramVector", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"paramVector", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", "data"}], "]"}]}],
    "]"}]}]], "Input",ExpressionUUID->"90cbf967-2893-4369-ad2b-bbeb9cc93648"],

Cell[CellGroupData[{

Cell[TextData[{
 "A prior distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ProbabilityPr]", 
    RowBox[{"[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"696c5081-5f67-445c-8a6f-a5247c439e08"],
 ". In this package, the prior will always be converted to a log-PDF function \
that (just like the loglikelihood) accepts the parameters as a list."
}], "Item",ExpressionUUID->"76d83696-68dd-4dc8-aed9-f40e81abd411"],

Cell[TextData[{
 "The normalising constant ",
 Cell[BoxData[
  FormBox[
   StyleBox["Z",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "e846725b-85fd-4100-a274-f3f326d2c4d9"],
 ", called the evidence (though in practise the quantity computed will be the \
log of the evidence). It is given by the multi-dimensional integral:"
}], "Item",ExpressionUUID->"f0b34172-0dfe-44bf-a822-dd039c2f9a98"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"Likelihood", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}], 
   RowBox[{"\[ProbabilityPr]", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], 
     RowBox[{"\[DifferentialD]", "\[Mu]"}], " ", 
     RowBox[{
     "\[DifferentialD]", 
      "\[Sigma]"}]}]}]}]}]], \
"DisplayFormula",ExpressionUUID->"b1da2783-3c7b-4dd4-8358-6cdde50e77a1"],

Cell[TextData[{
 "The evidence is generally not analytically tractable and usually also \
difficult to approximate numerically with standard quadrature methods, which \
is a problem that the nested sampling algorithm specifically designed to \
solve. The evidence is a very useful quantity to know, though, because it\
\[CloseCurlyQuote]s a robust measure of model correctness for the data that \
automatically ",
 StyleBox["penalises",
  IgnoreSpellCheck->True],
 " a model for over-fitting. Thus, whenever the choice of model is uncertain, \
knowing the evidence for each will be of great help in model selection."
}], "Text",ExpressionUUID->"9c56bc68-b2a4-485e-808b-67c61141332b"],

Cell[TextData[{
 "It should be note that an implicit assumption that is being made here is \
that the model parameters like \[Mu] and \[Sigma] are continuous rather than \
discrete. This is the case for most inference problems, regardless of wether \
they are dealing with continuous data (like in this example) or nominal data \
(such as in classification). Classification is ultimately just regression of \
probabilities values, which are real values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", " ", "1"}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "7a92d59d-f3ec-4818-ab53-1142bc50d799"],
 ". For example, the simplest nominal distribution is the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"BernoulliDistribution", "[", "p", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "45fe06c7-d9f6-4147-9451-874f96e925ce"],
 " , which is ",
 StyleBox["parameterised",
  IgnoreSpellCheck->True],
 " by the continuous variable ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "945386a0-4fc2-4142-bd62-f1b02a6385ce"],
 ". Still, it is good to take note of the fact that the code in this package ",
 StyleBox["cannot",
  FontSlant->"Italic"],
 " deal with discrete model parameters directly; it is purely for dealing \
with continuous integration problems over the parameter space."
}], "Text",ExpressionUUID->"5e1d4aa6-8060-4d11-9e56-0ac31e2336ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic code example", \
"Subsubsection",ExpressionUUID->"2408923d-35a7-42e2-8c14-fecd0b69cc1e"],

Cell["The model is defined like this:", \
"Text",ExpressionUUID->"36c19a3f-b6e5-47cb-914e-bbd730dd187a"],

Cell[BoxData[
 RowBox[{"normalModel", " ", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", "distNormal"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "100"}], "]"}], ",", " ", 
       RowBox[{"ExponentialDistribution", "[", 
        FractionBox["1", "100"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[249]:=",ExpressionUUID->"1dd52159-c8c1-45a0-bcd2-e2d300eaf736"],

Cell[TextData[{
 "The nested sampling algorithm is applied directly to the generated ",
 StyleBox["inferenceObject",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"a3060586-1c10-4756-a601-7935d68e7996"],

Cell[BoxData[{
 RowBox[{"resultNormal", "=", 
  RowBox[{"nestedSampling", "[", 
   RowBox[{"normalModel", ",", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"resultNormal", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"a76c04e2-1c1a-431f-ae8e-31c1e1a526a4"],

Cell["\<\
The histogram of the data suggest that the data has heavy tails, so perhaps a \
Cauchy distribution is more appropriate. Let\[CloseCurlyQuote]s compare the \
models:\
\>", "Text",ExpressionUUID->"ed09b86e-baf1-49e7-9667-089377fdab3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"distCauchy", " ", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cauchyModel", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", "distCauchy"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "100"}], "]"}], ",", " ", 
        RowBox[{"ExponentialDistribution", "[", 
         FractionBox["1", "100"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"resultCauchy", "=", 
  RowBox[{
  "nestedSampling", "[", "cauchyModel", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"resultCauchy", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->
  "In[245]:=",ExpressionUUID->"fd76c0f0-eef8-40b7-ae81-5dc0553ce531"],

Cell[TextData[{
 "As you can see, the Cauchy model beats the normal model by about 5 points \
of logevidence or a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Exp", "[", "5", "]"}], "\[Equal]", 
    FormBox["148.4131591025766`",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "d474e952-2d91-4ef6-88df-bf471da1eb33"],
 "."
}], "Text",ExpressionUUID->"d07c7de5-6f28-42b8-a104-648b0d3014fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Brief explanation of the algorithm with interactive animation\
\>", "Subsubsection",ExpressionUUID->"3d147c61-b591-4dea-89b4-471c8bfd6168"],

Cell["\<\
The code below creates an animation visualising the process of generating \
samples from the posterior with the nested sampling algorithm:\
\>", "Text",ExpressionUUID->"084e5d42-fd8b-4900-9ef2-d11b793ee308"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"obj", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"CauchyDistribution", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{"Exp", "[", "logb", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"logb", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<LocationParameter\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"result", " ", "=", 
   RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
    RowBox[{"obj", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]}], "Input",ExpressionUUID->"0e261c2d-c370-45cb-922f-a24f8673dc4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "nestedSamplingAnimation", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nestedSamplingAnimation", "[", 
    RowBox[{"result_", ",", " ", 
     RowBox[{"numberOfSlides", " ", ":", "_Integer", " ", ":", " ", "100"}], 
     ",", " ", "opts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"samples", "=", 
        RowBox[{"Values", "/@", 
         RowBox[{"Values", "@", 
          RowBox[{"Part", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"KeySort", "@", 
             RowBox[{"result", "[", "\"\<Samples\>\"", "]"}]}], ",", 
            "\[IndentingNewLine]", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Point\>\"", ",", "\"\<LogLikelihood\>\""}], "}"}]}],
            "]"}]}]}]}], ",", "\[IndentingNewLine]", "subset", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"nLiveSamples", "=", 
        RowBox[{"result", "[", "\"\<SamplePoolSize\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"logLikelihood", " ", "=", " ", 
        RowBox[{"result", "[", "\"\<LogLikelihoodFunction\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"params", " ", "=", " ", 
        RowBox[{
         RowBox[{"result", "[", "\"\<Parameters\>\"", "]"}], "/.", 
         RowBox[{
          RowBox[{"DirectedInfinity", "[", "sign_", "]"}], "\[RuleDelayed]", 
          RowBox[{"sign", " ", "*", " ", "10"}]}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"subset", "=", 
         RowBox[{"TakeDrop", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SortBy", "[", "Last", "]"}], "@", 
            RowBox[{"Take", "[", 
             RowBox[{"samples", ",", 
              RowBox[{"UpTo", "[", "n", "]"}]}], "]"}]}], ",", 
           RowBox[{"-", "nLiveSamples"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"logLikelihood", "[", 
           RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"result", "[", "\"\<Parameters\>\"", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "opts", ",", "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", "\"\<Text\>\"", ",", "16"}], "]"}], "&"}], 
             ")"}], "/@", 
            RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}]}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "0.01", "]"}], ",", " ", 
               RowBox[{"Point", "[", 
                RowBox[{"Rest", "@", 
                 RowBox[{"subset", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}], "]"}],
                ",", 
               RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"samples", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "+", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}],
               "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"n", ">", "nLiveSamples"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Most", "@", 
                   RowBox[{"subset", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], 
                  "]"}], ",", 
                 RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Last", "@", 
                   RowBox[{"subset", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], 
                  "]"}]}], "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Contours", "\[Rule]", 
           RowBox[{"subset", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}], ",", 
                 "\"\<Alive\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}], ",", 
                 "\"\<Dead\>\""}], "}"}]}], "}"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", "\"\<Text\>\""}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", "nLiveSamples", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"nLiveSamples", "+", "numberOfSlides"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], "]"}], "-", 
            "1"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"36a9657d-bf90-4014-a040-93baef7e2b0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slides", " ", "=", " ", 
   RowBox[{"nestedSamplingAnimation", "[", 
    RowBox[{"result", ",", "50"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "[", "\[IndentingNewLine]", 
  RowBox[{"slides", ",", "\[IndentingNewLine]", 
   RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",ExpressionUUID->"1093ff36-2c0a-44d2-8bb7-df0b62828884"],

Cell["The new sample generated in each step is obtained by:", \
"Text",ExpressionUUID->"2769c6ab-061d-427a-acab-479a8d536c68"],

Cell[CellGroupData[{

Cell["\<\
Picking one of the living samples at random. This already approximately \
samples the prior distribution if the living samples represent the prior \
well. Which they should, because the whole algorithm relies on that \
assumption.\
\>", "ItemNumbered",ExpressionUUID->"abf6b29f-f52c-4b2d-bfcf-32e4930505b3"],

Cell["\<\
Use Markov chain Monte Carlo (MCMC) to evolve the point and generate a new \
sample from a constrained version of the prior distribution. In simple terms, \
the prior density is set to zero wherever the loglikelihood function is less \
than the value of the worst currently living point. \
\>", "ItemNumbered",ExpressionUUID->"a14a4e3e-dd10-44a1-a415-c278dea6d329"]
}, Open  ]],

Cell["\<\
What you see in the animation is a contour plot of the loglikelihood \
function. Only the contours corresponding to dead samples are drawn, so the \
bright area in the center is the area where the likelihood is high enough to \
allow new samples to be drawn. 

In this animation you can clearly see the shells corresponding to \
(approximately) constant loglikelihood values. The evidence is estimated by \
estimating the volume of the prior contained in each of these shells. To put \
it into cooking terms: instead of integrating the posterior by dicing the \
domain into squares (like most integration methods do) and multiplying the \
volume of each square with the function value, the nested sampling algorithm \
works by peeling off the loglikelihood function like an onion. The volume of \
each onion peel cannot be derived exactly; it\[CloseCurlyQuote]s only known \
statistically. This is why the logevidence is reported with a standard error. \
\>", "Text",ExpressionUUID->"e153981e-9883-45b4-b647-ed0a85cf0a03"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["defineInferenceProblem and inferenceObject", \
"Subsection",ExpressionUUID->"941b4198-1153-45c4-baa9-2e7f28efe817"],

Cell["\<\
Here\[CloseCurlyQuote]s a typical usage example of defineInferenceProblem \
corresponding to the problem of inferencing the parameters of a normal \
distribution:\
\>", "Text",ExpressionUUID->"7d895088-c675-4a34-9786-255340e35a3d"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sigma", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"ProductDistribution", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "100"}], "]"}], ",", 
       RowBox[{"ExponentialDistribution", "[", 
        RowBox[{"1", "/", "100"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"229db5bd-6b08-495b-a533-454eca497c0b"],

Cell["\<\
Note the tooltip on the inferenceObject that gives a summary of its contents. \
The inferenceObject is basically just a wrapper for an Association that holds \
all relevant information. It\[CloseCurlyQuote]s important to note, though, \
that due to its typesetting you cannot copy-paste it in a notebook:\
\>", "Text",ExpressionUUID->"42e4b42e-e8f4-47c1-9b38-32b73edcffb1"],

Cell["\<\
This is intentional: if it was possible to copy-paste the object, it would be \
necessary to store potentially large amounts of data in the notebook, which \
would be slow.\
\>", "Text",ExpressionUUID->"c679e254-e3a8-4a9c-8027-42b5bc0098c5"],

Cell["\<\
This is how you check what properties are contained in the object:\
\>", "Text",ExpressionUUID->"8a107e1f-20c4-4c1f-a3b4-1f1117951021"],

Cell[BoxData[
 RowBox[{"obj", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->
  "In[210]:=",ExpressionUUID->"1e145958-b914-454b-a4d0-b89e59878fb4"],

Cell["\<\
You can add information manually, even properties that are just for your own \
convenience:\
\>", "Text",ExpressionUUID->"3e698b44-f3af-47d5-90d7-a19c9f1bdeb1"],

Cell[BoxData[{
 RowBox[{"obj", " ", "=", " ", 
  RowBox[{"Append", "[", 
   RowBox[{"obj", ",", " ", 
    RowBox[{"\"\<Name\>\"", "\[Rule]", " ", "\"\<Example\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Properties\>\"", "]"}]}], "Input",
 CellLabel->
  "In[213]:=",ExpressionUUID->"ed2efe4d-31b0-4c57-9f4f-22709228e942"],

Cell["\<\
To see what possible inputs there are for defining your problem, evaluate:\
\>", "Text",ExpressionUUID->"7ceccd37-8804-46d2-aa8a-15d95a9bbbc8"],

Cell[BoxData[
 RowBox[{"defineInferenceProblem", "[", "]"}]], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"97ccfc1b-d4e2-4e95-8d8d-ec1689c8fe9c"],

Cell["\<\
To run the nested sampling algorithm, we ultimately need to define the \
following properties:\
\>", "Text",ExpressionUUID->"79403abe-c914-4632-ac0e-c951f7a23119"],

Cell[CellGroupData[{

Cell["\<\
Parameters: A list specifying the parameters that are to be estimated and \
their limits (which are allowed to be infinite)\
\>", "Item",ExpressionUUID->"dedcbaac-08fb-440d-b792-4027247452f6"],

Cell["\<\
LogLikelihoodFunction: a function (preferably compiled) that evaluates the \
loglikelihood at a given point in the parameter space\
\>", "Item",ExpressionUUID->"7efc1576-57dc-4682-90c3-ea03125e110e"],

Cell["\<\
LogPriorPDFFunction: The logPDF function (preferably compiled) of the prior \
distribution (does not need to be normalised, but the computed evidence \
depends on its normalisation constant)\
\>", "Item",ExpressionUUID->"15133744-1b1f-4243-bf81-39dde16d063c"],

Cell["\<\
StartingPoints: A set of samples from the prior to use as a starting point\
\>", "Item",ExpressionUUID->"0cc6ffc5-a45a-4f5b-8cf3-0f0af5457e1e"]
}, Open  ]],

Cell["\<\
The role of defineInferenceProblem is to construct these properties from the \
properties supplied by the user. However, the you can forego the use of \
defineInferenceProblem by simply creating an association with the 4 required \
items and wrapping inferenceObject around it.\
\>", "Text",ExpressionUUID->"2578b9b2-508a-44a5-b9d5-a8478630ed22"],

Cell[TextData[{
 "The convention that is used throughout this package, is that the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "fe7357b8-dd27-4c63-9566-f76f793669ad"],
 " estimation parameters from an vector in ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "1878f550-b5e8-4bc6-948b-f3d82df18183"],
 "D space. For example, if the loglikelihood function is a function of 2 \
parameters, it should be of the form:"
}], "Text",ExpressionUUID->"298e3973-90b4-4529-99cc-49a8f76d6537"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"logLikelihood", "[", "paramVector_List", "]"}], ":=", " ", 
   RowBox[{"numericFunctionOf", "[", 
    RowBox[{
     RowBox[{"paramVector", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"paramVector", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"c63d85dc-a2d5-4209-9209-239524ab9c44"],

Cell[BoxData["$MachineLogZero"], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"abfea12f-767a-4206-963b-247dd18fc1e9"],

Cell[TextData[{
 "Furthermore, the code works best if we stay within the realm of machine \
numbers. However, since the log of zero cannot be represented in machine \
numbers, the package uses a value called ",
 StyleBox["$MachineLogZero",
  FontWeight->"Bold"],
 " instead:"
}], "Text",ExpressionUUID->"a22373cc-f058-4f76-82b5-12e0599b268c"],

Cell[BoxData["$MachineLogZero"], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"1e065af1-1a03-447e-8db1-714257167fc6"],

Cell["\<\
This value should be returned whenever the point in parameter space is \
outside of the support of the prior or loglikelihood. If you use \
defineInferenceProblem to create the loglikelihood and logprior PDF, this is \
handled automatically:\
\>", "Text",ExpressionUUID->"571b30ca-5609-4682-ae0e-d2ce69f3e8d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}]}], "}"}], "]"}]}], "Input",
 CellLabel->
  "In[221]:=",ExpressionUUID->"3bc9806e-4e55-4877-be73-33e722b5db3c"],

Cell[CellGroupData[{

Cell["Known issues:", \
"Subsubsection",ExpressionUUID->"0729daee-49c4-4576-8f19-0a1bafc498cd"],

Cell["\<\
Please note that if you specify an explicit PriorDistribution, the limits \
specified by the parameters will cut off the prior without adjusting the \
normalisation constant of the prior PDF:\
\>", "Text",ExpressionUUID->"299b2284-7d50-4983-9afd-e25b994ae4d2"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"obj", "=", 
       RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mu", ",", 
              RowBox[{"-", "lim"}], ",", "lim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sigma", ",", "0", ",", "lim"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
          RowBox[{"ProductDistribution", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "100"}], "]"}], ",", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"1", "/", "100"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "@", 
      RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "@", 
         RowBox[{
          RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"lim", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Infinity]", ",", "10"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[259]:=",ExpressionUUID->"f3198af2-e07d-4a59-83d2-d6241dab0731"],

Cell["\<\
When specifying the prior distribution as a list of distributions (in which \
case defineInferenceProblem will construct a ProductDistribution for you), \
the normalisation will be restored:\
\>", "Text",ExpressionUUID->"fd3663d4-f4e7-461a-9b0d-2c61859f0e61"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"obj", "=", 
       RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mu", ",", 
              RowBox[{"-", "lim"}], ",", "lim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sigma", ",", "0", ",", "lim"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "100"}], "]"}], ",", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"1", "/", "100"}], "]"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "@", 
      RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "@", 
         RowBox[{
          RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"lim", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Infinity]", ",", "10"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[261]:=",ExpressionUUID->"51c650e7-5220-49ba-b915-269eca8a7773"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["General nested sampling problems", \
"Subsection",ExpressionUUID->"9c6d33f5-ad36-4bd4-aeec-91b49adb4607"],

Cell[CellGroupData[{

Cell["Fitting a Cauchy distribution", \
"Subsubsection",ExpressionUUID->"d999f0a5-3322-4d46-9a9d-41c72825f113"],

Cell["\<\
As a simple example, here is how you inference the parameters of a Cauchy \
distribution from some data. \
\>", "Text",ExpressionUUID->"525d5a1b-6599-4f60-a750-615a05128698"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{"obj", " ", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"CauchyDistribution", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "is", " ", "an", " ", "optional", " ", "property", " ", 
     "that", " ", "we", " ", "attach", " ", "for", " ", "convenience"}], " ", 
    "*)"}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"89f371e4-4212-4849-8da4-bc154bf5086d"],

Cell["\<\
Note that the data has been transformed from a vector to a matrix as part of \
the standardisation process:\
\>", "Text",ExpressionUUID->"5d78d050-d9dc-499a-830a-46e8f3aafa1a"],

Cell[BoxData[{"testdata", "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Data\>\"", "]"}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"224b884a-511e-4a16-bf38-b70655db05e8"],

Cell["Run the algorithm with various options:", \
"Text",ExpressionUUID->"9c4464e2-9891-4e02-9d77-058970dec72a"],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]MonteCarloSteps\[CloseCurlyDoubleQuote] determines how \
many MCMC steps to take to generate each new sample.\
\>", "Item",ExpressionUUID->"f6f25b18-9a75-484c-a926-863c57922e19"],

Cell["\<\
\"MinMaxAcceptanceRate\" determines the limits of the MCMC acceptance rate \
before the algorithm accepts a new sample. By default, no limits are imposed \
on the acceptance rate.\
\>", "Item",ExpressionUUID->"c8bc7da0-97aa-45a8-94d7-e409c07599c5"],

Cell["\<\
\"TerminationFraction\" determines how long the algorithm iterates before \
convergence is reached.\
\>", "Item",ExpressionUUID->"fc329690-1965-4b30-b23d-0dfe742e0b84"],

Cell["\<\
\[OpenCurlyDoubleQuote]MaxIterations\[CloseCurlyDoubleQuote] determines the \
maximum number of samples that will be generated\
\>", "Item",ExpressionUUID->"6d70996d-94ab-4800-9bfa-2c408817d8a9"],

Cell["\<\
\[OpenCurlyDoubleQuote]LogLikelihoodMaximum\[CloseCurlyDoubleQuote] allows \
the user to specify the maximum of the loglikelihood function if this is \
already known. Specifying this value will help the algorithm to determine \
when it should terminate.\
\>", "Item",ExpressionUUID->"ac030149-d506-4f53-b031-054ab7fcf768"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<LogEvidence\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<Properties\>\"", "]"}]}], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"51cb9ac9-9a78-449e-b410-15d3a99a7df9"],

Cell[TextData[{
 "The standard error on the logevidence is obtained by Monte Carlo sampling \
of the ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "440e60b9-c886-4254-af8b-17dbd4ebb325"],
 "-axis values of the integral as described by Skilling in chapter 8 of his \
paper. The \[OpenCurlyDoubleQuote]PostProcessSamplingRuns\
\[CloseCurlyDoubleQuote] option controls how many such Monte Carlo samples \
are used to compute this standard error."
}], "Text",ExpressionUUID->"10d23ac1-6bb4-4ef2-a8c3-2e241dbd0d41"],

Cell[TextData[{
 "To speed up the computation, you can use ",
 StyleBox["parallelNestedSampling",
  FontWeight->"Bold"],
 " to divide the process over multiple kernels. Instead of having 100 living \
points, you can run 4 kernels with each 25 living points each (which each \
converge faster than 1 process with 100 points) for a comparable result:"
}], "Text",ExpressionUUID->"6c8c1185-8eeb-4ed2-80d9-b7f19eeb5501"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "25"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"a47f8460-0e47-4cea-98c6-be14ffa00e40"],

Cell[TextData[{
 "Use the ",
 StyleBox["calculationReport",
  FontWeight->"Bold"],
 " function to get a quick overview of the result:"
}], "Text",ExpressionUUID->"b36a7a86-55b4-486c-80b8-7078d4f12129"],

Cell[BoxData[
 RowBox[{"calculationReport", "[", "result", "]"}]], "Input",
 CellLabel->
  "In[241]:=",ExpressionUUID->"eca11bcf-67d9-4333-b81f-c825f03583cd"],

Cell[TextData[{
 "Visualise the posterior distribution of the parameters ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "e252e61b-ed14-437e-aad4-042883d30c9b"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "32b510ec-e797-4af2-99a9-1ff625b8c58b"],
 ":"
}], "Text",ExpressionUUID->"cdc731db-c506-4ae3-980f-c094e1fa0c4c"],

Cell[BoxData[{
 RowBox[{"Mean", "[", 
  RowBox[{"result", "[", "\"\<EmpiricalPosteriorDistribution\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Covariance", "[", 
  RowBox[{"result", "[", "\"\<EmpiricalPosteriorDistribution\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{"result", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\"", ",", "None"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PerformanceGoal", "\[Rule]", " ", "\"\<Speed\>\""}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"c8472bdd-c686-473b-8a7a-7a4601c77970"],

Cell[TextData[{
 "Note that the bubble chart above is cluttered up with many samples with \
very small weights. You can use the function ",
 StyleBox["takePosteriorFraction",
  FontWeight->"Bold"],
 " to discard the samples with the smallest weights and retain the most \
important samples. In the example below, 1% of the posterior mass is \
discarded:"
}], "Text",ExpressionUUID->"0c599086-253a-4d81-a9d0-c03bba2b3217"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"truncatedResult", " ", "=", " ", 
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", "\[IndentingNewLine]", 
  RowBox[{"truncatedResult", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\"", ",", "None"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"5ea9102c-5b40-4d5d-b824-05ccb85bc18e"],

Cell[TextData[{
 "Plot the marginal PDFs of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "47bba337-f3a4-4c06-8d56-087fcba77dc5"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "4fae5fe1-6ef6-4767-9b99-dcac6868dde7"],
 ":"
}], "Text",ExpressionUUID->"d534d4d8-9d1d-446f-9d9a-ed0c8ed8214d"],

Cell[BoxData[{
 RowBox[{"posteriorMarginalPDFPlot1D", "[", 
  RowBox[{"truncatedResult", ",", "a", ",", 
   RowBox[{"ScalingFunctions", "->", "\"\<Log\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}], ",", "All"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorMarginalPDFPlot1D", "[", 
  RowBox[{"truncatedResult", ",", "b", ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Log\>\"", ",", "\"\<Log\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.01", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}], ",", "All"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"48ab6113-e03d-46c6-b731-a97647066684"],

Cell["\<\
Compare the original distribution that generated the data with the Bayesian \
predictive distribution:\
\>", "Text",ExpressionUUID->"d1e714d7-a5a4-4948-bb3c-2eed94ddd266"],

Cell[BoxData[
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "truncatedResult", "]"}], ",", 
        "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", 
         RowBox[{"truncatedResult", ",", "\"\<MaximumLikelihood\>\""}], "]"}],
         ",", " ", "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", 
         RowBox[{"truncatedResult", ",", "\"\<MAP\>\""}], "]"}], ",", " ", 
        "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<OriginalDistribution\>\"", "]"}], ",", 
        "x"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Posterior predictive PDF\>\"", ",", " ", 
      "\"\<PDF based on maximum likelihood estimate\>\"", ",", 
      "\"\<PDF based on maximum posterior (MAP) estimate\>\"", ",", " ", 
      "\"\<PDF of original distribution\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"7cf996e1-36e2-4b55-878a-616faeff539e"],

Cell["\<\
Compute the evidence of a competing model to see if it offers a better \
explanation of the data. In this case the evidence is significantly lower for \
model 2, so the Cauchy distribution explains the data better than a normal \
distribution:\
\>", "Text",ExpressionUUID->"4b312315-a2f6-44eb-928a-02983d3d8e6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"obj2", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj2", "=", 
   RowBox[{"generateStartingPoints", "[", 
    RowBox[{"obj2", ",", " ", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{"result2", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj2", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result2", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->
  "In[235]:=",ExpressionUUID->"2375529a-b224-4e04-8f0b-6cfce3e8ab9a"],

Cell[BoxData[
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "result", "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "result2", "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<OriginalDistribution\>\"", "]"}], ",", 
        "x"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Posterior predictive PDF model 1\>\"", ",", " ", 
      "\"\<Posterior predictive PDF model 2\>\"", ",", " ", 
      "\"\<PDF of original distribution\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[214]:=",ExpressionUUID->"97f91a6a-ea1c-4c7f-9959-e4123be4dd17"]
}, Closed]],

Cell[CellGroupData[{

Cell["MCMC", \
"Subsubsection",ExpressionUUID->"6df0983c-1b1b-440c-a4c4-51b695ade390"],

Cell[TextData[{
 "You can also sample the posterior directly. First create a \
MarkovChainObject for this problem with ",
 StyleBox["createMCMCChain",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"24a082b4-e90d-4cdb-8922-95838712bba9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"obj", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"CauchyDistribution", "[", 
       RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}], 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "is", " ", "an", " ", "optional", " ", "property", " ", 
      "that", " ", "we", " ", "attach", " ", "for", " ", "convenience"}], " ",
      "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chain", " ", "=", 
  RowBox[{"createMCMCChain", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"starting", " ", "point"}], "*)"}], "]"}]}]}], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"c03cda6e-aab6-4f26-85db-e64f054d65ee"],

Cell["\<\
This function also accepts logPDF functions directly. Use compiled functions \
for the best performance:\
\>", "Text",ExpressionUUID->"678c55f5-37b9-4f0b-86a2-b780be6284ab"],

Cell[BoxData[
 RowBox[{"chain", "=", 
  RowBox[{"createMCMCChain", "[", 
   RowBox[{
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"pt", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"-", " ", 
       RowBox[{"pt", ".", " ", "pt"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"b3d93961-d5b6-494b-9730-45ac35e8bfff"],

Cell["\<\
The MCMC sampler uses an adaptive algorithm that tries to learn the \
covariance of the distribution. Use the options of createMCMCChain to \
influence this behaviour:\
\>", "Text",ExpressionUUID->"30a92aa7-4b1d-4ddd-91f2-d79bdd62eea1"],

Cell[BoxData[
 RowBox[{"Options", "[", "createMCMCChain", "]"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"c2cbac19-e555-4e00-a2b2-24fb2aa3d0f9"],

Cell[TextData[{
 "Use ",
 StyleBox["iterateMCMC",
  FontWeight->"Bold"],
 " to sample the distribution. Note that this function changes the state of \
the chain:"
}], "Text",ExpressionUUID->"0db6235f-8c03-4840-a8a5-17e66708441c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"iterateMCMC", "[", 
    RowBox[{"chain", ",", "10000"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Burn", " ", "it", " ", "in", " ", "first"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"iterateMCMC", "[", 
    RowBox[{"chain", ",", "1000"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"1786c3e3-853e-469c-9b62-b3fc5eb40963"],

Cell[BoxData[{
 RowBox[{"Mean", "[", "samples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Covariance", "[", "samples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothDensityHistogram", "[", "samples", "]"}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"00ce2e35-e314-41b4-8752-909a7ab05a94"],

Cell["\<\
The MCMC methods are implemented in the Statistics`MCMC` context, which \
should be available in Mathematica 11.3. \
\>", "Text",ExpressionUUID->"6d55541d-5b34-40b7-abae-bbda629dbfe0"],

Cell[TextData[{
 "View the methods available for ",
 StyleBox["Statistics`MCMC`BuildMarkovChain",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"9314c488-ac0c-4d85-aa01-826f3d49210b"],

Cell[BoxData[
 RowBox[{"Statistics`MCMC`MCMCData", "[", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"963b3c26-6257-4333-bcd6-729d8890b084"],

Cell[TextData[{
 "This package uses the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], 
   TraditionalForm]],ExpressionUUID->"a0555bb2-8794-47a8-800d-c6733c5f0501"],
 " method. Here\[CloseCurlyQuote]s how you view more detailed information \
about this method:"
}], "Text",ExpressionUUID->"7820ab27-db86-488c-9328-45ca405c0c04"],

Cell[BoxData[{
 RowBox[{"Statistics`MCMC`MCMCData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], ",", 
   "\"\<Usage\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Statistics`MCMC`MCMCData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], ",", 
   "\"\<Example\>\""}], "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"3e742700-3633-46fe-9495-205d6d728fe8"],

Cell[TextData[{
 "Iteration of the Markov chain is done with ",
 StyleBox["Statistics`MCMC`MarkovChainIterate",
  FontWeight->"Bold"],
 ". It uses the following syntax:"
}], "Text",ExpressionUUID->"0fcf1a18-3c0c-4c5f-9060-4275e705bae3"],

Cell[BoxData[{
 RowBox[{"Statistics`MCMC`MarkovChainIterate", "[", 
  RowBox[{"MCobj", ",", 
   RowBox[{"num", " ", "of", " ", "samples"}]}], "]"}], "\n", 
 RowBox[{"Statistics`MCMC`MarkovChainIterate", "[", 
  RowBox[{"MCobj", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"num", " ", "of", " ", "samples"}], ",", " ", 
     RowBox[{
     "number", " ", "of", " ", "iterations", " ", "between", " ", "each", " ",
       "sample"}]}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"d8edc38a-393e-45f4-bb18-c9d7bf5709e9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting Normal data with a SkewNormal distribution", \
"Subsubsection",ExpressionUUID->"016c2ace-24ef-40c8-bc76-9fa490bc7769"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "50"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"<|", "|>"}]}], ";"}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"38adc9dc-eac0-479c-a54d-6998a43e56c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"SkewNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "20"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"<|", "|>"}]}], ";"}]}], "Input",
 CellLabel->
  "In[274]:=",ExpressionUUID->"05405bfa-ea1b-4ef9-954c-3eed34b6cc52"],

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"SkewNormalDistribution", "[", 
         RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", "x"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[127]:=",ExpressionUUID->"73c88b0a-8a29-44a0-a23f-749ae325f129"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], " ", "=", " ", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "0.1", ",", "10"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}],
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
   "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"d2028e80-3d63-4c29-8f38-87b677d35f29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], " ", "=", " ", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
       RowBox[{"SkewNormalDistribution", "[", 
        RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "0.1", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\"", ",", 
         " ", "\"\<LocationParameter\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}],
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
   "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"b622be28-9d7d-492b-a5d5-2abcbde9e3af"],

Cell[BoxData[{
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], ",", "0.99"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", "0.99"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", "0.99"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"f1c4d1a3-c23d-4a42-a171-307b2577dd7d"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"testdata", ",", 
     RowBox[{"{", "0.1", "}"}], ",", "\"\<PDF\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"predictiveDistribution", "[", 
           RowBox[{"takePosteriorFraction", "[", 
            RowBox[{
             RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], ",", "0.99"}], 
            "]"}], "]"}], ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"predictiveDistribution", "[", 
           RowBox[{"takePosteriorFraction", "[", 
            RowBox[{
             RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", 
             "0.99"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[126]:=",ExpressionUUID->"cb413159-1ef0-4b82-bad8-056199db4cb0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Regression", \
"Subsubsection",ExpressionUUID->"005ca54c-da34-48e2-8493-06b12e6078d3"],

Cell["\<\
Regression problems can be specified as well. First define some test data:\
\>", "Text",ExpressionUUID->"210f6c26-ff10-449b-a992-93605abe9f4e"],

Cell[BoxData[{
 RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"testdata", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"#", "+", 
          RowBox[{"2", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "20"}], "]"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"List", "@@@", "testdata"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "testdata"}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"eda63068-e7af-4003-bbc7-9d06cd13dced"],

Cell[TextData[{
 "Note that the data is specified as a list of rules or as a rule of lists (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"in1", ",", " ", "in2", ",", " ", "..."}], "}"}], "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"out1", ",", " ", "out2", ",", " ", "..."}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"94b86c88-6243-4c65-9bd3-3e42dcf98f75"],
 ") just like in ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"Predict\"", "Text", Bold, StripOnInput -> False],
    "paclet:/ref/Predict"},
   "HyperlinkPaclet"]],ExpressionUUID->"bb40589d-ada4-4fb8-83d1-df5a5cb48876"],
 ". "
}], "Text",ExpressionUUID->"0bdd4ac7-ff0f-418c-87bb-4266a50cf842"],

Cell["\<\
The model is specified as a distribution that depends on an independent \
variable (note the standardisation of the data):\
\>", "Text",ExpressionUUID->"36901d8a-3775-4fb5-8a8e-528b395d42a4"],

Cell[BoxData[{
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"NormalDistribution", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"a", " ", "x"}], " ", "+", " ", "b"}], ",", 
       "\[IndentingNewLine]", "sigma"}], "\[IndentingNewLine]", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sigma", ",", "0.1", ",", "10"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "x", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LocationParameter\>\"", ",", "\"\<LocationParameter\>\"", ",", 
       " ", "\"\<ScaleParameter\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Data\>\"", "]"}]}], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"0bece909-f8bd-4067-914d-743675c6bff2"],

Cell[TextData[{
 "The functions ",
 StyleBox["predictiveDistribution",
  FontWeight->"Bold"],
 " and ",
 StyleBox["regressionPlot1D",
  FontWeight->"Bold"],
 " are useful helper functions to visualise the results:"
}], "Text",ExpressionUUID->"ab55195f-f51b-4a91-8906-e1197ad6bbbb"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"nestedSampling", "[", "obj", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "predictions"}], "]"}]}], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"d7c9dbb4-5f69-48f3-8a47-1d1c6af3ff80"],

Cell["\<\
You can visualise the different lines that are used in this result:\
\>", "Text",ExpressionUUID->"d4a4caf1-3ef6-48a0-8630-7c67f5267bd4"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"result", " ", "=", " ", 
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"points", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"result", "[", 
          RowBox[{
          "\"\<Samples\>\"", ",", " ", "All", ",", " ", "\"\<Point\>\""}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"weights", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "-", 
              RowBox[{"Max", "[", "#", "]"}]}], "&"}], "@", 
            RowBox[{"result", "[", 
             RowBox[{
             "\"\<Samples\>\"", ",", " ", "All", ",", " ", 
              "\"\<LogPosteriorWeight\>\"", ",", "\"\<Mean\>\""}], "]"}]}], 
           "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"model", " ", "=", 
        RowBox[{"expressionToFunction", "[", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"\"\<GeneratingDistribution\>\"", ",", " ", "1"}], "]"}], 
          ",", 
          RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Show", " ", "@", " ", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "@", 
              RowBox[{"model", "[", "#1", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", 
                RowBox[{"Opacity", "[", "#2", "]"}]}], "]"}]}]}], "]"}], 
           "&"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"points", ",", "weights"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"List", "@@", 
           RowBox[{"(", 
            RowBox[{"Flatten", "/@", 
             RowBox[{"result", "[", "\"\<Data\>\"", "]"}]}], ")"}]}], "]"}], 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"e90d9225-d094-4f01-8a3d-3f19cf209db4"],

Cell["Compare 3 polynomial models of increasing order:", \
"Text",ExpressionUUID->"0bee3961-019b-413b-a42c-5880deccbcd7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"variables", "[", "order_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sequence", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"\"\<c\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s0", ",", "0.01", ",", "100"}], "}"}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", "\[IndentingNewLine]", 
  RowBox[{"Association", "@", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", "->", " ", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"obj", "=", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"vars", " ", "=", " ", 
              RowBox[{"variables", "[", "order", "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
               RowBox[{"NormalDistribution", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vars", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", 
                    RowBox[{"-", "2"}]}], ",", " ", "1"}], "]"}], "]"}], " ", 
                  ".", " ", 
                  RowBox[{"x", "^", 
                   RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "order"}], "]"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<Parameters\>\"", "\[Rule]", "vars"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
               RowBox[{"{", "x", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"\"\<LocationParameter\>\"", ",", 
                   RowBox[{"order", "+", "1"}]}], "]"}], ",", " ", 
                 "\"\<ScaleParameter\>\""}], "]"}]}]}], "\[IndentingNewLine]",
              "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
         RowBox[{"obj", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "25"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"order", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
    "]"}]}]}]}], \
"Input",ExpressionUUID->"73cf2cba-512c-4d18-849a-9b6f2a7c28ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"#", ",", 
     RowBox[{"predictiveDistribution", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "]"}]}], "]"}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"#", ",", "0.99"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
    "result"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"094fb4a8-d123-4687-a48b-7234c6a1c4ce"],

Cell[BoxData[
 RowBox[{"result", "[", "\"\<CrudeLogEvidence\>\"", "]"}]], "Input",
 CellLabel->
  "In[303]:=",ExpressionUUID->"93db15bf-618e-4de0-b650-9d06e2e3eab0"],

Cell[BoxData[
 RowBox[{"calculationReport", "[", "result", "]"}]], "Input",
 CellLabel->"In[302]:=",ExpressionUUID->"184d938f-cbc6-4c62-997a-d135429b61db"]
}, Closed]],

Cell[CellGroupData[{

Cell["Classification using logistic regression", \
"Subsubsection",ExpressionUUID->"ac22ddcf-98bb-4da9-82e5-29d2481ef699"],

Cell[TextData[{
 "The following example data comes from the ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"Wikipedia article on logistic regression\"", "Text", 
     StripOnInput -> False],
    "https://en.wikipedia.org/wiki/Logistic_regression#Probability_of_passing_\
an_exam_versus_hours_of_study"},
   "HyperlinkURL"]],ExpressionUUID->"3c3b88c2-45e8-4acf-8453-0908df4ef923"],
 ":"
}], "Text",ExpressionUUID->"8c606cf4-c3c2-425d-9915-bbeffe6d4990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classificationData", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5", ",", " ", "0.75", ",", " ", "1", ",", " ", "1.25", ",", " ", 
      "1.5", ",", " ", "1.75", ",", " ", "1.75", ",", " ", "2", ",", " ", 
      "2.25", ",", " ", "2.5", ",", " ", "2.75", ",", " ", "3", ",", " ", 
      "3.25", ",", " ", "3.5", ",", " ", "4", ",", " ", "4.25", ",", " ", 
      "4.5", ",", " ", "4.75", ",", " ", "5", ",", " ", "5.5"}], "}"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
      " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", 
      ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", 
      "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", 
      " ", "1"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"List", "@@", "classificationData"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Data + fit from Wikipedia\>\""}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1.5046", " ", "t"}], "-", "4.0777"}], ")"}]}], "]"}]}]], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"c80e7c48-2a33-4ca8-8579-b93a4b22b8b9"],

Cell["\<\
The model can be defined by putting a logistic sigmoid inside of a  \
BernoulliDistribution:\
\>", "Text",ExpressionUUID->"bc37140c-e72e-4f34-83e9-220b9f605ea8"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "classificationData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"BernoulliDistribution", "[", 
      RowBox[{"LogisticSigmoid", "[", 
       RowBox[{
        RowBox[{"a", " ", "t"}], " ", "+", " ", "b"}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "50"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "50"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"6459ff03-11f9-4fb3-944d-805df792bd71"],

Cell[TextData[{
 "Note the strong negative correlation between ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "c02c783f-11f5-4979-921e-5871ec47cb19"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "a864b4eb-1e88-48ac-9e37-c7b8ea0fe574"],
 " in the posterior distribution:"
}], "Text",ExpressionUUID->"f027b807-daf4-4760-b58f-17698adf1f34"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", " ", 
  RowBox[{"nestedSampling", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"e6908fe6-a985-4b86-bb2d-665582340f10"],

Cell[TextData[{
 "To plot the regression probabilities, we need to pull the ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "787b6bdb-befa-4296-b59f-f4582b758176"],
 " values out of the Bernoulli distributions that are combined in the \
predictions:"
}], "Text",ExpressionUUID->"e9954343-51e2-46ce-98c1-2e4126d1c94d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"EmpiricalDistribution", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"predictiveDistribution", "[", 
     RowBox[{
      RowBox[{"takePosteriorFraction", "[", 
       RowBox[{"result", ",", "0.99"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "6", ",", "0.25"}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"11c08d5b-373e-4092-81e6-773eef224a81"],

Cell["\<\
Plot the spread in the classification probabilities and compare with the \
maximum likelihood estimate:\
\>", "Text",ExpressionUUID->"6abcc83e-fd98-4843-9aa9-6287f115baf9"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", "predictions"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"First", "/@", 
      RowBox[{"predictiveDistribution", "[", 
       RowBox[{"result", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "6", ",", "0.25"}], "]"}], ",", " ", 
        "\"\<MaximumLikelihood\>\""}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"bc0e54bd-2323-434a-b0b5-232386fef056"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Logistic classification with multi dimensional input and multiple classes\
\>", "Subsubsection",ExpressionUUID->"4310b3b0-fd31-4d00-808c-36e1c98af187"],

Cell["\<\
Load the Fisher iris  example dataset and put it in a more usable form:\
\>", "Text",ExpressionUUID->"0de519a0-2239-471b-a64b-9d29608e2979"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"dat", "  ", "=", 
      RowBox[{"ExampleData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], 
         "}"}], ",", "\"\<Data\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"classes", "=", 
      RowBox[{"Union", "@", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nclasses", "=", 
      RowBox[{"Length", "[", "classes", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}], ",", "dat",
         ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nInputFeatures", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"367bec5b-76de-4b37-878c-8192777187c6"],

Cell["\<\
The first thing to do, is to define a higher dimensional version of the \
BernoulliDistribution. We can do this with ProbabilityDistribution:\
\>", "Text",ExpressionUUID->"ce1046b2-16a1-470c-9679-a4ec3ce7d63a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", "pvector_List", "]"}], ":=", 
   RowBox[{"ProbabilityDistribution", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Total", " ", "@", " ", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "*", 
          RowBox[{"Boole", "[", 
           RowBox[{"class", "\[Equal]", 
            RowBox[{"First", "[", "#2", "]"}]}], "]"}]}], "&"}], ",", 
        "pvector"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"class", ",", "1", ",", 
       RowBox[{"Length", "[", "pvector", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[46]:=",ExpressionUUID->"82166071-81e9-4d88-9e7b-f88219d6d023"],

Cell[TextData[{
 "To map the 4 input features onto a probability vector of length 3, we first \
define a parameterised ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[Times]", "4"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3090d54c-f530-4dde-ad38-eb6f8af87c80"],
 " matrix and a length-2 bias vector:"
}], "Text",ExpressionUUID->"a3840cad-60d4-4f85-a944-845810be4b38"],

Cell[BoxData[{
 RowBox[{"matrix", "=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<a`1``2`\>\"", ",", "#1", ",", "#2"}], "]"}]}], "]"}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nclasses", "-", "1"}], ",", "nInputFeatures"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"biases", " ", "=", " ", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<b`1`\>\"", ",", "#1"}], "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"nclasses", "-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"inputCoord", " ", "=", " ", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<x`1`\>\"", ",", "#1"}], "]"}]}], "]"}], "&"}], ",", 
    "nInputFeatures"}], "]"}]}]}], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"6903f44e-0fb2-4560-b2ec-9f790fbc7859"],

Cell[TextData[{
 "Use a modified softmax operation to turn the 2D regression vector into a 3D \
probability vector (see ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"https://en.wikipedia.org/wiki/Multinomial_logistic_regression#\
As_a_log-linear_model\"", "Text", StripOnInput -> False],
    "https://en.wikipedia.org/wiki/Multinomial_logistic_regression#As_a_log-\
linear_model"},
   "HyperlinkURL"]],ExpressionUUID->"a54dd6e8-5e24-4492-8a8e-dfc48e70acf6"],
 "):"
}], "Text",ExpressionUUID->"bf60edd4-222e-48ec-83d1-cec43e1a95d1"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"dist", "@", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"matrix", ".", "inputCoord"}], "+", "biases"}], "]"}], ",", 
       "1"}], "]"}], ",", "Total"}], "]"}]}]}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"4aabf11a-e9a5-4f8f-8df5-3fec07f2a3d5"],

Cell["\<\
Combine everything to define the inference problem and sample it:\
\>", "Text",ExpressionUUID->"14184c9a-5b58-404a-b178-889b87afb594"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", "\[Rule]", "model"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", " ", "\[Rule]", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"matrix", ",", "biases"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "20"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"matrix", ",", "biases"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", "inputCoord"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"acf793f5-e047-415a-b3ed-5c1070fc9e07"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{
  "parallelNestedSampling", "[", "obj", 
   "]"}]}]], "Input",ExpressionUUID->"7f13cc42-0dc3-4b28-8ba9-926f253b4e11"],

Cell["Generate the predicted probability vectors:", \
"Text",ExpressionUUID->"b5048ba9-88e8-4c66-b6a6-c7c9ae730cea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "distToProbabilityVector", "[", "dist_ProbabilityDistribution", "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{"dist", ",", 
    RowBox[{"Range", "@@", 
     RowBox[{"Rest", "[", 
      RowBox[{"dist", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{"predictions", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"EmpiricalDistribution", "[", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
      RowBox[{"distToProbabilityVector", "/@", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}], ",", 
     RowBox[{"result", "[", 
      RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}]}], "]"}]}]}]}], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"1269449d-1f1d-457f-b64e-2fd3e536a86a"],

Cell["\<\
Find out which examples have the greatest spread in classification \
probabilities:\
\>", "Text",ExpressionUUID->"14ca8532-fc82-429d-9d06-654b266f2ef4"],

Cell[BoxData[
 RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"MarginalDistribution", "[", 
          RowBox[{"#", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.5", ",", "0.9"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "&"}], "/@", "predictions"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"Abs", "@*", 
        RowBox[{"Apply", "[", "Subtract", "]"}], "@*", "MinMax"}], "/@", 
       "#"}], "]"}]}], "&"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[100]:=",ExpressionUUID->"ea1585c3-5c25-45e7-96b2-51f875050211"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gaussian process regression", \
"Subsubsection",ExpressionUUID->"264c8155-84ba-40b0-93fa-8bb915e32da9"],

Cell["\<\
The package contains helper functions to help construct the loglikelihood \
function of a Gaussian process (GP). This makes it possible to infer the \
model parameters of GPs in a Bayesian way with nested sampling.\
\>", "Text",ExpressionUUID->"279669c9-862f-4f76-aed4-28f7062b83a1"],

Cell["Construct a test dataset:", \
"Text",ExpressionUUID->"c7a41460-86d3-4e0b-a7d5-98b23eb81f25"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", "20"}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"x", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"0.5", " ", "#"}], "]"}], "+", 
           RowBox[{"0.4", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "#"}], "]"}]}], "+", 
           RowBox[{"0.4", "#"}], "+", "1", "+", 
           RowBox[{"0.3", "*", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", "]"}], ",", 
              RowBox[{"Length", "[", "x", "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], "[", 
         RowBox[{"x", "+", 
          RowBox[{"0.2", "*", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", "]"}], ",", 
             RowBox[{"Length", "[", "x", "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testdataPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"List", "@@@", 
     RowBox[{"Thread", "[", "testdata", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[350]:=",ExpressionUUID->"80d48443-5e1c-4a65-a617-ae2b51124942"],

Cell[TextData[{
 "To illustrate how a Gaussian process works, consider the Manipulate below. \
It uses ",
 StyleBox["predictFromGaussianProcess",
  FontWeight->"Bold"],
 " to create predictions from test data and the specified GP model functions. \
In this package, a GP is defined by 3 functions:"
}], "Text",ExpressionUUID->"d74b2588-b7e7-4618-8e9a-fe71791fd8e4"],

Cell[TextData[{
 "A covariance kernel function that accepts to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "220bb9e8-8c30-4168-981c-b49bb6743b45"],
 "-values (note that our conventions stipulate that these are always lists, \
even for 1D regression) and produces a real number. A typical covariance \
kernel with tunable parameters is, for example:"
}], "Item",ExpressionUUID->"5e30a4d6-5d98-46fc-b136-9e6696ac23fc"],

Cell[BoxData[
 RowBox[{"kernel", " ", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], ",", 
    RowBox[{
     SuperscriptBox["\[Sigma]1", "2"], " ", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"x1", ",", " ", "x2"}], "]"}], "lengthScale"], ")"}], 
        "2"]}], "]"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"d28b0bf5-0c60-4061-8335-368885a84516"],

Cell[TextData[{
 "A noise level function (sometimes also called \[OpenCurlyDoubleQuote]nugget\
\[CloseCurlyDoubleQuote]). This is a function from a single ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ca0cc0d9-c107-4c1d-9a31-89dcdf4c68f2"],
 " value to a positive real number. To model a constant noise level, you \
simply specify a constant function:"
}], "Item",ExpressionUUID->"0ec2d0e2-64ad-4369-b04a-18835e213fd4"],

Cell[BoxData[
 RowBox[{"nugget", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", 
    SuperscriptBox["\[Sigma]0", "2"]}], 
   "]"}]}]], "Input",ExpressionUUID->"b30d53f0-20da-468b-b670-f0a372202523"],

Cell[TextData[{
 "However, it\[CloseCurlyQuote]s not necessary to make the nugget constant: \
it can be any function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "519b2c18-6c24-4327-96c6-efb11cbddca3"],
 " that is deemed appropriate. The nugget is allowed to be zero, but usually \
the calculations are more numerically stable if there\[CloseCurlyQuote]s at \
least a little bit of noise incorporated into the model."
}], "Text",ExpressionUUID->"fa54513d-aa15-4c2d-85ef-78c140e06b18"],

Cell["\<\
A mean function. Essentially, this is a trend-removing function. Often, this \
function is just a constant, just like the nugget function, such as:\
\>", "Item",ExpressionUUID->"8df6a305-4708-4843-a12d-c7a24b9f2eb1"],

Cell[BoxData[
 RowBox[{"mean", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", "\[Mu]"}], 
   "]"}]}]], "Input",ExpressionUUID->"76662d75-5dbb-414c-b23d-dca5fab8a93d"],

Cell[TextData[{
 "Any of these functions can be set to ",
 StyleBox["None",
  FontWeight->"Bold"],
 " in the code, in which case they get replaced by the zero function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "&"}], TraditionalForm]],ExpressionUUID->
  "d650dd3c-b3a3-401c-8323-9f7201504b23"],
 "."
}], "Text",ExpressionUUID->"37e4b6c5-4ee0-4ecd-8707-b045a4204c4a"],

Cell[TextData[{
 "As a small remark about the predictions made from the GP: we chose to \
incorporate the nugget variance into the prediction errors. Sometimes this \
isn\[CloseCurlyQuote]t done when the nugget is assumed to model measurement \
error, in which case the predictions are assumed to model the true response \
value at a given point ",
 StyleBox["x",
  FontSlant->"Italic"],
 " rather than the measurement result at a given point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "88f1ac05-09f4-4cef-aa8f-da6fd055b58f"],
 ". In other words, the code in this package will always model the \
measurements. "
}], "Text",ExpressionUUID->"80a50f1d-aa64-47b7-92b4-2e59a8bb20bd"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "@", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"testdataPlot", ",", "\[IndentingNewLine]", 
      RowBox[{"regressionPlot1D", "[", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"predictFromGaussianProcess", "[", "\[IndentingNewLine]", 
         RowBox[{"testdata", ",", "\[IndentingNewLine]", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "10", ",", "0.1"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s1", "2"], " ", 
            RowBox[{"fun", "@", 
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"First", "[", 
                 RowBox[{"#1", "-", "#2"}], "]"}], "d"], ")"}], "]"}]}]}], 
           "&"}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{"covariance", " ", "kernel", " ", "function"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           SuperscriptBox["s0", "2"], "&"}], ",", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"noise", " ", "function"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"m", "&"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"mean", " ", "function"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fun", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          SuperscriptBox["#", "2"]}], "]"}], "&"}], ",", "\"\<Type\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           SuperscriptBox["#", "2"]}], "]"}], "&"}], "\[Rule]", " ", 
        "\"\<Exp[-\!\(\*SuperscriptBox[\(d\), \(2\)]\)]\>\""}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           SuperscriptBox["#", "2"]}]], "&"}], "\[Rule]", " ", 
        "\"\<\!\(\*FractionBox[\(1\), \(1 + \*SuperscriptBox[\(d\), \(2\)]\)]\
\)\>\""}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "\"\<Length scale\>\""}], "}"}], ",", "0.2",
      ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "1", ",", "\"\<Covariance strength\>\""}], "}"}], 
     ",", "0.1", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s0", ",", "0.5", ",", "\"\<Noise level\>\""}], "}"}], ",", 
     "0.1", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "3", ",", "\"\<Mean\>\""}], "}"}], ",", "0", ",", 
     "5"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[352]:=",ExpressionUUID->"8aca103c-4e6e-4eee-a936-66dbbb668224"],

Cell[TextData[{
 "To perform GP regression, it\[CloseCurlyQuote]s usually a good idea to \
normalise the data first. The function ",
 StyleBox["normalizeData",
  FontWeight->"Bold"],
 " takes care of this and returns not only the normalised data but also the \
function (and inverse function) that was used for the normalisation:"
}], "Text",ExpressionUUID->"c15efe8d-9f7f-4bfc-a14c-fa782c404a77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"norm", "=", 
   RowBox[{"normalizeData", "[", "testdata", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"norm", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<NormalizedData\>\""}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[353]:=",ExpressionUUID->"dbd56840-4c5a-4f76-b312-8e0928231023"],

Cell["Reconstruct the original inputs:", \
"Text",ExpressionUUID->"95462184-e3c6-4a1c-8959-c7f8ded55dd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"norm", "[", 
   RowBox[{"\"\<Input\>\"", ",", "\"\<InverseFunction\>\""}], "]"}], "@", 
  RowBox[{"norm", "[", 
   RowBox[{"\"\<Input\>\"", ",", "\"\<NormalizedData\>\""}], "]"}]}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"14c3470f-5cb7-4576-bc02-2d6c52f6b5b2"],

Cell["Define a GP and perform nested sampling on it:", \
"Text",ExpressionUUID->"a2d8e085-6e62-4d7f-8966-7a5b6f263b7d"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineGaussianProcess", "[", "\[IndentingNewLine]", 
   RowBox[{"norm", ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "kernel", " ", "function", " ", "with", " ", "free", " ", 
       "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dsq", "=", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"First", "[", 
             RowBox[{"Subtract", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "l"], ")"}], "2"]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SuperscriptBox["s1", "2"], " ", "*", 
        RowBox[{"Boole", "[", 
         RowBox[{"dsq", "<", 
          SuperscriptBox["6", "2"]}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "dsq"}], "]"}]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Use", " ", "a", " ", "truncated", " ", "kernel", " ", "to", " ", 
        "make", " ", "the", " ", "covariance", " ", "matrix", " ", "sparser", 
        " ", "for", " ", "small", " ", "values", " ", "of", " ", "l"}], " ", 
       "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     SuperscriptBox["s0", "2"], "]"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "nugget", " ", "function", " ", "with", " ", "free", " ", "parameters"}],
      " ", "*)"}], "\[IndentingNewLine]", "None", ",", 
    RowBox[{"(*", " ", 
     RowBox[{
     "mean", " ", "function", " ", "with", " ", "free", " ", "parameters"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s1", ",", "0.05", ",", "20"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0.05", ",", " ", "30"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s0", ",", "0.05", ",", "20"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ScaleParameter\>\"", ",", " ", "\"\<ScaleParameter\>\"", ",", 
      "\"\<ScaleParameter\>\"", ",", " ", "\"\<LocationParameter\>\""}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<LogLikelihoodFunction\>\"", " ", "\[Rule]", " ", 
     "\"\<Compiled\>\""}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Setting", " ", "this", " ", "to", " ", "Automatic", " ", "will", " ", 
      "use", " ", "the", " ", "build"}], "-", 
     RowBox[{"in", " ", "functionality", " ", "of", " ", 
      RowBox[{"LogLikelihood", ".", " ", "You"}], " ", "can", " ", "also", 
      " ", "specify", " ", "a", " ", "function", " ", "explicitely"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"1aa21abf-8a3e-4e4e-9f6a-1625bab22d65"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", " ", "\[Rule]", " ", "25"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "10000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[366]:=",ExpressionUUID->"3232c939-b35d-4150-930a-3d100c4211b3"],

Cell[BoxData[{
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\n", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s0", ",", "s1", ",", "l"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[367]:=",ExpressionUUID->"93091536-6b82-464c-9ddd-e795673cb45c"],

Cell["Visualise the predictions:", \
"Text",ExpressionUUID->"ea5dd347-5301-4b01-a412-c61318e6a009"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", " ", "=", " ", 
   RowBox[{"predictFromGaussianProcess", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2.5"}], ",", "2.5", ",", "0.2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", " ", "predictions"}], "]"}]}], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"18f7fd72-b160-4bdb-9712-01cd3a87a018"],

Cell[BoxData[
 RowBox[{"calculationReport", "[", "result", "]"}]], "Input",
 CellLabel->"In[371]:=",ExpressionUUID->"1ad9895f-d50c-4eb6-ab16-e35bc4035b66"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting with time series processes", \
"Subsection",ExpressionUUID->"2f0246ac-afdb-478c-bf4d-e3c48ef44673"],

Cell[CellGroupData[{

Cell["Data preparation", \
"Subsubsection",ExpressionUUID->"8b0280ad-78af-4fe3-951c-de8eb28a2767"],

Cell["Get some timeseries data:", \
"Text",ExpressionUUID->"8b95a3a6-9fba-44ab-a347-2f86ca9bf8d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<AS:ASML\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Today", "-", 
        TemplateBox[{"3","\"mo\"","months","\"Months\""},
         "Quantity"]}], ",", "Today"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DateListPlot", "[", "data", "]"}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"98599f55-defc-452c-803a-46d006653df6"],

Cell["\<\
Transform the time axis and separate the starting point from the rest:\
\>", "Text",ExpressionUUID->"0a9177e6-89f4-4363-81ef-b2e9610208f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"N", "@", 
    RowBox[{"TimeSeriesRescale", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", ",", "ts"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", 
   RowBox[{"start", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", " ", "=", 
   RowBox[{"TimeSeries", "[", "ts", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"04cb4d59-e2ca-461f-b8cd-032e5c08c094"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simplest method: fitting the points independently", \
"Subsubsection",ExpressionUUID->"7d98a901-af68-401a-a6e7-6a76a0b851b7"],

Cell[TextData[{
 "Define the inference problem. Note that this works because ",
 StyleBox["GeometricBrownianMotionProcess",
  FontWeight->"Bold"],
 " evaluates symbolically to a ",
 StyleBox["LogNormalDistribution",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"0710e344-8102-4209-83df-4ba39210f3b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"process", " ", "=", " ", 
    RowBox[{"GeometricBrownianMotionProcess", "[", 
     RowBox[{"mu", ",", " ", 
      RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"using", " ", 
    RowBox[{"Exp", "[", "logsigma", "]"}], " ", "makes", " ", "it", " ", 
    "easier", " ", "to", " ", "search", " ", "for", " ", "sigma", " ", 
    "values", " ", "over", " ", "a", " ", "large", " ", "range", " ", "of", 
    " ", "values"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "ts"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"process", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"ebe34a11-9469-4498-adf5-59279e84fbae"],

Cell["\<\
This is a simple way to do it, but the data are now modeled independently of \
each other (they are all modeled as realisations of a lognormal \
distribution). Compare the following:\
\>", "Text",ExpressionUUID->"30708932-1b66-4c86-b1fb-0676f1627921"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu", "=", "0"}], ",", 
     RowBox[{"logsigma", "=", 
      RowBox[{"-", "4"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "@", 
     RowBox[{
      RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "logsigma"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"LogLikelihood", "[", 
      RowBox[{
       RowBox[{"GeometricBrownianMotionProcess", "[", 
        RowBox[{"mu", ",", " ", 
         RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}], 
       ",", "ts"}], "]"}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"a5242e2d-8945-4de1-94e0-6d0f5ce6a88b"],

Cell["\<\
In the next section it will be shown how to use the process loglikelihood \
instead.\
\>", "Text",ExpressionUUID->"afe11739-1269-4240-ab2f-e1aee2b4e0f8"],

Cell["Run the sampler:", \
"Text",ExpressionUUID->"fe1859aa-e3b7-42f3-b0d9-b5f991cafad4"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "20"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.001"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"e9b8d4e8-ffe0-4ff4-a473-6b1f6f62fe58"],

Cell["\<\
Plot the error bands of the process when you run it from the starting date:\
\>", "Text",ExpressionUUID->"18d6227d-ad2c-4c09-a795-54140841b9bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", " ", "=", " ", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.95"}], "]"}], ",", 
     RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot", "=", 
  RowBox[{"regressionPlot1D", "[", 
   RowBox[{"result", ",", "predictions"}], "]"}]}]}], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"782c4152-0131-4f06-8d27-f55a27d47c5e"],

Cell[BoxData[
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"1cdf66ec-b81a-454c-87e4-e8f4b3b315ee"],

Cell["Extrapolate from the last know data point:", \
"Text",ExpressionUUID->"eef90003-a712-42d3-bbad-645466f46ad4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extrapolations", " ", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"lastPoint", " ", "=", " ", 
       RowBox[{"Last", "@", 
        RowBox[{"Normal", "[", "ts", "]"}]}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Append", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"takePosteriorFraction", "[", 
          RowBox[{"result", ",", "0.95"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", 
          RowBox[{
           RowBox[{"GeometricBrownianMotionProcess", "[", 
            RowBox[{"mu", ",", " ", 
             RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", 
             RowBox[{"lastPoint", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"t", " ", "-", " ", 
            RowBox[{"lastPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], " ", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"lastPoint", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"lastPoint", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "20"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "extrapolations", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"5ee3e7e8-696f-499c-a254-6396784b205b"],

Cell["\<\
It\[CloseCurlyQuote]s instructive to compare these predictions with the \
point-estimate from the best sample found. This gives you a good idea wether \
or not you can approximate the posterior with a point-estimate:\
\>", "Text",ExpressionUUID->"d4906e52-6504-4da6-a000-fd0281460c5d"],

Cell[BoxData[{
 RowBox[{"estproc", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GeometricBrownianMotionProcess", "[", 
     RowBox[{"#1", ",", " ", 
      RowBox[{"Exp", "[", "#2", "]"}], ",", " ", "start"}], "]"}], "&"}], "@@", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"TakeLargestBy", "[", 
      RowBox[{
       RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], ",", 
       RowBox[{"#LogLikelihood", "&"}], ",", "1"}], "]"}], "]"}], "[", 
    "\"\<Point\>\"", "]"}]}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"plot", ",", "\[IndentingNewLine]", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", 
     RowBox[{"AssociationMap", "[", 
      RowBox[{"estproc", ",", 
       RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  "]"}]}], "Input",ExpressionUUID->"7b61917c-483f-49c3-90b3-1bdcf0a3d9b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Sequentially dependent loglikelihood using the built-in functionality of \
LogLikelihood\
\>", "Subsubsection",ExpressionUUID->"eeffe8a0-0540-445d-a90a-7f016a8e0f25"],

Cell[TextData[{
 "Taking the situations in the previous section as an example, it might occur \
that you want to use the built-in ",
 StyleBox["LogLikelihood",
  FontWeight->"Bold"],
 " function directly. This can be achieved with the following code, where we \
use ",
 StyleBox["expressionToFunction",
  FontWeight->"Bold"],
 " to create a function of the right form (one that accepts its arguments as \
a list):"
}], "Text",ExpressionUUID->"bd916e49-3630-4134-8237-ce5771909b4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<AS:ASML\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Today", "-", 
        TemplateBox[{"3","\"mo\"","months","\"Months\""},
         "Quantity"]}], ",", "Today"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", 
   RowBox[{"N", "@", " ", 
    RowBox[{"TimeSeriesRescale", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", ",", "ts"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", 
   RowBox[{"start", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ts", " ", "=", 
    RowBox[{"TimeSeries", "[", "ts", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"process", " ", "=", " ", 
   RowBox[{"GeometricBrownianMotionProcess", "[", 
    RowBox[{"mu", ",", 
     RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"logLikeGBMProcess", " ", "=", 
  RowBox[{"ReleaseHold", "[", "\[IndentingNewLine]", 
   RowBox[{"expressionToFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Hold", "[", "\[IndentingNewLine]", 
      RowBox[{"Replace", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"LogLikelihood", "[", 
          RowBox[{
           RowBox[{"GeometricBrownianMotionProcess", "[", 
            RowBox[{"mu", ",", " ", 
             RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], 
            "]"}], ",", "ts"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{"_", "?", "NumericQ"}], "]"}], " ", "\[Rule]", " ", 
         "$MachineLogZero"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mu", ",", "logsigma"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"b64e336b-3258-4367-9558-72ea9d31dacc"],

Cell[TextData[{
 "Note the use of ",
 StyleBox["Hold",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ReleaseHold",
  FontWeight->"Bold"],
 " to prevent the loglikelihood from evaluating symbolically as well as the \
use of ",
 StyleBox["Replace",
  FontWeight->"Bold"],
 " to make sure the returned result is always numeric even for input values \
where the loglikelihood may not be well-defined. The function ",
 StyleBox["directLogLikelihoodFunction",
  FontWeight->"Bold"],
 " automates this step for you:"
}], "Text",ExpressionUUID->"d1103b9f-5d45-4c06-a693-3b24b9e44af6"],

Cell[BoxData[
 RowBox[{"logLikeGBMProcess", "=", 
  RowBox[{"directLogLikelihoodFunction", "[", 
   RowBox[{"process", ",", "ts", ",", 
    RowBox[{"{", 
     RowBox[{"mu", ",", "logsigma"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"d182471f-38cc-4147-8ed7-c3d3f9271226"],

Cell["\<\
Define the inference problem with the pre-defined loglikelihood function:\
\>", "Text",ExpressionUUID->"db41a419-6d48-46e8-b543-cf7d8b9dd2da"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\"\<LogLikelihoodFunction\>\"", "\[Rule]", " ", "logLikeGBMProcess"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "ts"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Regression", " ", "probems", " ", "should", " ", "always", " ", "have",
        " ", "in", " ", "independent", " ", "variable", " ", "defined"}], ",",
       " ", 
      RowBox[{"even", " ", "if", " ", "it", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "appear", " ", "in", " ", "the", " ",
        "model", " ", "directly", " ", "or", " ", "if", " ", "the", " ", 
       "GeneratingDistribution", " ", "has", " ", "not", " ", "been", " ", 
       "defined"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"03fd6b5f-c647-4c58-96fb-b20d5b5ceeea"],

Cell["\<\
Run the sampler (this will take a while because the code runs without \
compilation):\
\>", "Text",ExpressionUUID->"1efab765-a352-402c-946d-78e60450bc12"],

Cell[BoxData[
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "20"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",ExpressionUUID->"c78ef708-4632-484a-877f-6c0f6f70726d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating a compiled version of the loglikelihood function", \
"Subsubsection",ExpressionUUID->"cfba4d89-3e91-4fca-88b6-19dd3e08b860"],

Cell["\<\
Since this is so slow, let\[CloseCurlyQuote]s do some manual labour to \
compile the loglikelihood function. The probability of each data point in the \
series depends on the value of the previous point and the time difference \
between them. So in a sense the problem becomes a regression problem with \
from a 2D input to a 1D output vector. Therefore, we need to transform the \
data into the following form:\
\>", "Text",ExpressionUUID->"58226dd1-6724-4d70-ac39-0c6bc5983b8f"],

Cell[BoxData[
 RowBox[{"transformedData", " ", "=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
     "\[Rule]", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "2", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"3563e0cc-7249-457c-b352-34792b7965c9"],

Cell["The inference problem can now be defined like this:", \
"Text",ExpressionUUID->"2c55f640-7a66-4a47-936e-edda9ef298fd"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "transformedData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"GeometricBrownianMotionProcess", "[", 
       RowBox[{"mu", ",", " ", 
        RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "yprev"}], "]"}], 
      "[", "\[CapitalDelta]t", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]t", ",", "yprev"}], "}"}]}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"88d8915a-1fab-424f-93d2-99cd9354ba09"],

Cell["\<\
Compare the constructed loglikelihood function with the built-in version to \
verify:\
\>", "Text",ExpressionUUID->"c0553513-ed39-484f-b217-b83dfc54083c"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu", "=", "0"}], ",", 
     RowBox[{"logsigma", "=", 
      RowBox[{"-", "4"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "@", 
     RowBox[{
      RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "logsigma"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"LogLikelihood", "[", 
      RowBox[{
       RowBox[{"GeometricBrownianMotionProcess", "[", 
        RowBox[{"mu", ",", " ", 
         RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}], 
       ",", "ts"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"b7d25a44-4cb4-4d83-89e0-a10835a524b7"],

Cell["\<\
For the purpose of plotting the data later, we can restore the original data \
to the inference object since it will not be used after the definition step \
anymore (except for visualisation purposes)\
\>", "Text",ExpressionUUID->"5f858a07-edf2-4275-bd8a-301666164755"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"obj", ",", " ", 
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
      RowBox[{"TimeSeries", "[", "data", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"a7862a70-e08c-4330-8b96-24262909d76d"],

Cell["Run the nested sampling algorithm:", \
"Text",ExpressionUUID->"fade880b-e3ed-4e37-8a3b-18cb31bfca1d"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "20"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}], "\n", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"98bdcad8-4abc-47dc-ab76-bc02dffafef8"],

Cell[TextData[{
 "The first thing we can do is visualise the prediction errors at each data \
point using the input values we calculated in ",
 StyleBox["transformedData",
  FontWeight->"Bold"],
 ". This will visualise how well we can predict each next point from the \
previous one:"
}], "Text",ExpressionUUID->"757379c3-576d-4d9b-a341-d322609e8fbe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"truncatedResult", " ", "=", " ", 
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{"AssociationThread", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Values", "@", 
      RowBox[{"predictiveDistribution", "[", 
       RowBox[{"truncatedResult", ",", 
        RowBox[{"transformedData", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "predictions", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}]}], "Input",ExpressionUUID->"a18ca735-ef4d-4a2a-9db8-9c23d1a87ef2"],

Cell["\<\
We can also visualise how well we can predict the future if we would only \
know the starting point (and compare that with the maximum likelihood \
point-estimate):\
\>", "Text",ExpressionUUID->"76e58d76-3209-4fec-9de4-e037558d1295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{
    RowBox[{"KeyMap", "[", "First", "]"}], "@", 
    RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
     RowBox[{"truncatedResult", ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "start"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", "predictions", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"estproc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GeometricBrownianMotionProcess", "[", 
      RowBox[{"#1", ",", " ", 
       RowBox[{"Exp", "[", "#2", "]"}], ",", " ", "start"}], "]"}], "&"}], "@@", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"TakeLargestBy", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], ",", 
        RowBox[{"#LogLikelihood", "&"}], ",", "1"}], "]"}], "]"}], "[", 
     "\"\<Point\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"plot", ",", "\[IndentingNewLine]", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", 
     RowBox[{"AssociationMap", "[", 
      RowBox[{"estproc", ",", 
       RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[136]:=",ExpressionUUID->"dac5ac3d-c265-4916-b8d0-0a368d8c7465"],

Cell["Finally, we can also predict future values:", \
"Text",ExpressionUUID->"461565e4-6b5e-49ae-9876-ffb9b5a6f4f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extrapolations", "=", 
   RowBox[{
    RowBox[{"KeyMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "+", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "&"}], "]"}], "@", 
    RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
     RowBox[{"truncatedResult", ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "extrapolations", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[128]:=",ExpressionUUID->"0be111c6-dd1a-415d-ab4d-ee0d72769c9f"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 988},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->None,
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TrackCellChangeTimes->False,
SpellingDictionaries->{"CorrectWords"->{
 "loglikelihood", "Skilling", "unnormalised", "parameterised", "logevidence"}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]


Notebook[{

Cell[CellGroupData[{
Cell["Nested sampling with the BayesianInference package", \
"Title",ExpressionUUID->"c3f34d57-925e-4f95-92c2-19d5b664416d"],

Cell[CellGroupData[{

Cell["General", \
"Chapter",ExpressionUUID->"624c9164-0fe4-4f1e-b362-624e99f78c18"],

Cell[TextData[{
 "This package implements the nested sampling algorithm as described by John \
Skilling in his 2006 paper \[OpenCurlyDoubleQuote]Nested Sampling for General \
Bayesian Computation\[CloseCurlyDoubleQuote] (Bayesian Analysis, 1, number 4, \
pp. 833 - 860; available at ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.117.\
5542&rep=rep1&type=pdf\"", "Text", StripOnInput -> False],
    "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.117.5542&rep=\
rep1&type=pdf"},
   "HyperlinkURL"]],ExpressionUUID->"d90716e5-c339-4a0f-bef1-e6bd26265ab8"],
 "). There is also some functionality for ordinary Markov Chain Monte Carlo \
(MCMC) sampling."
}], "Text",ExpressionUUID->"fe56e51f-9879-46b8-bd1b-3b8a3cf97438"],

Cell["Load the package:", \
"Text",ExpressionUUID->"c2cd2525-6743-4f5a-a26d-65c7614a84ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "BayesianInference`"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[61]:=",ExpressionUUID->"9091f228-26fe-4eaf-9bca-4b7d4425d20b"],

Cell["The general workflow for using this package is as follows:", \
"Text",ExpressionUUID->"5dcbada7-f440-4639-9044-7fc10730d39a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Define an inference problem using ",
 StyleBox["defineInferenceProblem",
  FontWeight->"Bold"],
 ". This returns an ",
 StyleBox["inferenceObject",
  FontWeight->"Bold"],
 " that contains all of the relevant  information needed for the next steps. \
defineInferenceProblem will do some sanity checks to try and anticipate \
problems further ahead"
}], "Item",ExpressionUUID->"6b63ee2e-50da-4b21-a5c1-2c763db7823a"],

Cell[TextData[{
 "Use ",
 StyleBox["nestedSampling",
  FontWeight->"Bold"],
 " or ",
 StyleBox["parallelNestedSampling",
  FontWeight->"Bold"],
 " to run the algorithm on the inferenceObject"
}], "Item",ExpressionUUID->"1d7696b3-2f32-4e9d-ac6b-1f64a5d4d592"],

Cell["Use visualisation functions to interpret the result", \
"Item",ExpressionUUID->"d8765d25-4067-4336-ab15-3df55ef272f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["About the nested sampling algorithm", \
"Subsection",ExpressionUUID->"3e4cc027-46e9-4b2e-9a46-b456658641b5"],

Cell[CellGroupData[{

Cell["What is it good for?", \
"Subsubsection",ExpressionUUID->"ed5e2430-f506-4250-b3cb-d61895be5eb6"],

Cell["\<\
The main goal of this package is to provide easy-to use code to do Bayesian \
inference with in Wolfram Language. The focus of the package is on the \
inference of distribution parameters from data and the computation of the \
evidence integral to compare different models of the data. \
\>", "Text",ExpressionUUID->"dbe313a7-dfb0-4a75-a64f-fa3abbb4c331"],

Cell["\<\
As a simple example of a problem, you could have a vector of numbers and \
you'd like to find out what distribution models these data:\
\>", "Text",ExpressionUUID->"3857cc4e-a6f3-4717-abc4-91f04721295a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11751148528054446`"}], ",", 
     RowBox[{"-", "2.191995254140541`"}], ",", 
     RowBox[{"-", "0.5143685660334552`"}], ",", "0.2492396710667894`", ",", 
     "0.6840020913116259`", ",", "3.0847964529819953`", ",", 
     RowBox[{"-", "0.5024324412173994`"}], ",", "0.20244486030286893`", ",", 
     "0.4171228273329824`", ",", "0.2541157610514157`", ",", 
     RowBox[{"-", "12.07292196121161`"}], ",", "1.791517773009199`", ",", 
     "1.4615659758762654`", ",", 
     RowBox[{"-", "4.086822460322223`"}], ",", "2.0862808562289623`", ",", 
     RowBox[{"-", "0.4356962558165376`"}], ",", "1.3728589355070022`", ",", 
     "0.176323448749464`", ",", "3.8047877638159977`", ",", 
     "1.5122102999265055`"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "data", "]"}]}], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"b38f1d1f-7073-4b3b-ad9a-3dde81c7d822"],

Cell["\<\
The first idea is that these data could come from a normal distribution. A \
normal distribution has two free parameters that you would need to estimate:\
\>", "Text",ExpressionUUID->"9d94a05b-3602-4ac8-a07a-db99337cfc04"],

Cell[BoxData[
 RowBox[{"distNormal", " ", "=", 
  RowBox[{"NormalDistribution", "[", 
   RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"9cd65cdf-ce8f-43fc-8d28-1156e1934dc5"],

Cell["\<\
The posterior distribution of \[Mu] and \[Sigma] is given by, we know from \
Bayes\[CloseCurlyQuote] rule that:\
\>", "Text",ExpressionUUID->"279d221f-0b31-4b47-9206-a3dffa1d271e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ProbabilityPr]", 
   RowBox[{"[", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"\[Sigma]", "\[Conditioned]", "Data"}]}], "]"}]}], "\[Equal]", 
  FractionBox[
   RowBox[{
    RowBox[{"Likelihood", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}], 
    RowBox[{"\[ProbabilityPr]", 
     RowBox[{"[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}]}], 
   "Z"]}]], "DisplayFormula",ExpressionUUID->"7f0a8756-0a26-4830-870e-\
79897b8d4b33"],

Cell["So to infer the posterior distribution, we need 3 things:", \
"Text",ExpressionUUID->"c5ea679b-fadb-4d10-a49a-e7c980d05bba"],

Cell[CellGroupData[{

Cell[TextData[{
 "The likelihood function",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{" ", 
     RowBox[{"Likelihood", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8fd5acbe-adfa-414e-b4f5-a185b3755f50"],
 ", which is an unnormalised function of \[Mu] and \[Sigma]. In this package, \
the likelihood is generally expressed as loglikelihood, because \
machine-precision arithmetic will often underflow when calculating the \
regular likelihood function. Whenever I mention the loglikelihood function in \
the context of this code package, I will always mean a function that:"
}], "Item",ExpressionUUID->"a8786c69-b027-4b09-8fc5-2c9a347f1b3a"],

Cell[CellGroupData[{

Cell["\<\
Had the data \[OpenCurlyDoubleQuote]backed in\[CloseCurlyDoubleQuote] to it. \
The data is treated as a given and will always be part of the loglikelihood \
function and never an argument. This is primarily for efficiency reasons.\
\>", "Subitem",ExpressionUUID->"d2ddd59c-f231-404c-b1a5-62a839e08ef9"],

Cell["Accepts the parameters as a list like such: ", \
"Subitem",ExpressionUUID->"f29b60ae-a67a-4ebf-b7f7-c4df3a3b62d6"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"logLikeFunction", "  ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "paramVector", "}"}], ",", 
    RowBox[{"Likelihood", "[", 
     RowBox[{
      RowBox[{"NormalDistribution", "[", 
       RowBox[{
        RowBox[{"paramVector", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"paramVector", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", " ", "data"}], "]"}]}],
    "]"}]}]], "Input",ExpressionUUID->"90cbf967-2893-4369-ad2b-bbeb9cc93648"],

Cell[CellGroupData[{

Cell[TextData[{
 "A prior distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ProbabilityPr]", 
    RowBox[{"[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"696c5081-5f67-445c-8a6f-a5247c439e08"],
 ". In this package, the prior will always be converted to a log-PDF function \
that (just like the loglikelihood) accepts the parameters as a list."
}], "Item",ExpressionUUID->"76d83696-68dd-4dc8-aed9-f40e81abd411"],

Cell[TextData[{
 "The normalising constant ",
 Cell[BoxData[
  FormBox[
   StyleBox["Z",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "e846725b-85fd-4100-a274-f3f326d2c4d9"],
 ", called the evidence (though in practise the quantity computed will be the \
log of the evidence). It is given by the multi-dimensional integral:"
}], "Item",ExpressionUUID->"f0b34172-0dfe-44bf-a822-dd039c2f9a98"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"Likelihood", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", " ", "data"}], "]"}], 
   RowBox[{"\[ProbabilityPr]", 
    RowBox[{
     RowBox[{"[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], 
     RowBox[{"\[DifferentialD]", "\[Mu]"}], " ", 
     RowBox[{
     "\[DifferentialD]", 
      "\[Sigma]"}]}]}]}]}]], \
"DisplayFormula",ExpressionUUID->"b1da2783-3c7b-4dd4-8358-6cdde50e77a1"],

Cell[TextData[{
 "The evidence is generally not analytically tractable and usually also \
difficult to approximate numerically with standard quadrature methods, which \
is a problem that the nested sampling algorithm specifically designed to \
solve. The evidence is a very useful quantity to know, though, because it\
\[CloseCurlyQuote]s a robust measure of model correctness for the data that \
automatically ",
 StyleBox["penalises",
  IgnoreSpellCheck->True],
 " a model for over-fitting. Thus, whenever the choice of model is uncertain, \
knowing the evidence for each will be of great help in model selection."
}], "Text",ExpressionUUID->"9c56bc68-b2a4-485e-808b-67c61141332b"],

Cell[TextData[{
 "It should be note that an implicit assumption that is being made here is \
that the model parameters like \[Mu] and \[Sigma] are continuous rather than \
discrete. This is the case for most inference problems, regardless of wether \
they are dealing with continuous data (like in this example) or nominal data \
(such as in classification). Classification is ultimately just regression of \
probabilities values, which are real values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Element]", 
    RowBox[{"[", 
     RowBox[{"0", ",", " ", "1"}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "7a92d59d-f3ec-4818-ab53-1142bc50d799"],
 ". For example, the simplest nominal distribution is the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"BernoulliDistribution", "[", "p", "]"}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "45fe06c7-d9f6-4147-9451-874f96e925ce"],
 " , which is ",
 StyleBox["parameterised",
  IgnoreSpellCheck->True],
 " by the continuous variable ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "945386a0-4fc2-4142-bd62-f1b02a6385ce"],
 ". Still, it is good to take note of the fact that the code in this package ",
 StyleBox["cannot",
  FontSlant->"Italic"],
 " deal with discrete model parameters directly; it is purely for dealing \
with continuous integration problems over the parameter space."
}], "Text",ExpressionUUID->"5e1d4aa6-8060-4d11-9e56-0ac31e2336ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic code example", \
"Subsubsection",ExpressionUUID->"2408923d-35a7-42e2-8c14-fecd0b69cc1e"],

Cell["The model is defined like this:", \
"Text",ExpressionUUID->"36c19a3f-b6e5-47cb-914e-bbd730dd187a"],

Cell[BoxData[
 RowBox[{"normalModel", " ", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", "distNormal"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Mu]", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "100"}], "]"}], ",", " ", 
       RowBox[{"ExponentialDistribution", "[", 
        FractionBox["1", "100"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[249]:=",ExpressionUUID->"1dd52159-c8c1-45a0-bcd2-e2d300eaf736"],

Cell[TextData[{
 "The nested sampling algorithm is applied directly to the generated ",
 StyleBox["inferenceObject",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"a3060586-1c10-4756-a601-7935d68e7996"],

Cell[BoxData[{
 RowBox[{"resultNormal", "=", 
  RowBox[{"nestedSampling", "[", 
   RowBox[{"normalModel", ",", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"resultNormal", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"a76c04e2-1c1a-431f-ae8e-31c1e1a526a4"],

Cell["\<\
The histogram of the data suggest that the data has heavy tails, so perhaps a \
Cauchy distribution is more appropriate. Let\[CloseCurlyQuote]s compare the \
models:\
\>", "Text",ExpressionUUID->"ed09b86e-baf1-49e7-9667-089377fdab3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"distCauchy", " ", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"a", ",", "b"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cauchyModel", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
     "\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", "distCauchy"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "100"}], "]"}], ",", " ", 
        RowBox[{"ExponentialDistribution", "[", 
         FractionBox["1", "100"], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\n", 
 RowBox[{"resultCauchy", "=", 
  RowBox[{
  "nestedSampling", "[", "cauchyModel", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"resultCauchy", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->
  "In[245]:=",ExpressionUUID->"fd76c0f0-eef8-40b7-ae81-5dc0553ce531"],

Cell[TextData[{
 "As you can see, the Cauchy model beats the normal model by about 5 points \
of logevidence or a factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Exp", "[", "5", "]"}], "\[Equal]", 
    FormBox["148.4131591025766`",
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "d474e952-2d91-4ef6-88df-bf471da1eb33"],
 "."
}], "Text",ExpressionUUID->"d07c7de5-6f28-42b8-a104-648b0d3014fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Brief explanation of the algorithm with interactive animation\
\>", "Subsubsection",ExpressionUUID->"3d147c61-b591-4dea-89b4-471c8bfd6168"],

Cell["\<\
The code below creates an animation visualising the process of generating \
samples from the posterior with the nested sampling algorithm:\
\>", "Text",ExpressionUUID->"084e5d42-fd8b-4900-9ef2-d11b793ee308"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"obj", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"CauchyDistribution", "[", 
       RowBox[{"a", ",", " ", 
        RowBox[{"Exp", "[", "logb", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"logb", ",", 
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<LocationParameter\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"result", " ", "=", 
   RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
    RowBox[{"obj", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]}], "Input",ExpressionUUID->"0e261c2d-c370-45cb-922f-a24f8673dc4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "nestedSamplingAnimation", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nestedSamplingAnimation", "[", 
    RowBox[{"result_", ",", " ", 
     RowBox[{"numberOfSlides", " ", ":", "_Integer", " ", ":", " ", "100"}], 
     ",", " ", "opts___"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"samples", "=", 
        RowBox[{"Values", "/@", 
         RowBox[{"Values", "@", 
          RowBox[{"Part", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"KeySort", "@", 
             RowBox[{"result", "[", "\"\<Samples\>\"", "]"}]}], ",", 
            "\[IndentingNewLine]", "All", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Point\>\"", ",", "\"\<LogLikelihood\>\""}], "}"}]}],
            "]"}]}]}]}], ",", "\[IndentingNewLine]", "subset", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"nLiveSamples", "=", 
        RowBox[{"result", "[", "\"\<SamplePoolSize\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"logLikelihood", " ", "=", " ", 
        RowBox[{"result", "[", "\"\<LogLikelihoodFunction\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"params", " ", "=", " ", 
        RowBox[{
         RowBox[{"result", "[", "\"\<Parameters\>\"", "]"}], "/.", 
         RowBox[{
          RowBox[{"DirectedInfinity", "[", "sign_", "]"}], "\[RuleDelayed]", 
          RowBox[{"sign", " ", "*", " ", "10"}]}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"subset", "=", 
         RowBox[{"TakeDrop", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"SortBy", "[", "Last", "]"}], "@", 
            RowBox[{"Take", "[", 
             RowBox[{"samples", ",", 
              RowBox[{"UpTo", "[", "n", "]"}]}], "]"}]}], ",", 
           RowBox[{"-", "nLiveSamples"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ContourPlot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"logLikelihood", "[", 
           RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"result", "[", "\"\<Parameters\>\"", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "opts", ",", "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"#", ",", "\"\<Text\>\"", ",", "16"}], "]"}], "&"}], 
             ")"}], "/@", 
            RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}]}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Red", ",", 
               RowBox[{"PointSize", "[", "0.01", "]"}], ",", " ", 
               RowBox[{"Point", "[", 
                RowBox[{"Rest", "@", 
                 RowBox[{"subset", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}], "]"}],
                ",", 
               RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"samples", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "+", "1"}], ",", "1"}], "]"}], "]"}], "]"}]}],
               "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"n", ">", "nLiveSamples"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Most", "@", 
                   RowBox[{"subset", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], 
                  "]"}], ",", 
                 RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
                 RowBox[{"Point", "[", 
                  RowBox[{"Last", "@", 
                   RowBox[{"subset", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], 
                  "]"}]}], "}"}], ",", "\[IndentingNewLine]", "Nothing"}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Contours", "\[Rule]", 
           RowBox[{"subset", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "All", ",", "2"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}], ",", 
                 "\"\<Alive\>\""}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Graphics", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"Disk", "[", "]"}]}], "}"}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", "10"}]}], "]"}], ",", 
                 "\"\<Dead\>\""}], "}"}]}], "}"}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", "\"\<Text\>\""}], ",", 
             RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", "nLiveSamples", ",", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"nLiveSamples", "+", "numberOfSlides"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], "]"}], "-", 
            "1"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[85]:=",ExpressionUUID->"36a9657d-bf90-4014-a040-93baef7e2b0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"slides", " ", "=", " ", 
   RowBox[{"nestedSamplingAnimation", "[", 
    RowBox[{"result", ",", "50"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "[", "\[IndentingNewLine]", 
  RowBox[{"slides", ",", "\[IndentingNewLine]", 
   RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",ExpressionUUID->"1093ff36-2c0a-44d2-8bb7-df0b62828884"],

Cell["The new sample generated in each step is obtained by:", \
"Text",ExpressionUUID->"2769c6ab-061d-427a-acab-479a8d536c68"],

Cell[CellGroupData[{

Cell["\<\
Picking one of the living samples at random. This already approximately \
samples the prior distribution if the living samples represent the prior \
well. Which they should, because the whole algorithm relies on that \
assumption.\
\>", "ItemNumbered",ExpressionUUID->"abf6b29f-f52c-4b2d-bfcf-32e4930505b3"],

Cell["\<\
Use Markov chain Monte Carlo (MCMC) to evolve the point and generate a new \
sample from a constrained version of the prior distribution. In simple terms, \
the prior density is set to zero wherever the loglikelihood function is less \
than the value of the worst currently living point. \
\>", "ItemNumbered",ExpressionUUID->"a14a4e3e-dd10-44a1-a415-c278dea6d329"]
}, Open  ]],

Cell["\<\
What you see in the animation is a contour plot of the loglikelihood \
function. Only the contours corresponding to dead samples are drawn, so the \
bright area in the center is the area where the likelihood is high enough to \
allow new samples to be drawn. 

In this animation you can clearly see the shells corresponding to \
(approximately) constant loglikelihood values. The evidence is estimated by \
estimating the volume of the prior contained in each of these shells. To put \
it into cooking terms: instead of integrating the posterior by dicing the \
domain into squares (like most integration methods do) and multiplying the \
volume of each square with the function value, the nested sampling algorithm \
works by peeling off the loglikelihood function like an onion. The volume of \
each onion peel cannot be derived exactly; it\[CloseCurlyQuote]s only known \
statistically. This is why the logevidence is reported with a standard error. \
\>", "Text",ExpressionUUID->"e153981e-9883-45b4-b647-ed0a85cf0a03"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["defineInferenceProblem and inferenceObject", \
"Subsection",ExpressionUUID->"941b4198-1153-45c4-baa9-2e7f28efe817"],

Cell["\<\
Here\[CloseCurlyQuote]s a typical usage example of defineInferenceProblem \
corresponding to the problem of inferencing the parameters of a normal \
distribution:\
\>", "Text",ExpressionUUID->"7d895088-c675-4a34-9786-255340e35a3d"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sigma", ",", "0", ",", "\[Infinity]"}], "}"}]}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"ProductDistribution", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "100"}], "]"}], ",", 
       RowBox[{"ExponentialDistribution", "[", 
        RowBox[{"1", "/", "100"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"229db5bd-6b08-495b-a533-454eca497c0b"],

Cell["\<\
Note the tooltip on the inferenceObject that gives a summary of its contents. \
The inferenceObject is basically just a wrapper for an Association that holds \
all relevant information. It\[CloseCurlyQuote]s important to note, though, \
that due to its typesetting you cannot copy-paste it in a notebook:\
\>", "Text",ExpressionUUID->"42e4b42e-e8f4-47c1-9b38-32b73edcffb1"],

Cell["\<\
This is intentional: if it was possible to copy-paste the object, it would be \
necessary to store potentially large amounts of data in the notebook, which \
would be slow.\
\>", "Text",ExpressionUUID->"c679e254-e3a8-4a9c-8027-42b5bc0098c5"],

Cell["\<\
This is how you check what properties are contained in the object:\
\>", "Text",ExpressionUUID->"8a107e1f-20c4-4c1f-a3b4-1f1117951021"],

Cell[BoxData[
 RowBox[{"obj", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->
  "In[210]:=",ExpressionUUID->"1e145958-b914-454b-a4d0-b89e59878fb4"],

Cell["\<\
You can add information manually, even properties that are just for your own \
convenience:\
\>", "Text",ExpressionUUID->"3e698b44-f3af-47d5-90d7-a19c9f1bdeb1"],

Cell[BoxData[{
 RowBox[{"obj", " ", "=", " ", 
  RowBox[{"Append", "[", 
   RowBox[{"obj", ",", " ", 
    RowBox[{"\"\<Name\>\"", "\[Rule]", " ", "\"\<Example\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Properties\>\"", "]"}]}], "Input",
 CellLabel->
  "In[213]:=",ExpressionUUID->"ed2efe4d-31b0-4c57-9f4f-22709228e942"],

Cell["\<\
To see what possible inputs there are for defining your problem, evaluate:\
\>", "Text",ExpressionUUID->"7ceccd37-8804-46d2-aa8a-15d95a9bbbc8"],

Cell[BoxData[
 RowBox[{"defineInferenceProblem", "[", "]"}]], "Input",
 CellLabel->
  "In[137]:=",ExpressionUUID->"97ccfc1b-d4e2-4e95-8d8d-ec1689c8fe9c"],

Cell["\<\
To run the nested sampling algorithm, we ultimately need to define the \
following properties:\
\>", "Text",ExpressionUUID->"79403abe-c914-4632-ac0e-c951f7a23119"],

Cell[CellGroupData[{

Cell["\<\
Parameters: A list specifying the parameters that are to be estimated and \
their limits (which are allowed to be infinite)\
\>", "Item",ExpressionUUID->"dedcbaac-08fb-440d-b792-4027247452f6"],

Cell["\<\
LogLikelihoodFunction: a function (preferably compiled) that evaluates the \
loglikelihood at a given point in the parameter space\
\>", "Item",ExpressionUUID->"7efc1576-57dc-4682-90c3-ea03125e110e"],

Cell["\<\
LogPriorPDFFunction: The logPDF function (preferably compiled) of the prior \
distribution (does not need to be normalised, but the computed evidence \
depends on its normalisation constant)\
\>", "Item",ExpressionUUID->"15133744-1b1f-4243-bf81-39dde16d063c"],

Cell["\<\
StartingPoints: A set of samples from the prior to use as a starting point\
\>", "Item",ExpressionUUID->"0cc6ffc5-a45a-4f5b-8cf3-0f0af5457e1e"]
}, Open  ]],

Cell["\<\
The role of defineInferenceProblem is to construct these properties from the \
properties supplied by the user. However, the you can forego the use of \
defineInferenceProblem by simply creating an association with the 4 required \
items and wrapping inferenceObject around it.\
\>", "Text",ExpressionUUID->"2578b9b2-508a-44a5-b9d5-a8478630ed22"],

Cell[TextData[{
 "The convention that is used throughout this package, is that the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "fe7357b8-dd27-4c63-9566-f76f793669ad"],
 " estimation parameters from an vector in ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "1878f550-b5e8-4bc6-948b-f3d82df18183"],
 "D space. For example, if the loglikelihood function is a function of 2 \
parameters, it should be of the form:"
}], "Text",ExpressionUUID->"298e3973-90b4-4529-99cc-49a8f76d6537"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"logLikelihood", "[", "paramVector_List", "]"}], ":=", " ", 
   RowBox[{"numericFunctionOf", "[", 
    RowBox[{
     RowBox[{"paramVector", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"paramVector", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",ExpressionUUID->"c63d85dc-a2d5-4209-9209-239524ab9c44"],

Cell[BoxData["$MachineLogZero"], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"abfea12f-767a-4206-963b-247dd18fc1e9"],

Cell[TextData[{
 "Furthermore, the code works best if we stay within the realm of machine \
numbers. However, since the log of zero cannot be represented in machine \
numbers, the package uses a value called ",
 StyleBox["$MachineLogZero",
  FontWeight->"Bold"],
 " instead:"
}], "Text",ExpressionUUID->"a22373cc-f058-4f76-82b5-12e0599b268c"],

Cell[BoxData["$MachineLogZero"], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"1e065af1-1a03-447e-8db1-714257167fc6"],

Cell["\<\
This value should be returned whenever the point in parameter space is \
outside of the support of the prior or loglikelihood. If you use \
defineInferenceProblem to create the loglikelihood and logprior PDF, this is \
handled automatically:\
\>", "Text",ExpressionUUID->"571b30ca-5609-4682-ae0e-d2ce69f3e8d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"-", "1"}]}], "}"}], "]"}]}], "Input",
 CellLabel->
  "In[221]:=",ExpressionUUID->"3bc9806e-4e55-4877-be73-33e722b5db3c"],

Cell[CellGroupData[{

Cell["Known issues:", \
"Subsubsection",ExpressionUUID->"0729daee-49c4-4576-8f19-0a1bafc498cd"],

Cell["\<\
Please note that if you specify an explicit PriorDistribution, the limits \
specified by the parameters will cut off the prior without adjusting the \
normalisation constant of the prior PDF:\
\>", "Text",ExpressionUUID->"299b2284-7d50-4983-9afd-e25b994ae4d2"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"obj", "=", 
       RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mu", ",", 
              RowBox[{"-", "lim"}], ",", "lim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sigma", ",", "0", ",", "lim"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
          RowBox[{"ProductDistribution", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "100"}], "]"}], ",", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"1", "/", "100"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "@", 
      RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "@", 
         RowBox[{
          RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"lim", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Infinity]", ",", "10"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[259]:=",ExpressionUUID->"f3198af2-e07d-4a59-83d2-d6241dab0731"],

Cell["\<\
When specifying the prior distribution as a list of distributions (in which \
case defineInferenceProblem will construct a ProductDistribution for you), \
the normalisation will be restored:\
\>", "Text",ExpressionUUID->"fd3663d4-f4e7-461a-9b0d-2c61859f0e61"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"obj", "=", 
       RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mu", ",", 
              RowBox[{"-", "lim"}], ",", "lim"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sigma", ",", "0", ",", "lim"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "100"}], "]"}], ",", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"1", "/", "100"}], "]"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Quiet", "@", 
      RowBox[{"NIntegrate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Exp", "@", 
         RowBox[{
          RowBox[{"obj", "[", "\"\<LogPriorPDFFunction\>\"", "]"}], "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"lim", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Infinity]", ",", "10"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[261]:=",ExpressionUUID->"51c650e7-5220-49ba-b915-269eca8a7773"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["General nested sampling problems", \
"Subsection",ExpressionUUID->"9c6d33f5-ad36-4bd4-aeec-91b49adb4607"],

Cell[CellGroupData[{

Cell["Fitting a Cauchy distribution", \
"Subsubsection",ExpressionUUID->"d999f0a5-3322-4d46-9a9d-41c72825f113"],

Cell["\<\
As a simple example, here is how you inference the parameters of a Cauchy \
distribution from some data. \
\>", "Text",ExpressionUUID->"525d5a1b-6599-4f60-a750-615a05128698"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{"obj", " ", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"CauchyDistribution", "[", 
      RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "is", " ", "an", " ", "optional", " ", "property", " ", 
     "that", " ", "we", " ", "attach", " ", "for", " ", "convenience"}], " ", 
    "*)"}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"89f371e4-4212-4849-8da4-bc154bf5086d"],

Cell["\<\
Note that the data has been transformed from a vector to a matrix as part of \
the standardisation process:\
\>", "Text",ExpressionUUID->"5d78d050-d9dc-499a-830a-46e8f3aafa1a"],

Cell[BoxData[{"testdata", "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Data\>\"", "]"}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"224b884a-511e-4a16-bf38-b70655db05e8"],

Cell["Run the algorithm with various options:", \
"Text",ExpressionUUID->"9c4464e2-9891-4e02-9d77-058970dec72a"],

Cell[CellGroupData[{

Cell["\<\
\[OpenCurlyDoubleQuote]MonteCarloSteps\[CloseCurlyDoubleQuote] determines how \
many MCMC steps to take to generate each new sample.\
\>", "Item",ExpressionUUID->"f6f25b18-9a75-484c-a926-863c57922e19"],

Cell["\<\
\"MinMaxAcceptanceRate\" determines the limits of the MCMC acceptance rate \
before the algorithm accepts a new sample. By default, no limits are imposed \
on the acceptance rate.\
\>", "Item",ExpressionUUID->"c8bc7da0-97aa-45a8-94d7-e409c07599c5"],

Cell["\<\
\"TerminationFraction\" determines how long the algorithm iterates before \
convergence is reached.\
\>", "Item",ExpressionUUID->"fc329690-1965-4b30-b23d-0dfe742e0b84"],

Cell["\<\
\[OpenCurlyDoubleQuote]MaxIterations\[CloseCurlyDoubleQuote] determines the \
maximum number of samples that will be generated.\
\>", "Item",ExpressionUUID->"6d70996d-94ab-4800-9bfa-2c408817d8a9"],

Cell["\<\
\[OpenCurlyDoubleQuote]MinIterations\[CloseCurlyDoubleQuote] specifies the \
minimum number of nested samples that will be generated. For loglikelihood \
functions that are sharply peaked, it may be necessary to increase this \
option value to make sure the algorithm finds the bulk of the posterior. \
\>", "Item",ExpressionUUID->"77316d2b-644a-4fba-8d49-fe53cae74570"],

Cell["\<\
\[OpenCurlyDoubleQuote]LogLikelihoodMaximum\[CloseCurlyDoubleQuote] allows \
the user to specify the maximum of the loglikelihood function if this is \
already known. Specifying this value will help the algorithm to determine \
when it should terminate.\
\>", "Item",ExpressionUUID->"ac030149-d506-4f53-b031-054ab7fcf768"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<LogEvidence\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<Properties\>\"", "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"51cb9ac9-9a78-449e-b410-15d3a99a7df9"],

Cell[TextData[{
 "The standard error on the logevidence is obtained by Monte Carlo sampling \
of the ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "440e60b9-c886-4254-af8b-17dbd4ebb325"],
 "-axis values of the integral as described by Skilling in chapter 8 of his \
paper. The \[OpenCurlyDoubleQuote]PostProcessSamplingRuns\
\[CloseCurlyDoubleQuote] option controls how many such Monte Carlo samples \
are used to compute this standard error."
}], "Text",ExpressionUUID->"10d23ac1-6bb4-4ef2-a8c3-2e241dbd0d41"],

Cell[TextData[{
 "To speed up the computation, you can use ",
 StyleBox["parallelNestedSampling",
  FontWeight->"Bold"],
 " to divide the process over multiple kernels. Instead of having 100 living \
points, you can run 4 kernels with each 25 living points each (which each \
converge faster than 1 process with 100 points) for a comparable result:"
}], "Text",ExpressionUUID->"6c8c1185-8eeb-4ed2-80d9-b7f19eeb5501"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "25"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"a47f8460-0e47-4cea-98c6-be14ffa00e40"],

Cell[TextData[{
 "Use the ",
 StyleBox["calculationReport",
  FontWeight->"Bold"],
 " function to get a quick overview of the result:"
}], "Text",ExpressionUUID->"b36a7a86-55b4-486c-80b8-7078d4f12129"],

Cell[BoxData[
 RowBox[{"calculationReport", "[", "result", "]"}]], "Input",
 CellLabel->
  "In[241]:=",ExpressionUUID->"eca11bcf-67d9-4333-b81f-c825f03583cd"],

Cell[TextData[{
 "Visualise the posterior distribution of the parameters ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "e252e61b-ed14-437e-aad4-042883d30c9b"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "32b510ec-e797-4af2-99a9-1ff625b8c58b"],
 ":"
}], "Text",ExpressionUUID->"cdc731db-c506-4ae3-980f-c094e1fa0c4c"],

Cell[BoxData[{
 RowBox[{"Mean", "[", 
  RowBox[{"result", "[", "\"\<EmpiricalPosteriorDistribution\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Covariance", "[", 
  RowBox[{"result", "[", "\"\<EmpiricalPosteriorDistribution\>\"", "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{"result", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\"", ",", "None"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PerformanceGoal", "\[Rule]", " ", "\"\<Speed\>\""}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"c8472bdd-c686-473b-8a7a-7a4601c77970"],

Cell[TextData[{
 "Note that the bubble chart above is cluttered up with many samples with \
very small weights. You can use the function ",
 StyleBox["takePosteriorFraction",
  FontWeight->"Bold"],
 " to discard the samples with the smallest weights and retain the most \
important samples. In the example below, 1% of the posterior mass is \
discarded:"
}], "Text",ExpressionUUID->"0c599086-253a-4d81-a9d0-c03bba2b3217"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"truncatedResult", " ", "=", " ", 
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", "\[IndentingNewLine]", 
  RowBox[{"truncatedResult", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "\"\<Log\>\"", ",", "None"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"5ea9102c-5b40-4d5d-b824-05ccb85bc18e"],

Cell[TextData[{
 "Plot the marginal PDFs of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "47bba337-f3a4-4c06-8d56-087fcba77dc5"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "4fae5fe1-6ef6-4767-9b99-dcac6868dde7"],
 ":"
}], "Text",ExpressionUUID->"d534d4d8-9d1d-446f-9d9a-ed0c8ed8214d"],

Cell[BoxData[{
 RowBox[{"posteriorMarginalPDFPlot1D", "[", 
  RowBox[{"truncatedResult", ",", "a", ",", 
   RowBox[{"ScalingFunctions", "->", "\"\<Log\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}], ",", "All"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorMarginalPDFPlot1D", "[", 
  RowBox[{"truncatedResult", ",", "b", ",", 
   RowBox[{"ScalingFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Log\>\"", ",", "\"\<Log\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.01", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"-", "6"}]}], ",", "All"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"48ab6113-e03d-46c6-b731-a97647066684"],

Cell["\<\
Compare the original distribution that generated the data with the Bayesian \
predictive distribution:\
\>", "Text",ExpressionUUID->"d1e714d7-a5a4-4948-bb3c-2eed94ddd266"],

Cell[BoxData[
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "truncatedResult", "]"}], ",", 
        "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", 
         RowBox[{"truncatedResult", ",", "\"\<MaximumLikelihood\>\""}], "]"}],
         ",", " ", "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", 
         RowBox[{"truncatedResult", ",", "\"\<MAP\>\""}], "]"}], ",", " ", 
        "x"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<OriginalDistribution\>\"", "]"}], ",", 
        "x"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Posterior predictive PDF\>\"", ",", " ", 
      "\"\<PDF based on maximum likelihood estimate\>\"", ",", 
      "\"\<PDF based on maximum posterior (MAP) estimate\>\"", ",", " ", 
      "\"\<PDF of original distribution\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"7cf996e1-36e2-4b55-878a-616faeff539e"],

Cell["\<\
Compute the evidence of a competing model to see if it offers a better \
explanation of the data. In this case the evidence is significantly lower for \
model 2, so the Cauchy distribution explains the data better than a normal \
distribution:\
\>", "Text",ExpressionUUID->"4b312315-a2f6-44eb-928a-02983d3d8e6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"obj2", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"NormalDistribution", "[", 
       RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{"result2", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj2", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"result2", "[", "\"\<LogEvidence\>\"", "]"}]}], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"2375529a-b224-4e04-8f0b-6cfce3e8ab9a"],

Cell[BoxData[
 RowBox[{"LogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "result", "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"predictiveDistribution", "[", "result2", "]"}], ",", "x"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<OriginalDistribution\>\"", "]"}], ",", 
        "x"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Posterior predictive PDF model 1\>\"", ",", " ", 
      "\"\<Posterior predictive PDF model 2\>\"", ",", " ", 
      "\"\<PDF of original distribution\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"97f91a6a-ea1c-4c7f-9959-e4123be4dd17"]
}, Closed]],

Cell[CellGroupData[{

Cell["MCMC", \
"Subsubsection",ExpressionUUID->"6df0983c-1b1b-440c-a4c4-51b695ade390"],

Cell[TextData[{
 "You can also sample the posterior directly. First create a \
MarkovChainObject for this problem with ",
 StyleBox["createMCMCChain",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"24a082b4-e90d-4cdb-8922-95838712bba9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"CauchyDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "25"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"obj", " ", "=", 
   RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
      RowBox[{"CauchyDistribution", "[", 
       RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}], 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "This", " ", "is", " ", "an", " ", "optional", " ", "property", " ", 
      "that", " ", "we", " ", "attach", " ", "for", " ", "convenience"}], " ",
      "*)"}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chain", " ", "=", 
  RowBox[{"createMCMCChain", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{"starting", " ", "point"}], "*)"}], "]"}]}]}], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"c03cda6e-aab6-4f26-85db-e64f054d65ee"],

Cell["\<\
This function also accepts logPDF functions directly. Use compiled functions \
for the best performance:\
\>", "Text",ExpressionUUID->"678c55f5-37b9-4f0b-86a2-b780be6284ab"],

Cell[BoxData[
 RowBox[{"chain", "=", 
  RowBox[{"createMCMCChain", "[", 
   RowBox[{
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"pt", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"-", " ", 
       RowBox[{"pt", ".", " ", "pt"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"b3d93961-d5b6-494b-9730-45ac35e8bfff"],

Cell["\<\
The MCMC sampler uses an adaptive algorithm that tries to learn the \
covariance of the distribution. Use the options of createMCMCChain to \
influence this behaviour:\
\>", "Text",ExpressionUUID->"30a92aa7-4b1d-4ddd-91f2-d79bdd62eea1"],

Cell[BoxData[
 RowBox[{"Options", "[", "createMCMCChain", "]"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"c2cbac19-e555-4e00-a2b2-24fb2aa3d0f9"],

Cell[TextData[{
 "Use ",
 StyleBox["iterateMCMC",
  FontWeight->"Bold"],
 " to sample the distribution. Note that this function changes the state of \
the chain:"
}], "Text",ExpressionUUID->"0db6235f-8c03-4840-a8a5-17e66708441c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"iterateMCMC", "[", 
    RowBox[{"chain", ",", "10000"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Burn", " ", "it", " ", "in", " ", "first"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"samples", "=", 
   RowBox[{"iterateMCMC", "[", 
    RowBox[{"chain", ",", "1000"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"1786c3e3-853e-469c-9b62-b3fc5eb40963"],

Cell[BoxData[{
 RowBox[{"Mean", "[", "samples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Covariance", "[", "samples", "]"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothDensityHistogram", "[", "samples", "]"}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"00ce2e35-e314-41b4-8752-909a7ab05a94"],

Cell["\<\
The MCMC methods are implemented in the Statistics`MCMC` context, which \
should be available in Mathematica 11.3. \
\>", "Text",ExpressionUUID->"6d55541d-5b34-40b7-abae-bbda629dbfe0"],

Cell[TextData[{
 "View the methods available for ",
 StyleBox["Statistics`MCMC`BuildMarkovChain",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"9314c488-ac0c-4d85-aa01-826f3d49210b"],

Cell[BoxData[
 RowBox[{"Statistics`MCMC`MCMCData", "[", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"963b3c26-6257-4333-bcd6-729d8890b084"],

Cell[TextData[{
 "This package uses the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], 
   TraditionalForm]],ExpressionUUID->"a0555bb2-8794-47a8-800d-c6733c5f0501"],
 " method. Here\[CloseCurlyQuote]s how you view more detailed information \
about this method:"
}], "Text",ExpressionUUID->"7820ab27-db86-488c-9328-45ca405c0c04"],

Cell[BoxData[{
 RowBox[{"Statistics`MCMC`MCMCData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], ",", 
   "\"\<Usage\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Statistics`MCMC`MCMCData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<AdaptiveMetropolis\>\"", ",", "\"\<Log\>\""}], "}"}], ",", 
   "\"\<Example\>\""}], "]"}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"3e742700-3633-46fe-9495-205d6d728fe8"],

Cell[TextData[{
 "Iteration of the Markov chain is done with ",
 StyleBox["Statistics`MCMC`MarkovChainIterate",
  FontWeight->"Bold"],
 ". It uses the following syntax:"
}], "Text",ExpressionUUID->"0fcf1a18-3c0c-4c5f-9060-4275e705bae3"],

Cell[BoxData[{
 RowBox[{"Statistics`MCMC`MarkovChainIterate", "[", 
  RowBox[{"MCobj", ",", 
   RowBox[{"num", " ", "of", " ", "samples"}]}], "]"}], "\n", 
 RowBox[{"Statistics`MCMC`MarkovChainIterate", "[", 
  RowBox[{"MCobj", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"num", " ", "of", " ", "samples"}], ",", " ", 
     RowBox[{
     "number", " ", "of", " ", "iterations", " ", "between", " ", "each", " ",
       "sample"}]}], "}"}]}], 
  "]"}]}], "Input",ExpressionUUID->"d8edc38a-393e-45f4-bb18-c9d7bf5709e9"]
}, Closed]],

Cell[CellGroupData[{

Cell["Fitting Normal data with a SkewNormal distribution", \
"Subsubsection",ExpressionUUID->"016c2ace-24ef-40c8-bc76-9fa490bc7769"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "50"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"<|", "|>"}]}], ";"}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"38adc9dc-eac0-479c-a54d-6998a43e56c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"SkewNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "20"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"<|", "|>"}]}], ";"}]}], "Input",
 CellLabel->
  "In[274]:=",ExpressionUUID->"05405bfa-ea1b-4ef9-954c-3eed34b6cc52"],

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PDF", "[", 
       RowBox[{
        RowBox[{"SkewNormalDistribution", "[", 
         RowBox[{"0", ",", "1", ",", "1"}], "]"}], ",", "x"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->
  "In[127]:=",ExpressionUUID->"73c88b0a-8a29-44a0-a23f-749ae325f129"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], " ", "=", " ", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"a", ",", " ", "b"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "0.1", ",", "10"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
        "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}],
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
   "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"d2028e80-3d63-4c29-8f38-87b677d35f29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], " ", "=", " ", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
       RowBox[{"SkewNormalDistribution", "[", 
        RowBox[{"a", ",", " ", "b", ",", " ", "c"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "0.1", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\"", ",", 
         " ", "\"\<LocationParameter\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<OriginalDistribution\>\"", " ", "\[Rule]", " ", "dist"}]}],
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "100"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
   "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"b622be28-9d7d-492b-a5d5-2abcbde9e3af"],

Cell[BoxData[{
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], ",", "0.99"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", "0.99"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{
     RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", "0.99"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"f1c4d1a3-c23d-4a42-a171-307b2577dd7d"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"testdata", ",", 
     RowBox[{"{", "0.1", "}"}], ",", "\"\<PDF\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"predictiveDistribution", "[", 
           RowBox[{"takePosteriorFraction", "[", 
            RowBox[{
             RowBox[{"result", "[", "\"\<Normal\>\"", "]"}], ",", "0.99"}], 
            "]"}], "]"}], ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"predictiveDistribution", "[", 
           RowBox[{"takePosteriorFraction", "[", 
            RowBox[{
             RowBox[{"result", "[", "\"\<SkewNormal\>\"", "]"}], ",", 
             "0.99"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[126]:=",ExpressionUUID->"cb413159-1ef0-4b82-bad8-056199db4cb0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Regression", \
"Subsubsection",ExpressionUUID->"005ca54c-da34-48e2-8493-06b12e6078d3"],

Cell["\<\
Regression problems can be specified as well. First define some test data:\
\>", "Text",ExpressionUUID->"210f6c26-ff10-449b-a992-93605abe9f4e"],

Cell[BoxData[{
 RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"testdata", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"#", "+", 
          RowBox[{"2", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "20"}], "]"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"List", "@@@", "testdata"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "testdata"}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"eda63068-e7af-4003-bbc7-9d06cd13dced"],

Cell[TextData[{
 "Note that the data is specified as a list of rules or as a rule of lists (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"in1", ",", " ", "in2", ",", " ", "..."}], "}"}], "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"out1", ",", " ", "out2", ",", " ", "..."}], "}"}]}], 
   TraditionalForm]],ExpressionUUID->"94b86c88-6243-4c65-9bd3-3e42dcf98f75"],
 ") just like in ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"Predict\"", "Text", Bold, StripOnInput -> False],
    "paclet:/ref/Predict"},
   "HyperlinkPaclet"]],ExpressionUUID->"bb40589d-ada4-4fb8-83d1-df5a5cb48876"],
 ". "
}], "Text",ExpressionUUID->"0bdd4ac7-ff0f-418c-87bb-4266a50cf842"],

Cell["\<\
The model is specified as a distribution that depends on an independent \
variable (note the standardisation of the data):\
\>", "Text",ExpressionUUID->"36901d8a-3775-4fb5-8a8e-528b395d42a4"],

Cell[BoxData[{
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"NormalDistribution", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"a", " ", "x"}], " ", "+", " ", "b"}], ",", 
       "\[IndentingNewLine]", "sigma"}], "\[IndentingNewLine]", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sigma", ",", "0.1", ",", "10"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "x", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LocationParameter\>\"", ",", "\"\<LocationParameter\>\"", ",", 
       " ", "\"\<ScaleParameter\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "[", "\"\<Data\>\"", "]"}]}], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"0bece909-f8bd-4067-914d-743675c6bff2"],

Cell[TextData[{
 "The functions ",
 StyleBox["predictiveDistribution",
  FontWeight->"Bold"],
 " and ",
 StyleBox["regressionPlot1D",
  FontWeight->"Bold"],
 " are useful helper functions to visualise the results:"
}], "Text",ExpressionUUID->"ab55195f-f51b-4a91-8906-e1197ad6bbbb"],

Cell[BoxData[{
 RowBox[{"result", "=", 
  RowBox[{"nestedSampling", "[", "obj", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "predictions"}], "]"}]}], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"d7c9dbb4-5f69-48f3-8a47-1d1c6af3ff80"],

Cell["\<\
You can visualise the different lines that are used in this result:\
\>", "Text",ExpressionUUID->"d4a4caf1-3ef6-48a0-8630-7c67f5267bd4"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"result", " ", "=", " ", 
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"points", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"result", "[", 
          RowBox[{
          "\"\<Samples\>\"", ",", " ", "All", ",", " ", "\"\<Point\>\""}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"weights", " ", "=", " ", 
        RowBox[{"Values", "@", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "-", 
              RowBox[{"Max", "[", "#", "]"}]}], "&"}], "@", 
            RowBox[{"result", "[", 
             RowBox[{
             "\"\<Samples\>\"", ",", " ", "All", ",", " ", 
              "\"\<LogPosteriorWeight\>\"", ",", "\"\<Mean\>\""}], "]"}]}], 
           "]"}]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"model", " ", "=", 
        RowBox[{"expressionToFunction", "[", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"\"\<GeneratingDistribution\>\"", ",", " ", "1"}], "]"}], 
          ",", 
          RowBox[{"result", "[", "\"\<ParameterSymbols\>\"", "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Show", " ", "@", " ", 
        RowBox[{"MapThread", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Evaluate", "@", 
              RowBox[{"model", "[", "#1", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Black", ",", 
                RowBox[{"Opacity", "[", "#2", "]"}]}], "]"}]}]}], "]"}], 
           "&"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"points", ",", "weights"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"List", "@@", 
           RowBox[{"(", 
            RowBox[{"Flatten", "/@", 
             RowBox[{"result", "[", "\"\<Data\>\"", "]"}]}], ")"}]}], "]"}], 
         ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"e90d9225-d094-4f01-8a3d-3f19cf209db4"],

Cell["Compare 3 polynomial models of increasing order:", \
"Text",ExpressionUUID->"0bee3961-019b-413b-a42c-5880deccbcd7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"variables", "[", "order_", "]"}], ":=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sequence", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Symbol", "[", 
           RowBox[{"\"\<c\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
          RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "order"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s0", ",", "0.01", ",", "100"}], "}"}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"result", "=", "\[IndentingNewLine]", 
  RowBox[{"Association", "@", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", "->", " ", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"obj", "=", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"vars", " ", "=", " ", 
              RowBox[{"variables", "[", "order", "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "testdata"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
               RowBox[{"NormalDistribution", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"vars", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{";;", 
                    RowBox[{"-", "2"}]}], ",", " ", "1"}], "]"}], "]"}], " ", 
                  ".", " ", 
                  RowBox[{"x", "^", 
                   RowBox[{"Range", "[", 
                    RowBox[{"0", ",", "order"}], "]"}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<Parameters\>\"", "\[Rule]", "vars"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
               RowBox[{"{", "x", "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
               RowBox[{"Append", "[", 
                RowBox[{
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"\"\<LocationParameter\>\"", ",", 
                   RowBox[{"order", "+", "1"}]}], "]"}], ",", " ", 
                 "\"\<ScaleParameter\>\""}], "]"}]}]}], "\[IndentingNewLine]",
              "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
         RowBox[{"obj", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "25"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "3000"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"order", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], 
    "]"}]}]}]}], \
"Input",ExpressionUUID->"73cf2cba-512c-4d18-849a-9b6f2a7c28ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"#", ",", 
     RowBox[{"predictiveDistribution", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "]"}]}], "]"}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"#", ",", "0.99"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
    "result"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[178]:=",ExpressionUUID->"094fb4a8-d123-4687-a48b-7234c6a1c4ce"]
}, Closed]],

Cell[CellGroupData[{

Cell["Classification using logistic regression", \
"Subsubsection",ExpressionUUID->"ac22ddcf-98bb-4da9-82e5-29d2481ef699"],

Cell[TextData[{
 "The following example data comes from the ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"Wikipedia article on logistic regression\"", "Text", 
     StripOnInput -> False],
    "https://en.wikipedia.org/wiki/Logistic_regression#Probability_of_passing_\
an_exam_versus_hours_of_study"},
   "HyperlinkURL"]],ExpressionUUID->"3c3b88c2-45e8-4acf-8453-0908df4ef923"],
 ":"
}], "Text",ExpressionUUID->"8c606cf4-c3c2-425d-9915-bbeffe6d4990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classificationData", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.5", ",", " ", "0.75", ",", " ", "1", ",", " ", "1.25", ",", " ", 
      "1.5", ",", " ", "1.75", ",", " ", "1.75", ",", " ", "2", ",", " ", 
      "2.25", ",", " ", "2.5", ",", " ", "2.75", ",", " ", "3", ",", " ", 
      "3.25", ",", " ", "3.5", ",", " ", "4", ",", " ", "4.25", ",", " ", 
      "4.5", ",", " ", "4.75", ",", " ", "5", ",", " ", "5.5"}], "}"}], " ", 
    "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
      " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", 
      ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", 
      "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", " ", "1", ",", 
      " ", "1"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"List", "@@", "classificationData"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Data + fit from Wikipedia\>\""}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1.5046", " ", "t"}], "-", "4.0777"}], ")"}]}], "]"}]}]], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"c80e7c48-2a33-4ca8-8579-b93a4b22b8b9"],

Cell["\<\
The model can be defined by putting a logistic sigmoid inside of a  \
BernoulliDistribution:\
\>", "Text",ExpressionUUID->"bc37140c-e72e-4f34-83e9-220b9f605ea8"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "classificationData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"BernoulliDistribution", "[", 
      RowBox[{"LogisticSigmoid", "[", 
       RowBox[{
        RowBox[{"a", " ", "t"}], " ", "+", " ", "b"}], "]"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "50"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "50"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"6459ff03-11f9-4fb3-944d-805df792bd71"],

Cell[TextData[{
 "Note the strong negative correlation between ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]],ExpressionUUID->
  "c02c783f-11f5-4979-921e-5871ec47cb19"],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "a864b4eb-1e88-48ac-9e37-c7b8ea0fe574"],
 " in the posterior distribution:"
}], "Text",ExpressionUUID->"f027b807-daf4-4760-b58f-17698adf1f34"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", " ", 
  RowBox[{"nestedSampling", "[", 
   RowBox[{"obj", ",", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"e6908fe6-a985-4b86-bb2d-665582340f10"],

Cell[TextData[{
 "To plot the regression probabilities, we need to pull the ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "787b6bdb-befa-4296-b59f-f4582b758176"],
 " values out of the Bernoulli distributions that are combined in the \
predictions:"
}], "Text",ExpressionUUID->"e9954343-51e2-46ce-98c1-2e4126d1c94d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"EmpiricalDistribution", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All", ",", "1"}], "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"predictiveDistribution", "[", 
     RowBox[{
      RowBox[{"takePosteriorFraction", "[", 
       RowBox[{"result", ",", "0.99"}], "]"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "6", ",", "0.25"}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"11c08d5b-373e-4092-81e6-773eef224a81"],

Cell["\<\
Plot the spread in the classification probabilities and compare with the \
maximum likelihood estimate:\
\>", "Text",ExpressionUUID->"6abcc83e-fd98-4843-9aa9-6287f115baf9"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", "predictions"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"First", "/@", 
      RowBox[{"predictiveDistribution", "[", 
       RowBox[{"result", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "6", ",", "0.25"}], "]"}], ",", " ", 
        "\"\<MaximumLikelihood\>\""}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"bc0e54bd-2323-434a-b0b5-232386fef056"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Logistic classification with multi dimensional input and multiple classes\
\>", "Subsubsection",ExpressionUUID->"4310b3b0-fd31-4d00-808c-36e1c98af187"],

Cell["\<\
Load the Fisher iris  example dataset and put it in a more usable form:\
\>", "Text",ExpressionUUID->"0de519a0-2239-471b-a64b-9d29608e2979"],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"dat", "  ", "=", 
      RowBox[{"ExampleData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], 
         "}"}], ",", "\"\<Data\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"classes", "=", 
      RowBox[{"Union", "@", 
       RowBox[{"dat", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nclasses", "=", 
      RowBox[{"Length", "[", "classes", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"MapAt", "[", 
       RowBox[{
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}], ",", "dat",
         ",", 
        RowBox[{"{", 
         RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nInputFeatures", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"367bec5b-76de-4b37-878c-8192777187c6"],

Cell["Normalise the input features:", \
"Text",ExpressionUUID->"ebc1c94c-e438-416c-9dbd-30f9b029a040"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"normalInputData", "=", 
   RowBox[{"normalizeData", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
   RowBox[{"normalInputData", "[", "\"\<NormalizedData\>\"", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"cf8d7871-74f7-4660-9224-278062d09a98"],

Cell["\<\
The first thing to do, is to define a higher dimensional version of the \
BernoulliDistribution. We can do this with ProbabilityDistribution:\
\>", "Text",ExpressionUUID->"ce1046b2-16a1-470c-9679-a4ec3ce7d63a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "dist", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dist", "[", "pvector_List", "]"}], ":=", 
   RowBox[{"ProbabilityDistribution", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Total", " ", "@", " ", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", "*", 
          RowBox[{"Boole", "[", 
           RowBox[{"class", "\[Equal]", 
            RowBox[{"First", "[", "#2", "]"}]}], "]"}]}], "&"}], ",", 
        "pvector"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"class", ",", "1", ",", 
       RowBox[{"Length", "[", "pvector", "]"}], ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",ExpressionUUID->"82166071-81e9-4d88-9e7b-f88219d6d023"],

Cell[TextData[{
 "To map the 4 input features onto a probability vector of length 3, we first \
define a parameterised ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[Times]", "4"}], TraditionalForm]],ExpressionUUID->
  "3090d54c-f530-4dde-ad38-eb6f8af87c80"],
 " matrix and a length-2 bias vector:"
}], "Text",ExpressionUUID->"a3840cad-60d4-4f85-a944-845810be4b38"],

Cell[BoxData[{
 RowBox[{"matrix", "=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<a`1``2`\>\"", ",", "#1", ",", "#2"}], "]"}]}], "]"}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nclasses", "-", "1"}], ",", "nInputFeatures"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"biases", " ", "=", " ", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<b`1`\>\"", ",", "#1"}], "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"nclasses", "-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"inputCoord", " ", "=", " ", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"ToString", "@", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<x`1`\>\"", ",", "#1"}], "]"}]}], "]"}], "&"}], ",", 
    "nInputFeatures"}], "]"}]}]}], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"6903f44e-0fb2-4560-b2ec-9f790fbc7859"],

Cell[TextData[{
 "Use a modified softmax operation to turn the 2D regression vector into a 3D \
probability vector (see ",
 Cell[BoxData[
  TemplateBox[{
   StyleBox["\"https://en.wikipedia.org/wiki/Multinomial_logistic_regression#\
As_a_log-linear_model\"", "Text", StripOnInput -> False],
    "https://en.wikipedia.org/wiki/Multinomial_logistic_regression#As_a_log-\
linear_model"},
   "HyperlinkURL"]],ExpressionUUID->"a54dd6e8-5e24-4492-8a8e-dfc48e70acf6"],
 "):"
}], "Text",ExpressionUUID->"bf60edd4-222e-48ec-83d1-cec43e1a95d1"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"dist", "@", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"matrix", ".", "inputCoord"}], "+", "biases"}], "]"}], ",", 
       "1"}], "]"}], ",", "Total"}], "]"}]}]}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"4aabf11a-e9a5-4f8f-8df5-3fec07f2a3d5"],

Cell["\<\
Combine everything to define the inference problem and sample it:\
\>", "Text",ExpressionUUID->"14184c9a-5b58-404a-b178-889b87afb594"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "data"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", "\[Rule]", "model"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", " ", "\[Rule]", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"matrix", ",", "biases"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"sym", ",", 
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"matrix", ",", "biases"}], "}"}], "]"}]}], "}"}]}], 
      "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", "inputCoord"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"acf793f5-e047-415a-b3ed-5c1070fc9e07"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"parallelNestedSampling", "[", "obj", "]"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"7f13cc42-0dc3-4b28-8ba9-926f253b4e11"],

Cell["Generate the predicted probability vectors:", \
"Text",ExpressionUUID->"b5048ba9-88e8-4c66-b6a6-c7c9ae730cea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "distToProbabilityVector", "[", "dist_ProbabilityDistribution", "]"}], ":=", 
  RowBox[{"PDF", "[", 
   RowBox[{"dist", ",", 
    RowBox[{"Range", "@@", 
     RowBox[{"Rest", "[", 
      RowBox[{"dist", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"EmpiricalDistribution", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
       RowBox[{"distToProbabilityVector", "/@", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"predictiveDistribution", "[", 
     RowBox[{
      RowBox[{"takePosteriorFraction", "[", 
       RowBox[{"result", ",", "0.99"}], "]"}], ",", 
      RowBox[{"result", "[", 
       RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}]}], "]"}]}]}], 
  ";"}]}], "Input",ExpressionUUID->"1269449d-1f1d-457f-b64e-2fd3e536a86a"],

Cell["\<\
Find out which examples have the greatest spread in classification \
probabilities:\
\>", "Text",ExpressionUUID->"14ca8532-fc82-429d-9d06-654b266f2ef4"],

Cell[BoxData[
 RowBox[{"SortBy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"MarginalDistribution", "[", 
          RowBox[{"#", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.5", ",", "0.9"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], "&"}], "/@", "predictions"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"Abs", "@*", 
        RowBox[{"Apply", "[", "Subtract", "]"}], "@*", "MinMax"}], "/@", 
       "#"}], "]"}]}], "&"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[100]:=",ExpressionUUID->"ea1585c3-5c25-45e7-96b2-51f875050211"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gaussian process regression", \
"Subsubsection",ExpressionUUID->"264c8155-84ba-40b0-93fa-8bb915e32da9"],

Cell["\<\
The package contains helper functions to help construct the loglikelihood \
function of a Gaussian process (GP). This makes it possible to infer the \
model parameters of GPs in a Bayesian way with nested sampling.\
\>", "Text",ExpressionUUID->"279669c9-862f-4f76-aed4-28f7062b83a1"],

Cell["Construct a test dataset:", \
"Text",ExpressionUUID->"c7a41460-86d3-4e0b-a7d5-98b23eb81f25"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}], ",", "20"}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"x", "\[Rule]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Function", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"0.5", " ", "#"}], "]"}], "+", 
           RowBox[{"0.4", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "#"}], "]"}]}], "+", 
           RowBox[{"0.4", "#"}], "+", "1", "+", 
           RowBox[{"0.3", "*", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{
              RowBox[{"NormalDistribution", "[", "]"}], ",", 
              RowBox[{"Length", "[", "x", "]"}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], "[", 
         RowBox[{"x", "+", 
          RowBox[{"0.2", "*", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", "]"}], ",", 
             RowBox[{"Length", "[", "x", "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"testdataPlot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"List", "@@@", 
     RowBox[{"Thread", "[", "testdata", "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[350]:=",ExpressionUUID->"80d48443-5e1c-4a65-a617-ae2b51124942"],

Cell[TextData[{
 "To illustrate how a Gaussian process works, consider the Manipulate below. \
It uses ",
 StyleBox["predictFromGaussianProcess",
  FontWeight->"Bold"],
 " to create predictions from test data and the specified GP model functions. \
In this package, a GP is defined by 3 functions:"
}], "Text",ExpressionUUID->"d74b2588-b7e7-4618-8e9a-fe71791fd8e4"],

Cell[TextData[{
 "A covariance kernel function that accepts to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "220bb9e8-8c30-4168-981c-b49bb6743b45"],
 "-values (note that our conventions stipulate that these are always lists, \
even for 1D regression) and produces a real number. A typical covariance \
kernel with tunable parameters is, for example:"
}], "Item",ExpressionUUID->"5e30a4d6-5d98-46fc-b136-9e6696ac23fc"],

Cell[BoxData[
 RowBox[{"kernel", " ", "=", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], ",", 
    RowBox[{
     SuperscriptBox["\[Sigma]1", "2"], " ", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"x1", ",", " ", "x2"}], "]"}], "lengthScale"], ")"}], 
        "2"]}], "]"}]}]}], 
   "]"}]}]], "Input",ExpressionUUID->"d28b0bf5-0c60-4061-8335-368885a84516"],

Cell[TextData[{
 "A noise level function (sometimes also called \[OpenCurlyDoubleQuote]nugget\
\[CloseCurlyDoubleQuote]). This is a function from a single ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ca0cc0d9-c107-4c1d-9a31-89dcdf4c68f2"],
 " value to a positive real number. To model a constant noise level, you \
simply specify a constant function:"
}], "Item",ExpressionUUID->"0ec2d0e2-64ad-4369-b04a-18835e213fd4"],

Cell[BoxData[
 RowBox[{"nugget", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", 
    SuperscriptBox["\[Sigma]0", "2"]}], 
   "]"}]}]], "Input",ExpressionUUID->"b30d53f0-20da-468b-b670-f0a372202523"],

Cell[TextData[{
 "However, it\[CloseCurlyQuote]s not necessary to make the nugget constant: \
it can be any function of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "519b2c18-6c24-4327-96c6-efb11cbddca3"],
 " that is deemed appropriate. The nugget is allowed to be zero, but usually \
the calculations are more numerically stable if there\[CloseCurlyQuote]s at \
least a little bit of noise incorporated into the model."
}], "Text",ExpressionUUID->"fa54513d-aa15-4c2d-85ef-78c140e06b18"],

Cell["\<\
A mean function. Essentially, this is a trend-removing function. Often, this \
function is just a constant, just like the nugget function, such as:\
\>", "Item",ExpressionUUID->"8df6a305-4708-4843-a12d-c7a24b9f2eb1"],

Cell[BoxData[
 RowBox[{"mean", " ", "=", " ", 
  RowBox[{"Function", "[", 
   RowBox[{"x", ",", "\[Mu]"}], 
   "]"}]}]], "Input",ExpressionUUID->"76662d75-5dbb-414c-b23d-dca5fab8a93d"],

Cell[TextData[{
 "Any of these functions can be set to ",
 StyleBox["None",
  FontWeight->"Bold"],
 " in the code, in which case they get replaced by the zero function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "&"}], TraditionalForm]],ExpressionUUID->
  "d650dd3c-b3a3-401c-8323-9f7201504b23"],
 "."
}], "Text",ExpressionUUID->"37e4b6c5-4ee0-4ecd-8707-b045a4204c4a"],

Cell[TextData[{
 "As a small remark about the predictions made from the GP: we chose to \
incorporate the nugget variance into the prediction errors. Sometimes this \
isn\[CloseCurlyQuote]t done when the nugget is assumed to model measurement \
error, in which case the predictions are assumed to model the true response \
value at a given point ",
 StyleBox["x",
  FontSlant->"Italic"],
 " rather than the measurement result at a given point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "88f1ac05-09f4-4cef-aa8f-da6fd055b58f"],
 ". In other words, the code in this package will always model the \
measurements. "
}], "Text",ExpressionUUID->"80a50f1d-aa64-47b7-92b4-2e59a8bb20bd"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Quiet", "@", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"testdataPlot", ",", "\[IndentingNewLine]", 
      RowBox[{"regressionPlot1D", "[", "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"predictFromGaussianProcess", "[", "\[IndentingNewLine]", 
         RowBox[{"testdata", ",", "\[IndentingNewLine]", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "10", ",", "0.1"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s1", "2"], " ", 
            RowBox[{"fun", "@", 
             RowBox[{"Abs", "[", 
              RowBox[{"(", 
               FractionBox[
                RowBox[{"First", "[", 
                 RowBox[{"#1", "-", "#2"}], "]"}], "d"], ")"}], "]"}]}]}], 
           "&"}], ",", " ", 
          RowBox[{"(*", 
           RowBox[{"covariance", " ", "kernel", " ", "function"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           SuperscriptBox["s0", "2"], "&"}], ",", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"noise", " ", "function"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"m", "&"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{"mean", " ", "function"}], " ", "*)"}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "->", "All"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fun", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          SuperscriptBox["#", "2"]}], "]"}], "&"}], ",", "\"\<Type\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           SuperscriptBox["#", "2"]}], "]"}], "&"}], "\[Rule]", " ", 
        "\"\<Exp[-\!\(\*SuperscriptBox[\(d\), \(2\)]\)]\>\""}], ",", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", 
           SuperscriptBox["#", "2"]}]], "&"}], "\[Rule]", " ", 
        "\"\<\!\(\*FractionBox[\(1\), \(1 + \*SuperscriptBox[\(d\), \(2\)]\)]\
\)\>\""}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "\"\<Length scale\>\""}], "}"}], ",", "0.2",
      ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "1", ",", "\"\<Covariance strength\>\""}], "}"}], 
     ",", "0.1", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s0", ",", "0.5", ",", "\"\<Noise level\>\""}], "}"}], ",", 
     "0.1", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "3", ",", "\"\<Mean\>\""}], "}"}], ",", "0", ",", 
     "5"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[352]:=",ExpressionUUID->"8aca103c-4e6e-4eee-a936-66dbbb668224"],

Cell[TextData[{
 "To perform GP regression, it\[CloseCurlyQuote]s usually a good idea to \
normalise the data first. The function ",
 StyleBox["normalizeData",
  FontWeight->"Bold"],
 " takes care of this and returns not only the normalised data but also the \
function (and inverse function) that was used for the normalisation:"
}], "Text",ExpressionUUID->"c15efe8d-9f7f-4bfc-a14c-fa782c404a77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"norm", "=", 
   RowBox[{"normalizeData", "[", "testdata", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"norm", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "\"\<NormalizedData\>\""}], "]"}], "]"}]}], "Input",
 CellLabel->
  "In[353]:=",ExpressionUUID->"dbd56840-4c5a-4f76-b312-8e0928231023"],

Cell["Reconstruct the original inputs:", \
"Text",ExpressionUUID->"95462184-e3c6-4a1c-8959-c7f8ded55dd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"norm", "[", 
   RowBox[{"\"\<Input\>\"", ",", "\"\<InverseFunction\>\""}], "]"}], "@", 
  RowBox[{"norm", "[", 
   RowBox[{"\"\<Input\>\"", ",", "\"\<NormalizedData\>\""}], "]"}]}]], "Input",
 CellLabel->
  "In[355]:=",ExpressionUUID->"14c3470f-5cb7-4576-bc02-2d6c52f6b5b2"],

Cell["Define a GP and perform nested sampling on it:", \
"Text",ExpressionUUID->"a2d8e085-6e62-4d7f-8966-7a5b6f263b7d"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineGaussianProcess", "[", "\[IndentingNewLine]", 
   RowBox[{"norm", ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "kernel", " ", "function", " ", "with", " ", "free", " ", 
       "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dsq", "=", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"First", "[", 
             RowBox[{"Subtract", "[", 
              RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "l"], ")"}], "2"]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        SuperscriptBox["s1", "2"], " ", "*", 
        RowBox[{"Boole", "[", 
         RowBox[{"dsq", "<", 
          SuperscriptBox["6", "2"]}], "]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "dsq"}], "]"}]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Use", " ", "a", " ", "truncated", " ", "kernel", " ", "to", " ", 
        "make", " ", "the", " ", "covariance", " ", "matrix", " ", "sparser", 
        " ", "for", " ", "small", " ", "values", " ", "of", " ", "l"}], " ", 
       "*)"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     SuperscriptBox["s0", "2"], "]"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "nugget", " ", "function", " ", "with", " ", "free", " ", "parameters"}],
      " ", "*)"}], "\[IndentingNewLine]", "None", ",", 
    RowBox[{"(*", " ", 
     RowBox[{
     "mean", " ", "function", " ", "with", " ", "free", " ", "parameters"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s1", ",", "0.05", ",", "20"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0.05", ",", " ", "30"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"s0", ",", "0.05", ",", "20"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ScaleParameter\>\"", ",", " ", "\"\<ScaleParameter\>\"", ",", 
      "\"\<ScaleParameter\>\"", ",", " ", "\"\<LocationParameter\>\""}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<LogLikelihoodFunction\>\"", " ", "\[Rule]", " ", 
     "\"\<Compiled\>\""}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Setting", " ", "this", " ", "to", " ", "Automatic", " ", "will", " ", 
      "use", " ", "the", " ", "build"}], "-", 
     RowBox[{"in", " ", "functionality", " ", "of", " ", 
      RowBox[{"LogLikelihood", ".", " ", "You"}], " ", "can", " ", "also", 
      " ", "specify", " ", "a", " ", "function", " ", "explicitely"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"1aa21abf-8a3e-4e4e-9f6a-1625bab22d65"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", " ", "\[Rule]", " ", "25"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "10000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[366]:=",ExpressionUUID->"3232c939-b35d-4150-930a-3d100c4211b3"],

Cell[BoxData[{
 RowBox[{"covarianceMatrixPlot", "[", "result", "]"}], "\n", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s0", ",", "s1", ",", "l"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[367]:=",ExpressionUUID->"93091536-6b82-464c-9ddd-e795673cb45c"],

Cell["Visualise the predictions:", \
"Text",ExpressionUUID->"ea5dd347-5301-4b01-a412-c61318e6a009"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", " ", "=", " ", 
   RowBox[{"predictFromGaussianProcess", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.99"}], "]"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "2.5"}], ",", "2.5", ",", "0.2"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", " ", "predictions"}], "]"}]}], "Input",
 CellLabel->
  "In[369]:=",ExpressionUUID->"18f7fd72-b160-4bdb-9712-01cd3a87a018"],

Cell[BoxData[
 RowBox[{"calculationReport", "[", "result", "]"}]], "Input",
 CellLabel->"In[371]:=",ExpressionUUID->"1ad9895f-d50c-4eb6-ab16-e35bc4035b66"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting with time series processes", \
"Subsection",ExpressionUUID->"2f0246ac-afdb-478c-bf4d-e3c48ef44673"],

Cell[CellGroupData[{

Cell["Data preparation", \
"Subsubsection",ExpressionUUID->"8b0280ad-78af-4fe3-951c-de8eb28a2767"],

Cell["Get some timeseries data:", \
"Text",ExpressionUUID->"8b95a3a6-9fba-44ab-a347-2f86ca9bf8d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<AS:ASML\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Today", "-", 
        TemplateBox[{"3","\"mo\"","months","\"Months\""},
         "Quantity"]}], ",", "Today"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"DateListPlot", "[", "data", 
  "]"}]}], "Input",ExpressionUUID->"98599f55-defc-452c-803a-46d006653df6"],

Cell["Alternatively, you can use the following pre-cached data:", \
"Text",ExpressionUUID->"d756215f-7f43-4433-8003-450bf9d73c40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Array",TagBox["List", "IconizedNameLight"],GridBox[{{
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"65", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["12536", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {{{2018, 9, 18}, 160.26}, {{2018, 9, 19}, 161.04}, {{2018, 9, 20}, 
      161.92}, {{2018, 9, 21}, 161.68}, {{2018, 9, 24}, 162.14}, {{2018, 9, 
      25}, 162.26}, {{2018, 9, 26}, 161.54}, {{2018, 9, 27}, 162.44}, {{2018, 
      9, 28}, 160.9}, {{2018, 10, 1}, 164.9}, {{2018, 10, 2}, 165.72}, {{2018,
       10, 3}, 164.88}, {{2018, 10, 4}, 162.8}, {{2018, 10, 5}, 160.26}, {{
      2018, 10, 8}, 157.74}, {{2018, 10, 9}, 159.12}, {{2018, 10, 10}, 
      150.36}, {{2018, 10, 11}, 150.}, {{2018, 10, 12}, 149.38}, {{2018, 10, 
      15}, 150.18}, {{2018, 10, 16}, 155.}, {{2018, 10, 17}, 160.38}, {{2018, 
      10, 18}, 155.32}, {{2018, 10, 19}, 153.82}, {{2018, 10, 22}, 152.78}, {{
      2018, 10, 23}, 147.86}, {{2018, 10, 24}, 142.46}, {{2018, 10, 25}, 
      147.52}, {{2018, 10, 26}, 145.96}, {{2018, 10, 29}, 145.22}, {{2018, 10,
       30}, 147.74}, {{2018, 10, 31}, 150.92}, {{2018, 11, 1}, 151.96}, {{
      2018, 11, 2}, 152.9}, {{2018, 11, 5}, 150.28}, {{2018, 11, 6}, 
      154.48}, {{2018, 11, 7}, 154.74}, {{2018, 11, 8}, 153.64}, {{2018, 11, 
      9}, 152.22}, {{2018, 11, 12}, 148.9}, {{2018, 11, 13}, 153.16}, {{2018, 
      11, 14}, 153.02}, {{2018, 11, 15}, 152.3}, {{2018, 11, 16}, 147.74}, {{
      2018, 11, 19}, 143.96}, {{2018, 11, 20}, 141.28}, {{2018, 11, 21}, 
      145.3}, {{2018, 11, 22}, 142.74}, {{2018, 11, 23}, 144.5}, {{2018, 11, 
      26}, 146.66}, {{2018, 11, 27}, 148.58}, {{2018, 11, 28}, 149.86}, {{
      2018, 11, 29}, 151.24}, {{2018, 11, 30}, 149.1}, {{2018, 12, 3}, 
      154.04}, {{2018, 12, 4}, 153.16}, {{2018, 12, 5}, 149.32}, {{2018, 12, 
      6}, 143.56}, {{2018, 12, 7}, 141.56}, {{2018, 12, 10}, 140.64}, {{2018, 
      12, 11}, 142.94}, {{2018, 12, 12}, 146.36}, {{2018, 12, 13}, 144.72}, {{
      2018, 12, 14}, 144.08}, {{2018, 12, 17}, 144.48}},
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\n", 
 RowBox[{"DateListPlot", "[", "data", "]"}]}], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"0bda4f10-3ba8-4552-bd6d-66ab83e9556a"],

Cell["\<\
Transform the time axis and separate the starting point from the rest:\
\>", "Text",ExpressionUUID->"0a9177e6-89f4-4363-81ef-b2e9610208f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"N", "@", 
    RowBox[{"TimeSeriesRescale", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", ",", "ts"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", 
   RowBox[{"start", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", " ", "=", 
   RowBox[{"TimeSeries", "[", "ts", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"04cb4d59-e2ca-461f-b8cd-032e5c08c094"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simplest method: fitting the points independently", \
"Subsubsection",ExpressionUUID->"7d98a901-af68-401a-a6e7-6a76a0b851b7"],

Cell[TextData[{
 "Define the inference problem. Note that this works because ",
 StyleBox["GeometricBrownianMotionProcess",
  FontWeight->"Bold"],
 " evaluates symbolically to a ",
 StyleBox["LogNormalDistribution",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"0710e344-8102-4209-83df-4ba39210f3b4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"process", " ", "=", " ", 
    RowBox[{"GeometricBrownianMotionProcess", "[", 
     RowBox[{"mu", ",", " ", 
      RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"using", " ", 
    RowBox[{"Exp", "[", "logsigma", "]"}], " ", "makes", " ", "it", " ", 
    "easier", " ", "to", " ", "search", " ", "for", " ", "sigma", " ", 
    "values", " ", "over", " ", "a", " ", "large", " ", "range", " ", "of", 
    " ", "values"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "ts"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"process", "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"ebe34a11-9469-4498-adf5-59279e84fbae"],

Cell["\<\
This is a simple way to do it, but the data are now modeled independently of \
each other (they are all modeled as realisations of a lognormal \
distribution). Compare the following:\
\>", "Text",ExpressionUUID->"30708932-1b66-4c86-b1fb-0676f1627921"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu", "=", "0"}], ",", 
     RowBox[{"logsigma", "=", 
      RowBox[{"-", "4"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "@", 
     RowBox[{
      RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "logsigma"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"LogLikelihood", "[", 
      RowBox[{
       RowBox[{"GeometricBrownianMotionProcess", "[", 
        RowBox[{"mu", ",", " ", 
         RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}], 
       ",", "ts"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"a5242e2d-8945-4de1-94e0-6d0f5ce6a88b"],

Cell["\<\
In the next section it will be shown how to use the process loglikelihood \
instead.\
\>", "Text",ExpressionUUID->"afe11739-1269-4240-ab2f-e1aee2b4e0f8"],

Cell["Run the sampler:", \
"Text",ExpressionUUID->"fe1859aa-e3b7-42f3-b0d9-b5f991cafad4"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "20"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.001"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"e9b8d4e8-ffe0-4ff4-a473-6b1f6f62fe58"],

Cell["\<\
Plot the error bands of the process when you run it from the starting date:\
\>", "Text",ExpressionUUID->"18d6227d-ad2c-4c09-a795-54140841b9bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", " ", "=", " ", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{
     RowBox[{"takePosteriorFraction", "[", 
      RowBox[{"result", ",", "0.95"}], "]"}], ",", 
     RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"plot", "=", 
  RowBox[{"regressionPlot1D", "[", 
   RowBox[{"result", ",", "predictions"}], "]"}]}]}], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"782c4152-0131-4f06-8d27-f55a27d47c5e"],

Cell[BoxData[
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"1cdf66ec-b81a-454c-87e4-e8f4b3b315ee"],

Cell["Extrapolate from the last know data point:", \
"Text",ExpressionUUID->"eef90003-a712-42d3-bbad-645466f46ad4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extrapolations", " ", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"lastPoint", " ", "=", " ", 
       RowBox[{"Last", "@", 
        RowBox[{"Normal", "[", "ts", "]"}]}]}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Append", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"takePosteriorFraction", "[", 
          RowBox[{"result", ",", "0.95"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", 
          RowBox[{
           RowBox[{"GeometricBrownianMotionProcess", "[", 
            RowBox[{"mu", ",", " ", 
             RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", 
             RowBox[{"lastPoint", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"t", " ", "-", " ", 
            RowBox[{"lastPoint", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], " ", 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"lastPoint", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ",", 
         RowBox[{
          RowBox[{"lastPoint", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "20"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "extrapolations", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"5ee3e7e8-696f-499c-a254-6396784b205b"],

Cell["\<\
It\[CloseCurlyQuote]s instructive to compare these predictions with the \
point-estimate from the best sample found. This gives you a good idea wether \
or not you can approximate the posterior with a point-estimate:\
\>", "Text",ExpressionUUID->"d4906e52-6504-4da6-a000-fd0281460c5d"],

Cell[BoxData[{
 RowBox[{"estproc", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"GeometricBrownianMotionProcess", "[", 
     RowBox[{"#1", ",", " ", 
      RowBox[{"Exp", "[", "#2", "]"}], ",", " ", "start"}], "]"}], "&"}], "@@", 
   RowBox[{
    RowBox[{"First", "[", 
     RowBox[{"TakeLargestBy", "[", 
      RowBox[{
       RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], ",", 
       RowBox[{"#LogLikelihood", "&"}], ",", "1"}], "]"}], "]"}], "[", 
    "\"\<Point\>\"", "]"}]}]}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"plot", ",", "\[IndentingNewLine]", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", 
     RowBox[{"AssociationMap", "[", 
      RowBox[{"estproc", ",", 
       RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"7b61917c-483f-49c3-90b3-1bdcf0a3d9b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Sequentially dependent loglikelihood using the built-in functionality of \
LogLikelihood\
\>", "Subsubsection",ExpressionUUID->"eeffe8a0-0540-445d-a90a-7f016a8e0f25"],

Cell[TextData[{
 "Taking the situations in the previous section as an example, it might occur \
that you want to use the built-in ",
 StyleBox["LogLikelihood",
  FontWeight->"Bold"],
 " function directly. This can be achieved with the following code, where we \
use ",
 StyleBox["expressionToFunction",
  FontWeight->"Bold"],
 " to create a function of the right form (one that accepts its arguments as \
a list):"
}], "Text",ExpressionUUID->"bd916e49-3630-4134-8237-ce5771909b4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Array",TagBox["List", "IconizedNameLight"],GridBox[{{
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"65", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["12536", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {{{2018, 9, 18}, 160.26}, {{2018, 9, 19}, 161.04}, {{2018, 9, 20}, 
      161.92}, {{2018, 9, 21}, 161.68}, {{2018, 9, 24}, 162.14}, {{2018, 9, 
      25}, 162.26}, {{2018, 9, 26}, 161.54}, {{2018, 9, 27}, 162.44}, {{2018, 
      9, 28}, 160.9}, {{2018, 10, 1}, 164.9}, {{2018, 10, 2}, 165.72}, {{2018,
       10, 3}, 164.88}, {{2018, 10, 4}, 162.8}, {{2018, 10, 5}, 160.26}, {{
      2018, 10, 8}, 157.74}, {{2018, 10, 9}, 159.12}, {{2018, 10, 10}, 
      150.36}, {{2018, 10, 11}, 150.}, {{2018, 10, 12}, 149.38}, {{2018, 10, 
      15}, 150.18}, {{2018, 10, 16}, 155.}, {{2018, 10, 17}, 160.38}, {{2018, 
      10, 18}, 155.32}, {{2018, 10, 19}, 153.82}, {{2018, 10, 22}, 152.78}, {{
      2018, 10, 23}, 147.86}, {{2018, 10, 24}, 142.46}, {{2018, 10, 25}, 
      147.52}, {{2018, 10, 26}, 145.96}, {{2018, 10, 29}, 145.22}, {{2018, 10,
       30}, 147.74}, {{2018, 10, 31}, 150.92}, {{2018, 11, 1}, 151.96}, {{
      2018, 11, 2}, 152.9}, {{2018, 11, 5}, 150.28}, {{2018, 11, 6}, 
      154.48}, {{2018, 11, 7}, 154.74}, {{2018, 11, 8}, 153.64}, {{2018, 11, 
      9}, 152.22}, {{2018, 11, 12}, 148.9}, {{2018, 11, 13}, 153.16}, {{2018, 
      11, 14}, 153.02}, {{2018, 11, 15}, 152.3}, {{2018, 11, 16}, 147.74}, {{
      2018, 11, 19}, 143.96}, {{2018, 11, 20}, 141.28}, {{2018, 11, 21}, 
      145.3}, {{2018, 11, 22}, 142.74}, {{2018, 11, 23}, 144.5}, {{2018, 11, 
      26}, 146.66}, {{2018, 11, 27}, 148.58}, {{2018, 11, 28}, 149.86}, {{
      2018, 11, 29}, 151.24}, {{2018, 11, 30}, 149.1}, {{2018, 12, 3}, 
      154.04}, {{2018, 12, 4}, 153.16}, {{2018, 12, 5}, 149.32}, {{2018, 12, 
      6}, 143.56}, {{2018, 12, 7}, 141.56}, {{2018, 12, 10}, 140.64}, {{2018, 
      12, 11}, 142.94}, {{2018, 12, 12}, 146.36}, {{2018, 12, 13}, 144.72}, {{
      2018, 12, 14}, 144.08}, {{2018, 12, 17}, 144.48}},
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", 
   RowBox[{"N", "@", " ", 
    RowBox[{"TimeSeriesRescale", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], 
  ";"}]}], "Input",ExpressionUUID->"b64e336b-3258-4367-9558-72ea9d31dacc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", ",", "ts"}], "}"}], " ", "=", " ", 
   RowBox[{"TakeDrop", "[", 
    RowBox[{"data", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", " ", "=", 
   RowBox[{"start", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ts", " ", "=", 
   RowBox[{"TimeSeries", "[", "ts", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"process", " ", "=", " ", 
   RowBox[{"GeometricBrownianMotionProcess", "[", 
    RowBox[{"mu", ",", 
     RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"logLikeGBMProcess", " ", "=", 
  RowBox[{"ReleaseHold", "[", "\[IndentingNewLine]", 
   RowBox[{"expressionToFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Hold", "[", "\[IndentingNewLine]", 
      RowBox[{"Replace", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"LogLikelihood", "[", 
          RowBox[{
           RowBox[{"GeometricBrownianMotionProcess", "[", 
            RowBox[{"mu", ",", " ", 
             RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], 
            "]"}], ",", "ts"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{"_", "?", "NumericQ"}], "]"}], " ", "\[Rule]", " ", 
         "$MachineLogZero"}]}], "\[IndentingNewLine]", "]"}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"mu", ",", "logsigma"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   "]"}]}]}], "Input",ExpressionUUID->"ee0d5ec7-8d6b-4aa5-b883-abb26b9dcb53"],

Cell[TextData[{
 "Note the use of ",
 StyleBox["Hold",
  FontWeight->"Bold"],
 " and ",
 StyleBox["ReleaseHold",
  FontWeight->"Bold"],
 " to prevent the loglikelihood from evaluating symbolically as well as the \
use of ",
 StyleBox["Replace",
  FontWeight->"Bold"],
 " to make sure the returned result is always numeric even for input values \
where the loglikelihood may not be well-defined. The function ",
 StyleBox["directLogLikelihoodFunction",
  FontWeight->"Bold"],
 " automates this step for you:"
}], "Text",ExpressionUUID->"d1103b9f-5d45-4c06-a693-3b24b9e44af6"],

Cell["\<\
Define the inference problem with the pre-defined loglikelihood function:\
\>", "Text",ExpressionUUID->"db41a419-6d48-46e8-b543-cf7d8b9dd2da"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "\"\<LogLikelihoodFunction\>\"", "\[Rule]", " ", "logLikeGBMProcess"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "ts"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", "t", "}"}]}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Regression", " ", "probems", " ", "should", " ", "always", " ", "have",
        " ", "in", " ", "independent", " ", "variable", " ", "defined"}], ",",
       " ", 
      RowBox[{"even", " ", "if", " ", "it", " ", 
       RowBox[{"doesn", "'"}], "t", " ", "appear", " ", "in", " ", "the", " ",
        "model", " ", "directly", " ", "or", " ", "if", " ", "the", " ", 
       "GeneratingDistribution", " ", "has", " ", "not", " ", "been", " ", 
       "defined"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",ExpressionUUID->"03fd6b5f-c647-4c58-96fb-b20d5b5ceeea"],

Cell["\<\
Run the sampler (this will take a while because the code runs without \
compilation):\
\>", "Text",ExpressionUUID->"1efab765-a352-402c-946d-78e60450bc12"],

Cell[BoxData[
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "20"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.01"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",ExpressionUUID->"c78ef708-4632-484a-877f-6c0f6f70726d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating a compiled version of the loglikelihood function", \
"Subsubsection",ExpressionUUID->"cfba4d89-3e91-4fca-88b6-19dd3e08b860"],

Cell["\<\
Since this is so slow, let\[CloseCurlyQuote]s do some manual labour to \
compile the loglikelihood function. The probability of each data point in the \
series depends on the value of the previous point and the time difference \
between them. So in a sense the problem becomes a regression problem with \
from a 2D input to a 1D output vector. Therefore, we need to transform the \
data into the following form:\
\>", "Text",ExpressionUUID->"58226dd1-6724-4d70-ac39-0c6bc5983b8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Array",TagBox["List", "IconizedNameLight"],GridBox[{{
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"65", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["12536", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    {{{2018, 9, 18}, 160.26}, {{2018, 9, 19}, 161.04}, {{2018, 9, 20}, 
      161.92}, {{2018, 9, 21}, 161.68}, {{2018, 9, 24}, 162.14}, {{2018, 9, 
      25}, 162.26}, {{2018, 9, 26}, 161.54}, {{2018, 9, 27}, 162.44}, {{2018, 
      9, 28}, 160.9}, {{2018, 10, 1}, 164.9}, {{2018, 10, 2}, 165.72}, {{2018,
       10, 3}, 164.88}, {{2018, 10, 4}, 162.8}, {{2018, 10, 5}, 160.26}, {{
      2018, 10, 8}, 157.74}, {{2018, 10, 9}, 159.12}, {{2018, 10, 10}, 
      150.36}, {{2018, 10, 11}, 150.}, {{2018, 10, 12}, 149.38}, {{2018, 10, 
      15}, 150.18}, {{2018, 10, 16}, 155.}, {{2018, 10, 17}, 160.38}, {{2018, 
      10, 18}, 155.32}, {{2018, 10, 19}, 153.82}, {{2018, 10, 22}, 152.78}, {{
      2018, 10, 23}, 147.86}, {{2018, 10, 24}, 142.46}, {{2018, 10, 25}, 
      147.52}, {{2018, 10, 26}, 145.96}, {{2018, 10, 29}, 145.22}, {{2018, 10,
       30}, 147.74}, {{2018, 10, 31}, 150.92}, {{2018, 11, 1}, 151.96}, {{
      2018, 11, 2}, 152.9}, {{2018, 11, 5}, 150.28}, {{2018, 11, 6}, 
      154.48}, {{2018, 11, 7}, 154.74}, {{2018, 11, 8}, 153.64}, {{2018, 11, 
      9}, 152.22}, {{2018, 11, 12}, 148.9}, {{2018, 11, 13}, 153.16}, {{2018, 
      11, 14}, 153.02}, {{2018, 11, 15}, 152.3}, {{2018, 11, 16}, 147.74}, {{
      2018, 11, 19}, 143.96}, {{2018, 11, 20}, 141.28}, {{2018, 11, 21}, 
      145.3}, {{2018, 11, 22}, 142.74}, {{2018, 11, 23}, 144.5}, {{2018, 11, 
      26}, 146.66}, {{2018, 11, 27}, 148.58}, {{2018, 11, 28}, 149.86}, {{
      2018, 11, 29}, 151.24}, {{2018, 11, 30}, 149.1}, {{2018, 12, 3}, 
      154.04}, {{2018, 12, 4}, 153.16}, {{2018, 12, 5}, 149.32}, {{2018, 12, 
      6}, 143.56}, {{2018, 12, 7}, 141.56}, {{2018, 12, 10}, 140.64}, {{2018, 
      12, 11}, 142.94}, {{2018, 12, 12}, 146.36}, {{2018, 12, 13}, 144.72}, {{
      2018, 12, 14}, 144.08}, {{2018, 12, 17}, 144.48}},
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", 
   RowBox[{"N", "@", " ", 
    RowBox[{"TimeSeriesRescale", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], ";"}]}], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"827f9385-0c02-4d41-a019-d031a3421176"],

Cell[BoxData[
 RowBox[{"transformedData", " ", "=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
     "\[Rule]", " ", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "2", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[77]:=",ExpressionUUID->"3563e0cc-7249-457c-b352-34792b7965c9"],

Cell["The inference problem can now be defined like this:", \
"Text",ExpressionUUID->"2c55f640-7a66-4a47-936e-edda9ef298fd"],

Cell[BoxData[
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", "transformedData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"GeometricBrownianMotionProcess", "[", 
       RowBox[{"mu", ",", " ", 
        RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "yprev"}], "]"}], 
      "[", "\[CapitalDelta]t", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"logsigma", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "}"}]}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<IndependentVariables\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]t", ",", "yprev"}], "}"}]}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "10"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"88d8915a-1fab-424f-93d2-99cd9354ba09"],

Cell["\<\
Compare the constructed loglikelihood function with the built-in version to \
verify:\
\>", "Text",ExpressionUUID->"c0553513-ed39-484f-b217-b83dfc54083c"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mu", "=", "0"}], ",", 
     RowBox[{"logsigma", "=", 
      RowBox[{"-", "4"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "@", 
     RowBox[{
      RowBox[{"obj", "[", "\"\<LogLikelihoodFunction\>\"", "]"}], "[", 
      RowBox[{"{", 
       RowBox[{"mu", ",", "logsigma"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "@", 
     RowBox[{"LogLikelihood", "[", 
      RowBox[{
       RowBox[{"GeometricBrownianMotionProcess", "[", 
        RowBox[{"mu", ",", " ", 
         RowBox[{"Exp", "[", "logsigma", "]"}], ",", " ", "start"}], "]"}], 
       ",", "ts"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"b7d25a44-4cb4-4d83-89e0-a10835a524b7"],

Cell["\<\
For the purpose of plotting the data later, we can restore the original data \
to the inference object since it will not be used after the definition step \
anymore (except for visualisation purposes)\
\>", "Text",ExpressionUUID->"5f858a07-edf2-4275-bd8a-301666164755"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obj", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"obj", ",", " ", 
     RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
      RowBox[{"TimeSeries", "[", "data", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[81]:=",ExpressionUUID->"a7862a70-e08c-4330-8b96-24262909d76d"],

Cell["Run the nested sampling algorithm:", \
"Text",ExpressionUUID->"fade880b-e3ed-4e37-8a3b-18cb31bfca1d"],

Cell[BoxData[{
 RowBox[{"result", " ", "=", 
  RowBox[{"parallelNestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<SamplePoolSize\>\"", "\[Rule]", "25"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "300"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<TerminationFraction\>\"", " ", "\[Rule]", " ", "0.001"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<MinIterations\>\"", "\[Rule]", "500"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ParallelRuns\>\"", "\[Rule]", "4"}]}], "\[IndentingNewLine]",
    "]"}]}], "\n", 
 RowBox[{"posteriorBubbleChart", "[", 
  RowBox[{
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mu", ",", "logsigma"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[132]:=",ExpressionUUID->"98bdcad8-4abc-47dc-ab76-bc02dffafef8"],

Cell[TextData[{
 "The first thing we can do is visualise the prediction errors at each data \
point using the input values we calculated in ",
 StyleBox["transformedData",
  FontWeight->"Bold"],
 ". This will visualise how well we can predict each next point from the \
previous (using the posterior knowledge of all data points):"
}], "Text",ExpressionUUID->"757379c3-576d-4d9b-a341-d322609e8fbe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"truncatedResult", " ", "=", " ", 
   RowBox[{"takePosteriorFraction", "[", 
    RowBox[{"result", ",", "0.99"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{"predictiveDistribution", "[", 
    RowBox[{"truncatedResult", ",", 
     RowBox[{"transformedData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "predictions", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellLabel->
  "In[134]:=",ExpressionUUID->"a18ca735-ef4d-4a2a-9db8-9c23d1a87ef2"],

Cell["\<\
We can also visualise how well our posterior knowledge could predict the \
future if we would only knew the starting point (and compare that with the \
maximum likelihood point-estimate):\
\>", "Text",ExpressionUUID->"76e58d76-3209-4fec-9de4-e037558d1295"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictions", "=", 
   RowBox[{
    RowBox[{"KeyMap", "[", "First", "]"}], "@", 
    RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
     RowBox[{"truncatedResult", ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "start"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot", "=", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", "predictions", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"estproc", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"GeometricBrownianMotionProcess", "[", 
      RowBox[{"#1", ",", " ", 
       RowBox[{"Exp", "[", "#2", "]"}], ",", " ", "start"}], "]"}], "&"}], "@@", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"TakeLargestBy", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<Samples\>\"", "]"}], ",", 
        RowBox[{"#LogLikelihood", "&"}], ",", "1"}], "]"}], "]"}], "[", 
     "\"\<Point\>\"", "]"}]}]}], ";"}], "\n", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"plot", ",", "\[IndentingNewLine]", 
   RowBox[{"regressionPlot1D", "[", 
    RowBox[{"result", ",", 
     RowBox[{"AssociationMap", "[", 
      RowBox[{"estproc", ",", 
       RowBox[{"ts", "[", "\"\<Times\>\"", "]"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"dac5ac3d-c265-4916-b8d0-0a368d8c7465"],

Cell["Finally, we can also predict future values:", \
"Text",ExpressionUUID->"461565e4-6b5e-49ae-9876-ffb9b5a6f4f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"extrapolations", "=", 
   RowBox[{
    RowBox[{"KeyMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "#", "]"}], "+", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "&"}], "]"}], "@", 
    RowBox[{"predictiveDistribution", "[", "\[IndentingNewLine]", 
     RowBox[{"truncatedResult", ",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\n", 
 RowBox[{"regressionPlot1D", "[", 
  RowBox[{"result", ",", "extrapolations", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellLabel->"In[128]:=",ExpressionUUID->"0be111c6-dd1a-415d-ab4d-ee0d72769c9f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bayesian neural networks", \
"Section",ExpressionUUID->"69be4aa7-9ba7-4661-b681-cf9eab5ddf15"],

Cell[TextData[{
 "This section implements ideas discussed in the following blog post: \n",
 Cell[BoxData[
  TemplateBox[{
   "\"https://blog.wolfram.com/2018/05/31/how-optimistic-do-you-want-to-be-\
bayesian-neural-network-regression-with-prediction-errors/\"",
    "https://blog.wolfram.com/2018/05/31/how-optimistic-do-you-want-to-be-\
bayesian-neural-network-regression-with-prediction-errors/"},
   "HyperlinkURL"]],ExpressionUUID->"d7342976-ce85-4f89-985a-63ad9b4c2fd8"],
 "\n\nSee also:\n",
 Cell[BoxData[
  TemplateBox[{
   "\"http://mlg.eng.cam.ac.uk/yarin/blog_3d801aa532c1ce.html\"",
    "http://mlg.eng.cam.ac.uk/yarin/blog_3d801aa532c1ce.html"},
   "HyperlinkURL"]],ExpressionUUID->"1e7cc187-4249-44c2-9f07-6304762f523e"],
 "\n",
 Cell[BoxData[
  TemplateBox[{
   "\"http://www.cs.ox.ac.uk/people/yarin.gal/website/thesis/thesis.pdf\"",
    "http://www.cs.ox.ac.uk/people/yarin.gal/website/thesis/thesis.pdf"},
   "HyperlinkURL"]],ExpressionUUID->"76368b2d-d6ee-49c2-a8c5-f92c076e8fea"],
 "\n",
 Cell[BoxData[
  TemplateBox[{
   "\"https://arxiv.org/pdf/1703.02914.pdf\"",
    "https://arxiv.org/pdf/1703.02914.pdf"},
   "HyperlinkURL"]],ExpressionUUID->"5e00a2b4-81ca-488e-9e05-50f4e0132705"]
}], "Text",ExpressionUUID->"77a94626-02b2-45f3-bdc6-326f466cf0fc"],

Cell["First make some test data:", \
"Text",ExpressionUUID->"39ecf318-a556-4c1d-8a2a-467d4ca11ea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BlockRandom", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SeedRandom", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"testdata", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "\[Rule]", " ", 
        RowBox[{"(", 
         RowBox[{"#", "+", 
          RowBox[{"2", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}], ")"}]}], ")"}], "&"}], "/@", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "20"}], "]"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"List", "@@@", "testdata"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", "testdata"}], "Input",
 CellLabel->"In[45]:=",ExpressionUUID->"0a4ea69c-a0dd-470a-adba-67d36efc72f4"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.8685224809824379, 0.9543435234815529}, {-0.5195191084606527,
    2.533951577242884}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[45]=",ExpressionUUID->"5ff30b20-8cd8-45ee-b7fa-05b63d8529d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.6347789803421424`", "\[Rule]", "1.7957279429304598`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.7771607777375271`"}], "\[Rule]", 
    RowBox[{"-", "0.5195191084606527`"}]}], ",", 
   RowBox[{"0.5790519892677031`", "\[Rule]", "1.1919067493369395`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.6243937065879472`"}], "\[Rule]", "0.7996304335636109`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.5172780650846991`"}], "\[Rule]", "0.26388567767544924`"}],
    ",", 
   RowBox[{
    RowBox[{"-", "0.8685224809824379`"}], "\[Rule]", "0.7714119925879213`"}], 
   ",", 
   RowBox[{"0.08449324101924827`", "\[Rule]", "0.7351962370098297`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.5376909865279451`"}], "\[Rule]", "0.6488294684876448`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.20798783690282585`"}], "\[Rule]", "0.8295604971775012`"}],
    ",", 
   RowBox[{"0.4009475638844897`", "\[Rule]", "0.7389735976399887`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.576348041891745`"}], "\[Rule]", "0.36878224450113306`"}], 
   ",", 
   RowBox[{"0.4973137629658959`", "\[Rule]", "2.111635366780395`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.15429870132010226`"}], "\[Rule]", 
    RowBox[{"-", "0.1306277757234109`"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.505010438271984`"}], "\[Rule]", "0.12874171500982534`"}], 
   ",", 
   RowBox[{"0.9543435234815529`", "\[Rule]", "2.533951577242884`"}], ",", 
   RowBox[{"0.6503258789770276`", "\[Rule]", "0.674281890636435`"}], ",", 
   RowBox[{"0.8505504023577255`", "\[Rule]", "1.633103182349879`"}], ",", 
   RowBox[{"0.15611230398875842`", "\[Rule]", "1.0739166567056557`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.414260526404155`"}], "\[Rule]", "0.5034292395023106`"}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.5838978704388147`"}], "\[Rule]", 
    "0.8711357016189538`"}]}], "}"}]], "Output",
 CellLabel->"Out[46]=",ExpressionUUID->"d46da1d7-1de7-4f59-9aca-863c8c07ddd6"]
}, Open  ]],

Cell[TextData[{
 "The main function used for constructing Bayesian-style regression neural \
networks is ",
 StyleBox["regressionLossNet",
  FontWeight->"Bold"],
 ". "
}], "Text",ExpressionUUID->"9c658337-cd49-4f76-95e5-769affde9f61"],

Cell[CellGroupData[{

Cell[TextData[{
 "The first argument can take one of two values: ",
 Cell[BoxData[
  FormBox["\"\<HeteroScedastic\>\"", TraditionalForm]],ExpressionUUID->
  "bea30636-a0cf-48bd-95ce-3457cf0756bc"],
 " (default value if omitted) or ",
 Cell[BoxData[
  FormBox["\"\<HomoScedastic\>\"", TraditionalForm]],ExpressionUUID->
  "cc61c8ca-42cd-47fd-8c08-b4a25c14ff23"],
 ". A heteroscedastic will allow the predicted variance of the network to be \
dependent on the network inputs whereas a homoscedastic network will predict \
a constant variance."
}], "Item",ExpressionUUID->"a3d4bf0a-4bf5-44ff-8d04-b0dfaf5456fb"],

Cell["\<\
There are several options for specifying the network architecture:\
\>", "Item",ExpressionUUID->"c2c05efc-7154-4d7e-aa72-d735750e66f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "regressionLossNet", "]"}]], "Input",
 CellLabel->
  "In[129]:=",ExpressionUUID->"c7a8439a-c034-4629-8294-e9071eb9fd22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"NetworkDepth\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"LayerSize\"\>", "\[Rule]", "100"}], ",", 
   RowBox[{"\<\"ActivationFunction\"\>", "\[Rule]", "\<\"SELU\"\>"}], ",", 
   RowBox[{"\<\"DropoutProbability\"\>", "\[Rule]", "0.25`"}], ",", 
   RowBox[{"\<\"BatchNormalization\"\>", "\[Rule]", "False"}], ",", 
   RowBox[{"\<\"Input\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"LossModel\"\>", "\[Rule]", "Automatic"}]}], "}"}]], "Output",
 CellLabel->"Out[129]=",ExpressionUUID->"99bde496-c519-46d9-b214-3af890c2954c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<NetworkDepth\>\"", TraditionalForm]],ExpressionUUID->
  "daf8139a-f34e-4761-bf17-ae0b219e9f2e"],
 " and ",
 Cell[BoxData[
  FormBox["\"\<LayerSize\>\"", TraditionalForm]],ExpressionUUID->
  "41c7005a-6589-42e3-b8b9-fe77124f0c9e"],
 " specify the complexity of the network."
}], "Subitem",ExpressionUUID->"30007450-bbd6-44c0-9e96-55ebe189e856"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<ActivationFunction\>\"", TraditionalForm]],ExpressionUUID->
  "4f6dd36b-787d-4f92-b6cf-b159f79ed4a1"],
 " specifies the nonlinearity used in the ",
 Cell[BoxData[
  FormBox[
   StyleBox["ElementWiseLayer",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "e77f2e69-7e9b-40d4-ac51-6ffa90b629f2"],
 "s in the network. The default is the ",
 Cell[BoxData[
  FormBox["\"\<ScaledExponentialLinearUnit\>\"", TraditionalForm]],
  ExpressionUUID->"b90239da-6171-45cd-899b-616ceea413d0"],
 " activation."
}], "Subitem",ExpressionUUID->"ad705557-4b5d-499d-ba61-eff0e1a5e1c8"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<DropoutProbability\>\"", TraditionalForm]],ExpressionUUID->
  "ab333745-8bd0-425d-bafd-9e45538ccfb9"],
 " specifies the dropout probability in the ",
 Cell[BoxData[
  FormBox[
   StyleBox["DropoutLayer",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "15a5769e-cf9b-4ed2-98ca-74009d65d768"],
 "s. Default value is 0.25. Setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\"\<DropoutProbability\>\"", "\[Rule]", " ", "None"}], 
   TraditionalForm]],ExpressionUUID->"6586ff77-6d00-4c9f-a12b-1232fd549ec8"],
 " leaves them out completely. "
}], "Subitem",ExpressionUUID->"b46ccdb9-3a05-4763-8366-22e3d481ad17"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<BatchNormalization\>\"", TraditionalForm]],ExpressionUUID->
  "10b8e83f-7293-464e-82a7-bdbad31dfebc"],
 " takes the values ",
 Cell[BoxData[
  FormBox["True", TraditionalForm]],ExpressionUUID->
  "dbdfcf62-1b39-4d97-8675-522fa2e8812e"],
 " or ",
 Cell[BoxData[
  FormBox["False", TraditionalForm]],ExpressionUUID->
  "8115adf0-b74d-4390-b57a-cd405092b089"],
 " (default). If ",
 Cell[BoxData[
  FormBox["True", TraditionalForm]],ExpressionUUID->
  "abfee3b5-82e7-4c85-97e8-17607a7a1209"],
 ", ",
 Cell[BoxData[
  FormBox[
   StyleBox["BatchNormalizationLayer",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "460fe206-3b97-44c7-8920-bfd493267d89"],
 "s will be used in the network."
}], "Subitem",ExpressionUUID->"9935db16-b335-4ccf-8c88-3d0a15cbbc40"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<Input\>\"", TraditionalForm]],ExpressionUUID->
  "19e1e0c1-9e0f-4671-a628-51d310e78a80"],
 " specifies the dimensions of the input data."
}], "Subitem",ExpressionUUID->"ba0527e9-136b-449f-9131-6a2658fcb14f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["\"\<LossModel\>\"", TraditionalForm]],ExpressionUUID->
  "e6425219-dc07-463b-9977-785cce91a3c8"],
 " is used to specify the network loss. There are 2 possible values:"
}], "Subitem",ExpressionUUID->"08380044-4614-4c14-b13a-e04511a43862"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox["Automatic",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "7a022632-e52f-4ed8-b403-3a29a3183164"],
 " (default). This value uses the Gaussian negative loglikelihood as the loss \
function"
}], "Subsubitem",ExpressionUUID->"00945322-d3cb-40b7-b1e4-d974f49fa411"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"\"\<AlphaDivergence\>\"", ",", 
     RowBox[{"\"\<Alpha\>\"", "\[Rule]", " ", "\[Alpha]"}], ",", 
     RowBox[{"\"\<SampleNumber\>\"", "\[Rule]", "n"}]}], "}"}], 
   TraditionalForm]],ExpressionUUID->"0cf8fbec-1840-49be-b308-70376c87b01b"],
 " uses the alpha-divergence loss developed by Li and Gal (",
 Cell[BoxData[
  TemplateBox[{
   "\"https://arxiv.org/abs/1703.02914\"","https://arxiv.org/abs/1703.02914"},
   "HyperlinkURL"]],ExpressionUUID->"e2ad5a44-5c7e-432b-bbba-19d7cb464827"],
 "). The default values are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", "0.5"}], TraditionalForm]],ExpressionUUID->
  "1d5751c5-5448-4b37-ae65-8d69a0314c02"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],ExpressionUUID->
  "4b560515-5268-4a66-ba46-a97d332ffebe"],
 ". The larger the value of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "820864df-b6e9-44d8-9e59-0a7168f2f72d"],
 ", the less the network will be penalized for occasionally producing wrong \
predictions when sampled with dropout layers active. Thus, a network trained \
at a higher value of ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "0088f8e7-3863-400d-a8b6-5bcbafddc8e3"],
 " will produce predictions with greater variance and is therefore more \
conservative/pessimistic in its estimates. Special values for ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],ExpressionUUID->
  "17e54da3-638b-418b-9d99-8fc86ca4e2e9"],
 " are ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "acd87e23-e224-4499-909a-5c40abe68cd1"],
 ", 0 and ",
 Cell[BoxData[
  FormBox["\[Infinity]", TraditionalForm]],ExpressionUUID->
  "a0898aaa-fa96-4422-b1b2-14606b645709"],
 ". The function ",
 Cell[BoxData[
  FormBox[
   StyleBox["alphaDivergenceLoss",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "587b1d02-80bc-4ab8-8c64-b31a3704d5e0"],
 " is used to produce the loss layer for the alpha-divergence:"
}], "Subsubitem",ExpressionUUID->"0e852ddb-81a2-4ac5-8af0-0e91f83ff723"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphaDivergenceLoss", "[", "0.5", 
   RowBox[{"(*", "Alpha", "*)"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Infer", " ", "dimension", " ", "of", " ", "input", " ", "vector", " ", 
    "automatically"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"alphaDivergenceLoss", "[", 
  RowBox[{"0.5", 
   RowBox[{"(*", "Alpha", "*)"}], ",", " ", 
   RowBox[{"\"\<Input\>\"", " ", "\[Rule]", " ", 
    RowBox[{"{", "20", "}"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"20", " ", 
    RowBox[{"samples", "."}]}], "*)"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"alphaDivergenceLoss", "[", 
  RowBox[{"-", "Infinity"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"alphaDivergenceLoss", "[", "0", "]"}], "\[IndentingNewLine]", 
 RowBox[{"alphaDivergenceLoss", "[", "Infinity", "]"}]}], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"9d118393-997e-4879-a46e-5894c7106b74"],

Cell["Examples of networks:", \
"Text",ExpressionUUID->"8d01aa2c-2061-403b-b03f-1cea07e2fd6d"],

Cell[BoxData[{
 RowBox[{"regressionLossNet", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"regressionLossNet", "[", "\"\<HomoScedastic\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"regressionLossNet", "[", 
  RowBox[{"\"\<LossModel\>\"", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<AlphaDivergence\>\"", ",", 
     RowBox[{"\"\<Alpha\>\"", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\"\<SampleNumber\>\"", "\[Rule]", "20"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"4f1625ea-9991-4d52-8151-f0cb8c2abbac"],

Cell[TextData[{
 "Train a network (note the necessity of specifying ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LossFunction", "\[Rule]", "\"\<Loss\>\""}], TraditionalForm]],
  ExpressionUUID->"b2da59fb-16f0-4ba1-93f3-0e30db353384"],
 ")"
}], "Text",ExpressionUUID->"e3757f65-227a-4e69-825b-25547efa52c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lambda2", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"regressionLossNet", "[", 
     RowBox[{"\"\<HeteroScedastic\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}], ",", 
      RowBox[{"\"\<LayerSize\>\"", "\[Rule]", "100"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<ActivationFunction\>\"", "\[Rule]", "\"\<SELU\>\""}], ",", 
      RowBox[{"\"\<DropoutProbability\>\"", "\[Rule]", "0.25"}], ",", 
      RowBox[{"\"\<BatchNormalization\>\"", "\[Rule]", "True"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<LossModel\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<AlphaDivergence\>\"", ",", 
         RowBox[{"\"\<Alpha\>\"", "\[Rule]", " ", "0.5"}], ",", 
         RowBox[{"\"\<SampleNumber\>\"", "\[Rule]", "20"}]}], "}"}]}]}], 
     "]"}], ",", "\[IndentingNewLine]", "testdata", ",", 
    "\[IndentingNewLine]", "All", ",", "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "\[Rule]", "\"\<Loss\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<ADAM\>\"", ",", 
       RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", " ", "lambda2"}]}], 
      "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TimeGoal", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[47]:=",ExpressionUUID->"fb8c9bd9-41c6-4a8f-badf-513f11fe307d"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "10266"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "10266"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"time:\"", "\"1.0min\""}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "3422"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "20"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "205320"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "20"}, 
               "RowWithSeparators"],"\"GPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                 "\"-1.05\"", -1.049213469028473, AutoDelete -> True], 
                 ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1:eJw1WHs8VOn/py1SSume2FglIkppiXxSiiy1RaXSdUtKkVZKUkqESG4pkntI
ruM2Ls+MkSiy6UZ0IWMumDlzRiq12/c8v57f+cfrmJnnPJ/P5317jvYBry2H
xigoKBgqKijgv/9/PW1tvft9O229w+HL7f0Ga2D/vn2vjAx7yf2f0NTYuGSa
5wvrsSf/PhKDXGGymprX4klc8vl+8N+s7OuSEWO9ZE+54ujfhyAzPb1+OqsS
/fy+B9xiLufPrejN5WVtBhNOQEJs7OWXD9rRz9+fBLpx/EylbR2I57z96YNN
pyCWuX5peol+rucLS0xMFFTWvEW33GesWH/bD5RVVESLgt+R9c/CneTk5NDW
buTl/zzpXd85SNq4Nuos7y15XiAYGBhMFkZ9QOmNdkHVsy7CeBUVFV/RB/L8
IMhIT6eHtXrQ5H/usZStLsHz981vUi72kP1cBk9Pz90xf31EZzqVhFsPBIOy
ktKSgqo+sr8r8HlkJMFE+BH19R7SSA0NgQuBgavPa/SR/YbCVcesoMFDH5HT
YIPTYP5VvJ/w26p8sv8wCA0NXamc0IfYn3679Ht7OOjp6SknuvFJPRFw0sdn
dEddH9L9caks+PM1yPK2mnDwwUdSXxS0tLTsfmHKR9Hje4X/zLsOWlpaJ+SO
fFJvNKwwNe0K9+ejf6/Oj5qcFg2Wrkazdgr7SP03oKS4+MaCWj4qncQ0oPQG
3p/WX1Z80o8YmKeh8fF5RD86EnOBu7MxBiwtLYPH8vmkP7EQkvwtnxvMR1qz
jLsUOmPhzJkz3QF5fNKvOFhrY7NtXH8/YqoZzh6IAwFztZX3k/7Fg5qaGvrj
Zj8KY7bn+F88zJmSpDOvtJ/0MwHcDx+WpK/tR6uzrBbJp9yEhbq6RQfz+kl/
b0JIcHDieB8+GtYfWnPrt0ToHNcw2WWWgPQ7EY57ecVq2ghQbkHyLmuzW6Cq
qrooyFpA+n8L/vb1rYrUF6C9pn/48u1uQ0BgYPl/P/rJPG5D8c53iYGnBWh6
5beoiF1JwHDn71laQjKfJCivqKi4oCZEjy3v5yw9kQxfRkbqN4QLyLySQbkh
m74y1I+Y7tW/vngHoqOjDTe3C8j8UjDeHSqjBGjF+gnd52NToF8gkI4O9JN5
3oVlJiabjZj1xY+rPv2WfRduC6XJnauEZL6puP5rktNChMd1aHcqXAoKMto3
KiTzToVqNls9aa0QLT56bXolPxUCzp2bFWIvJPNPgwt6961a3AToiuFf2hO9
0sDDw6OZ+iIkeEgDC3Pz41AmRB8kq5bs+ZIGIyMj5YEZQoKPdFj39HzB2EIh
WlU8bVVxUDpci4zU1PogJHhJh6bmZu0hlgglnBrYMHZiBjg5OUXNdxER/GRA
T0+P7FmREFErmP/EZcC72Vxdix0igqcMkFHUvn3BIoS3m6eZCQ8bGxP6Q8UE
X5lgY2NTN71UiLLZPif+zc4EDR/JR3ankOAtE9zc3Hq2TBMjxfMbz202yQKh
QHDT7z8hwV8WPGlutlVeLka7rHWuZlRlwXo7u0GVG2KCxyww6+v26vtHhJhv
x43YZIO5ufkCpTFigs9s8PbyUo50F6OpDc/S7Fuycf9t5+aKCF7vwY/v3weN
l4mRZwiDQJd7kLe8z7NloZjg9x6ssbHJW+MvQnic0nf3gMvhjH2zTUTwnAOL
9PTk6sfFSHuia5PNkRx4TTfuyDUVE3znwG1GX5WeiVBAq8nLeFkOnPb1XRG8
Qkzwnov5t9NZJEKvrzOA8s+FWTNm2JrUiAj+c+HAVo/UMUdFaOkWZsJj8/Dv
9WeeExM+5EFwcHDOdxsxuoYJEJkHLs7OlRtsRYQfeRgPeboGYiR4xTxg5n0I
mF5wL5fp10++3Idtzs5Np6cMIBtccOp9ePXypaPotYjw5z74+Pi0K/SJUTIe
gH4+PF+jmflk1iDhUz4w8q5r6TSAPmsygCjJh/na2rnblw8SfuWDZGho6Aot
Qnj7SywfYDw4ZScPEL49gJlTkgyGjIfQA0yYhw+wPqVKPcSEfwXA2CHkdw0i
5UMpLi+cCvD6rqrdA4SPBTB+4WjE5xYxOqB3+oBeRwE8bWlR0CkZIPwshBIW
S9V/2SCqFTl6+e8vxP3WUUgaJHwthLDw8McFqYNodv6CgFZxIdjF6H4d83KQ
8LcI66/mL9QAMq8IXDfFoggeNTY2RilKCJ+L4Linp6qZ+xByT2RWDCwCLy+v
RxZbBwm/i0AnUeju4jeI4s5u+/MgrwjX1+S4TkL4XgR2dnbzp24ZQrgdquOL
oYHHS5oOEsL/YpjNXbdhwwQJkjL0Lv+jGCLCw+e+0JEQPSgGbx+fmLrcITRP
83bf3hvFeN5bqGlSog/FsNra+p79nCFk/9+4YyqvisGeqe/aqJToRTF8//59
7ICjBPm9PykrmVuC9UdN/aaE6EcJ2NvZsfZ0SlEm563f7r0lYDDJXPl+moTo
SQlMVVcfrTkvQe1pzBMyS2CTk9PTY+lSoi8l8KuW1uGrFoMIw6FQWAJtbW0r
+d8kRG9KIeDh9uHKS0MIl+NqVApM5NFVWycl+lOK/Tf38woK7bSNvDHGpxQK
Cgp0fEwpokeloKKkpFTYIUWhC7/Oyi8vBeP5ZuPOBEuIPpXCvawsXzUrCrEw
gL6VQnZWlu2ec1KiVyysb1M5qhRi0KL7w5oF259ofFtmThH9YuE8sVnjMoXU
MOCDWaChobF92ymK6BkLOLW1SyumS5EVQ4ctzSzsn8YKG6VE31hw6q7b/C5j
CuFxf5tUBsZGRq7eXVKid2UQHxubZMaVopvHL67O2lIGS01McrrPyIj+lQFD
n0l75UPoIRaUm2Ww1aPpbZguRfSwDN50dMws+koh2phBTFcZ9Pb0PJO3S4k+
lmF/+eeDK4V+xQI4vxw0rwz8eaiRInpZjp/frHqEQo54gUPleP6fTjdQRD/L
MX8/dTnIEJaD4dxy7Kcb/quWED0thzQ3WFSSQ6Ec3GBJOfbPa1ddKKKvFeB/
7hyyEkjRy3hm4KYVOI9VUhUU0dsK0LWPmb3sHIXGYAD6VUBcbKx1g46M6G8F
1muXRVspZIIJUVOB81dS9nuK6HEFxve0qCUUcsMEVayEiMIvgapZFNHnSpir
oaHXmE2h8Lm/jZPYVgJYW8s6aymi15VgZmambs7sH8vhzfBKeNHevu59gozo
dyUsvRR22jhFhvjdo1PXtFXCclPTaQcoiuh5JeavTsUwhabVHU4UT6uChzye
kaWjjOh7FfbflFaWDMHddq24HVWgo60dtkEiJXpfhf3hdYQDhfD4re5UYf3S
9b4jI/pfBRwO5+LtLBlK2p+3WNBTBWbxIfsmGNDED9hMOdZtPW0y1GQzsyR6
IRvnf+XRpTLiD2xwdnaesoi5x3ZgcYwNVq5G7gktMuIXbIyP5dVhMsR0p+5j
IRsSEhLyp/bLiH+wsf5WzmHq39zvahs5zIYDBw+6R56SET+phriXtJmKhwwF
Pnr4xMy8GoKCgszvG8iIv1RDFZut9HytDGF6fDhfjf35of8zmvhNNay3ta1y
saBRR9idjrD6apCMOVC4eryM+E81fP36dcakVTKkdExlr6lyDZiYmNT82C4j
flQDuTk5OdV+NMLldjvUQJDe/ayiYzLiTzUYz4X6Zyi0z6jnWEh0Dc5PGdu8
aOJXNbg/vz8fohHDFtr4ZQ384eDwcW0FTfyrBvR3Xz8ab0Wjamnlmc45taCp
pRXXGU4RP6vFfmmlw+xPxMjHpT21wGKxvG+1UsTfamHnzp0W14/TiJnOFcOM
WlBqyLZwY+5/+l0t5m+my4AMrY39PvGVoBb0DQx6p7yTEf+rw/habRROIwyH
C4Z18HnRbr8RBh8//fD/Pt8yEChDzN1s/ZN1IB0acq3olRF/rAMHB4fn4aE0
emLGILCsDtTV1dlwjyZ+WQd+isXNySdpxKjngoDROujs6PBO4cuIfyI45unp
Hd5KIyyvC6wRxvenzLVy4qcI53mzC0ky5Iw3fBnBJ7n8gv5BmvgrwvPVfl5J
oyDcwCYExiYmRXFj5MRvEbzt6proX0wjRu1/vaHEgadL5oew5tLEfzk4D/qG
xdOIQWcvfxEHnze2BOySEz/mgK+v77gb5nJ0pXBOtoUDB/tZTPU+OfFnDvx7
J99J8wONNFI3eVw/zoGLgYHqwXIZ8WsOznOG4Ux/8Xj6rnPgeXt7yo/pNPFv
DkxO2rhrjSGN7JkCfi/hAJvNflPURBM/58CztrbP/FU0wvYZ+YKD/SYiw1BO
/J0Dqywt8weDaMR0+3TvCAcsJ7x2WHxNRvyei/2MHXxSjiZtdTNfOYcL/X19
DY1MPT/9n4vPXxMTz9MogwFIxCouFOUu75vgQpM8wIXzgYEbqzbJkcXyZvTB
jYvzh0bKejnJB1x8fvb3Zfj+jIHniotcYOgSIO+mSV7gwuOjZy97KA4jLLfh
6VysNy92/0uT/MAFxOHYpTyhEY4P7xu42A/sx4plJE9wsT/7WX2lUfxIaoup
gAvM8XeTvqmc5AsuODo5vVI5y/SDEYyrKvXYzxT9f9Akb9RD4q1brTsEcsR0
Y+vbxfUw10eyeCdT78/8UQ8nvLymFTvIEaPWM5c51QO/r6/IYw5N8kg9hISG
XshykiOKoWeIdz10d3Wdkt2Vk3xSD4vreiPcI+UI201XTD32n4VB1TTJK/UQ
GBhY1zxhGOF2mJTV4/NI/PUZcpJf6uFKcPARRZYcsRgDufK6Hh4krDz8xZ0m
eaYetLW1e456DyPGzfs7v9ZjvI9Lny8n+YaHzy/8bXo0YtQnd8k8HryIPlXx
TZEmeYcHqXfvXng0XY7O7K7xvLyah/OGRWIvTfIPD1aamT12+iRHWJ469vHw
+wLBjjSa5CEejK5yfetjL0fYbg0v8+BucvKU1xw5yUc8rA+DoxPkyJKBS1AW
D5+vv/gsHSZ5iQehjlkeSmw5Ytzp7KtHPChjsVI3Mnz4mZ94OK9G/8Lw34MJ
QIvFPPz+SD1/rpzkKR7mS2NqsBzhd1UXVRvAPOpjR1ecHP0Psdb54A==
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[{}]}, 
                   {Hue[0.59, 0.7, 0.65], AbsolutePointSize[4.5], 
                    PointBox[{}]}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 
                 GridLines->{{2500., 5000., 7500., 10000., 12500., 
                   15000.}, {{-4., 
                    GrayLevel[0.8501]}, {-3.5, 
                    GrayLevel[0.8501]}, {-3., 
                    GrayLevel[0.8501]}, {-2.5, 
                    GrayLevel[0.8501]}, {-2., 
                    GrayLevel[0.8501]}, {-2., 
                    GrayLevel[0.8501]}, {-1.5, 
                    GrayLevel[0.8501]}, {-1., 
                    GrayLevel[0.8501]}, {-0.5, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {1., 
                    GrayLevel[0.8501]}, {1.5, 
                    GrayLevel[0.8501]}, {2., 
                    GrayLevel[0.8501]}, {2., 
                    GrayLevel[0.8501]}, {2.5, 
                    GrayLevel[0.8501]}, {3., 
                    GrayLevel[0.8501]}, {3.5, 
                    GrayLevel[0.8501]}, {4., 
                    GrayLevel[0.8501]}, {-4., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}, {4., 
                    GrayLevel[0.3001]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 PlotRange->{{0, 10265.5}, {-2.07225, 2.74725}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{-2, -2}, {2500., 2.74725}], {1., 1.}], 
                    InsetBox[
                    FormBox["5000", TraditionalForm], 
                    Offset[{-2, -2}, {5000., 2.74725}], {1., 1.}], 
                    InsetBox[
                    FormBox["7500", TraditionalForm], 
                    Offset[{-2, -2}, {7500., 2.74725}], {1., 1.}], 
                    InsetBox[
                    FormBox["10000", TraditionalForm], 
                    Offset[{-2, -2}, {10000., 2.74725}], {1., 1.}], 
                    InsetBox[
                    FormBox["12500", TraditionalForm], 
                    Offset[{-2, -2}, {12500., 2.74725}], {1., 1.}], 
                    InsetBox[
                    FormBox["15000", TraditionalForm], 
                    Offset[{-2, -2}, {15000., 2.74725}], {1., 1.}]}, {
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-2.\"", -2., AutoDelete -> True], 
                    ScientificForm], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
                    ScientificForm], TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.\"", 2., AutoDelete -> True], 
                    ScientificForm], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], {-1, -1.}]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox["\<\"\"\>",
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellLabel->"Out[48]=",ExpressionUUID->"b9e5bfc5-c069-4456-9409-13104b892b76"]
}, Open  ]],

Cell[TextData[{
 "Use the function ",
 Cell[BoxData[
  FormBox[
   StyleBox["extractRegressionNet",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "5fad6120-e460-439a-9f33-ae06c830a925"],
 " to get the regression net back out of the trained net. Note that the ",
 Cell[BoxData[
  FormBox[
   StyleBox["BatchNormalizationLayer",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "433fbc86-f54f-4fa8-8438-978c0339b3aa"],
 "s will be replaced by constant layers that perform the same operation \
because ",
 Cell[BoxData[
  FormBox["BatchNormalizationLayer", TraditionalForm]],ExpressionUUID->
  "ca32c7c1-2640-4041-891b-8cfec2f945c1"],
 " doesn\[CloseCurlyQuote]t work correctly when making predictions with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"NetEvaluationMode", "\[Rule]", " ", "\"\<Train\>\""}], 
   TraditionalForm]],ExpressionUUID->"13bb7a05-239c-4439-9992-4cf9d5c06fc8"],
 "."
}], "Text",ExpressionUUID->"26036e46-abc8-4e01-b89e-bdc31d25f7e6"],

Cell[BoxData[{
 RowBox[{"?", "batchnormToChain"}], "\n", 
 RowBox[{"extractRegressionNet", "[", "trainedNet", "]"}]}], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"9a7351d1-e7c7-4be7-ba03-fffa2cfb189c"],

Cell[TextData[{
 "Generate predictions from the network in the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    RowBox[{"Interval", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"887e23dc-3076-4efc-9e46-fc8c4cea5ce4"],
 " by sampling each input 500 times with the ",
 Cell[BoxData[
  FormBox[
   StyleBox["DropoutLayer",
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "53da635a-c75b-44d9-8b47-468eb1ac4be4"],
 "s active to account for the uncertainty in the network weights. In other \
words, the generated distributions account for both model variance and \
uncertainty in the network weights."
}], "Text",ExpressionUUID->"fb1721fa-0ff0-4417-adad-01b209b33eaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sampleTrainedNet", "[", 
  RowBox[{"trainedNet", ",", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "0.1"}], "]"}], ",", "500", ",", 
   RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[267]:=",ExpressionUUID->"30872bf6-91d1-4bdc-bc93-5db995dbb405"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.46949253416061404`", ",", "0.9108457008825533`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.9`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.47095398300886154`", ",", "0.6948191373739746`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.8`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.46717259389162064`", ",", "0.5638803311489615`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.7`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.4676081262230873`", ",", "0.4075525623982654`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.6`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.4736355177164078`", ",", "0.32274085565301125`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.5`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.4511198916435242`", ",", "0.32107808029159296`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.3999999999999999`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.44389767318964`", ",", "0.3619245782318482`"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.29999999999999993`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.42535045075416567`", ",", "0.38740277100618503`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.19999999999999996`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.41626143342256544`", ",", "0.4470447594977138`"}], "]"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", "0.09999999999999998`"}], "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.43108818650245667`", ",", "0.3889682832405467`"}], "]"}]}], 
   ",", 
   RowBox[{"0.`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.4919481552243233`", ",", "0.2317970979194363`"}], "]"}]}], 
   ",", 
   RowBox[{"0.10000000000000009`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0.7976320930719376`", ",", "0.037979759193043784`"}], "]"}]}], 
   ",", 
   RowBox[{"0.20000000000000018`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.0694218732118606`", ",", "0.23123510674107753`"}], "]"}]}], 
   ",", 
   RowBox[{"0.30000000000000004`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.263140240907669`", ",", "0.38507421127857766`"}], "]"}]}], 
   ",", 
   RowBox[{"0.40000000000000013`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.347756584405899`", ",", "0.4867598252684955`"}], "]"}]}], ",", 
   RowBox[{"0.5`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.480282357931137`", ",", "0.5646268906238577`"}], "]"}]}], ",", 
   RowBox[{"0.6000000000000001`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.56630179977417`", ",", "0.6453878763706178`"}], "]"}]}], ",", 
   RowBox[{"0.7000000000000002`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.6621956884860993`", ",", "0.7234156899754389`"}], "]"}]}], 
   ",", 
   RowBox[{"0.8`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.6815151307582856`", ",", "0.8102627852128913`"}], "]"}]}], 
   ",", 
   RowBox[{"0.9000000000000001`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.72944726729393`", ",", "0.8071727960336772`"}], "]"}]}], ",", 
   RowBox[{"1.`", "\[Rule]", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"1.7928335908651352`", ",", "0.844182164961943`"}], "]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[267]=",ExpressionUUID->"73ccc44c-b629-4271-a0e0-ab6fe4129699"]
}, Open  ]],

Cell["Plot the predictions:", \
"Text",ExpressionUUID->"b3abe12d-9a18-41e1-badb-19532ad54544"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xValues", "=", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.05"}], "]"}]}], ",", 
     RowBox[{"quantiles", "=", 
      RowBox[{"{", 
       RowBox[{"0.95", ",", "0.5", ",", "0.05"}], "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
        RowBox[{"Values", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"InverseCDF", "[", 
            RowBox[{"#", ",", "quantiles"}], "]"}], "&"}], "/@", 
          RowBox[{"sampleTrainedNet", "[", 
           RowBox[{"trainedNet", ",", "xValues", ",", "500", ",", 
            RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], 
           "]"}]}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DataRange", "\[Rule]", 
        RowBox[{"MinMax", "[", "xValues", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "2", "}"}]}], ",", 
          RowBox[{"3", "\[Rule]", 
           RowBox[{"{", "2", "}"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`1`%\>\"", ",", "#"}], "]"}], "&"}], ",", 
          RowBox[{"Round", "[", 
           RowBox[{"100", " ", "*", " ", "quantiles"}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"List", "@@@", "testdata"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->
  "In[141]:=",ExpressionUUID->"4bd2a018-736d-4078-9d9d-b73b51fe2755"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1:eJzt1llQVFceBvCGblZZTDciW5FADMYoASYYFYV/RyNmTKQcRUA0ihRbAqMD
YlCEAcFhBBIUARFEQ4giGGSwdSSAcACDiEDTJGwtiyw2NotNryAIcVr6nvMw
Vda8WFOxivtCXfrc7567/M79rHwP7fBXp9FoB9VotJd/VdszFKsjiIl3VcBH
89sUat0cMQzLFRAwv00iWVAVvbtCDtlZLzcF0iqubFRPlENz08tNjqJrfw5q
15KBKk+OUuqy8vbslVN5MjRreS3qeoWMypOiVA3TZLs8GZUnQY4Nu4KFP8qo
PDHy0jz71W13nCdGb9FGCvfp4ONFqL3TLkoUKoX54U3j6KCFbnKmpZQ63xiK
bXbfz9SWwnx81ggKPOoJ1m0SKk+INru5hnx5QELlDaPCJga79amYynuMnM4+
jUtoEVN5Q4iVaBAMAjGVN4COC797kmcjpvL6kWtKAHNpOD6+B5XTL96IKBDD
+fnxfJRwz23y25ti8Js/XwdK3sDSy/OWgP18/m8ozZL9gLZMSuXx0K+2gncl
DBl1fAOqXnWavm2VjBp/F9Vx+HqBE1I4M/97GWK5XR2e85BC7Px+IQpPM7WW
dOHrpdFYWxQBl4okkKv6HfZeLXG9N4r3y4BTkOC594QU1qry4Z0Txo/i0mTU
7w1QFuLCdLRS4PlBksWnqUtDp8BRNX9Y5XW5v2PrNASprg/0rFa/Zek0Czmq
6wduayiTcfF34KnuD6xfPe1yMpjGpu4fVLWl0pkSNbZq/AAUXnNI2xNBZ6vy
h6Da+WdvmyI6m3o+8PjfXZclDA226nzDYB+1kX8iQ5PKE8JY3ODR62FaVN4I
HEnM2TDpo03ljcG+qoiCgnQdtmo+43DTYtOpqU90qDwRGDOSVpYd16XyxFDF
F3zg6buIzVW9n9BSsjXJu0GPTb2/8JeV4w5mP+pTx0vhi79pdJ6L1qfOJwPf
oSX+Pff1qTw52FyLPKIVZ0DlySF9+tAPMYmGVJ4CDEJOvaj1MKTyJuGIewhL
76+LqbwpSJqKLLIIWUzlPYPdihopt4zsI691t0xCG+uJZx8BLy6CXUM8b/8u
UzNA3Ew8G9hy5sT1D4jnXDO7utAVvxDPoc66mTNZXOL5s4HItpWOzcSzi25n
Wk5pI/E8zLOml+pwieeIqu/NFjtyiWcBz7p0ZSSPeLYqCdNm5rUQz6YMj8iW
EB7x/E9j/u33RlqJ5+SQJ/SIG23E80CkkdNgcDvxbMu5OPZpWgfxnPiJT8ai
mA7i2UG7aDz2AJ94rnunJCG/pIt4bvimannhaT7xLJ9rCzGQdBPP+8r/fCuM
2Uc8L+Vz1z/8oJ94Xnfr/o6LRv3Es3I+hy04/cSz8p/uNnoDxLNyPo782gHi
Wfl8AkYrBonnoSsXjLf8NEQ8m9v1pnhsFRDPyvtxoXGZkHg+tyn52Qu/UeJZ
mac+YjpOPPO5U8/77owTz5XhaT76riLi2dCW45+RNUE8K8cnOz0WE8/Bd8IH
WDIJ8aw8/ny8C16vldd5kGmuGJcD9nxX8X7R7oxJwJ4vTVzN/vLYFH4+cIgZ
z0ln4vVjGGb+/vVZ0eUZ/HzhuFFxTFLTc8CefRd78XO85wB7Vr7fLmpCvL6M
g/L59PCSfwfsebmD9m0PI7zeiF+Oz/se0Yjn1fvK12RXqBHPyvmsEn2kTjwr
n98JiFEnnpX3Wze/Xp14Vr7f+QFmdOJZOd6/vodOPBdZeLuNttKJZ+X1HDvQ
wyCe6z9fM73HWIN4fvsfY42sFWQfeU0eOux2VYSw5yi9uxrWnWKEPW9c5MCI
jxlF2HPS5jwT/eIxhD0XT/FFkpkxhD0HhRRPlwWPIOzZq9nYcHOvEGHPmgmu
TWeCRhD2/GyF2S7FRiHCno/ZttX5nX6CsGe23b9yUs8LEPac42kj/40pQNjz
PceqC/t5Qwh7jjrJ03phM4iIZ+3TiuynvQh79twk3nDj+kOEPW/jdr5fcaYD
Yc/ddYp+dXYHwp4lrMFfn7fyEPbMrS62ig7jIuyZmekkZ/k2I+xZ2yadHx9T
h7Dn2IxLteuulCPsefsaV0b0LAdhz107KirMj1cj7Hlt7/q4K+dqEfbMCDgW
tVqtBmHPXoUP43rvcxD2TGsxnH17fRbxLLSx+mz/e5XE81o2QM3TJuK51Kjb
fYmwi3hOCWaeTEl5RDz7mKhvaVKuH9hz1ClB/k8H+4jnBz7Ozp07u4nnUzvX
GM048YnnM9IRs73rOohnk5y+mpRl7cSz7mxr00xmB/F8j8u4Y/Kok3i+71Ve
L57oIp6FKdEvyr7qI55twgo//vbjfuLZelHuY45zP/Hs5PqheXjgAPFcYi4K
yx4eIp4ZOX67fbcJiOeCb8y2+y8XEM9dR03VW28O4+8JaP4y8XXuYSFgz0Ef
FqQHlo7i7xHYDwfmaLPGAHu253WW5NLxeieDpo6h2irTCfy9A5PPWfuXNooA
e05qP7fT0keMv5eQmu3p9G62GLBnY5pW1q5KCWDPsu2SP80V4D73DJZAvh+r
Evexhb79qr7t+F99+zzl+U3t29WU59fVt+3/R9/OpTwv9O2Fvv1H6NvYM+7b
2POb2rex59fVt7HnV/Vt7Hmhby/07T9C38aecd/Gnt/Uvo09v66+jT2/qm9j
zwt9+//Tt/8DT/YA5A==
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 
             75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
             91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105,
              106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
              119, 120, 121, 122, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 
             50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 
             34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 
             18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 
             1}}]}]}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            
            PolygonBox[{{123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 
             133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 
             146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
             159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
             172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 122, 
             121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 
             108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 
             94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 
             78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 
             62}}]}]}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
            77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
           93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
            108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 
           121, 122}]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
            135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
           148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 
           161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 
           174, 175, 176, 177, 178, 179, 180, 181, 182, 183}]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]]}, {
          Directive[
           PointSize[0.009166666666666668], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[
           1.6]]}, {}, {}, {}, {}, {}, {}, {}}}], {{}, {}}}, {{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
          "]]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}}, {
    PlotRange -> All, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.5, 1.5}, {-1.0525226807665424`, 4.181453507507592}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"95\\\", TraditionalForm]\\)%\"", 
        StringForm["`1`%", 95], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"50\\\", TraditionalForm]\\)%\"", 
        StringForm["`1`%", 50], Editable -> False], 
       InterpretationBox[
       "\"\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)%\"", 
        StringForm["`1`%", 5], Editable -> False]}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[141]=",ExpressionUUID->"168c96a3-8f7d-41de-b6a4-79ed1c812af3"]
}, Open  ]],

Cell[TextData[{
 "Compute the approximate Bayesian logevidence (also known as \
\[OpenCurlyDoubleQuote]marginal likelihood\[CloseCurlyDoubleQuote]) of the \
network model. It is given by ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"marginal", " ", 
      RowBox[{"LogLikelihood", "[", "data", "]"}]}], " ", "-", " ", 
     RowBox[{"L2RegularizationLoss", "[", "net", "]"}]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "378ecc3b-d04c-474a-9436-1183ce3243a4"],
 ". The higher the log evidence, the better the model represents the data."
}], "Text",ExpressionUUID->"f15c1f42-3b86-4a19-a074-83c194b8e491"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"networkLogEvidence", "[", 
  RowBox[{"trainedNet", ",", "testdata", ",", "lambda2", ",", 
   RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[142]:=",ExpressionUUID->"1d3a5498-b2b0-4453-bb0e-6a7d8874e98b"],

Cell[BoxData["0.7730032336519308`"], "Output",
 CellLabel->"Out[142]=",ExpressionUUID->"dc9017f9-1479-45fd-b569-787fde201a48"]
}, Open  ]],

Cell["\<\
If you want to see how the logevidence depends on the regularisation \
coefficient, simply pass it as a symbol:\
\>", "Text",ExpressionUUID->"2a215e68-43dd-40a4-acff-670e1fd4d317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"networkLogEvidence", "[", 
  RowBox[{"trainedNet", ",", "testdata", ",", "\[FormalLambda]", ",", 
   RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], "]"}]], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"e8a694d8-7ede-4a67-8a58-82b40ebf68d5"],

Cell[BoxData[
 RowBox[{"1.1100168824195862`", "\[VeryThinSpace]", "-", 
  RowBox[{"25.099474074382115`", " ", "\[FormalLambda]"}]}]], "Output",
 CellLabel->"Out[143]=",ExpressionUUID->"c2f6093c-10a7-40e3-91df-f7af55959bda"]
}, Open  ]],

Cell["\<\
Perform a comparative analysis of several networks. You can run the cell \
below several times to aggregate the results. Note that the L2Regularization \
can be interpreted as a prior on the length scale of the variations in the \
data, so we consider it as a parameter that either has to be fixed a-priori \
or determined by cross-validation.\
\>", "Text",ExpressionUUID->"94ef958d-f84b-48f8-aa9d-d58bda66ac1e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ListQ", "[", "result", "]"}]}], ",", 
    RowBox[{"result", "=", 
     RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TakeLargestBy", "[", 
       RowBox[{"result", ",", 
        RowBox[{"#LogEvidence", "&"}], ",", 
        RowBox[{"UpTo", "[", "5", "]"}]}], "]"}], ",", " ", 
      RowBox[{"(*", 
       RowBox[{
       "retain", " ", "up", " ", "to", " ", "5", " ", "best", " ", "networks",
         " ", "from", " ", "previous", " ", "runs"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"config", "=", 
            RowBox[{"<|", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<ErrorModel\>\"", "\[Rule]", " ", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<HomoScedastic\>\"", ",", "\"\<HeteroScedastic\>\""}], 
                 "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", " ", "0.01"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<DropoutProbability\>\"", "\[Rule]", " ", "0.25"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"\"\<LayerSize\>\"", "\[Rule]", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"10", ",", "200"}], "}"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", " ", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<ActivationFunction\>\"", "\[Rule]", " ", 
               RowBox[{"RandomChoice", "[", 
                RowBox[{"{", 
                 RowBox[{"Ramp", ",", "\"\<SELU\>\"", ",", "Tanh"}], "}"}], 
                "]"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"net", "=", 
              RowBox[{"NetTrain", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"regressionLossNet", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"config", "[", "\"\<ErrorModel\>\"", "]"}], ",", 
                    "##", ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<LossModel\>\"", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\"\<AlphaDivergence\>\"", ",", 
                    RowBox[{"\"\<Alpha\>\"", "\[Rule]", " ", "0.5"}], ",", 
                    RowBox[{"\"\<SampleNumber\>\"", "\[Rule]", "20"}]}], 
                    "}"}]}]}], "\[IndentingNewLine]", "]"}], "&"}], "@@", 
                 RowBox[{"FilterRules", "[", 
                  RowBox[{
                   RowBox[{"Normal", "[", "config", "]"}], ",", 
                   RowBox[{"Options", "[", "regressionLossNet", "]"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", "testdata", ",", "All",
                 ",", "\[IndentingNewLine]", 
                RowBox[{"LossFunction", "\[Rule]", "\"\<Loss\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Method", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<ADAM\>\"", ",", 
                   RowBox[{"\"\<L2Regularization\>\"", "\[Rule]", " ", 
                    RowBox[{
                    "config", "[", "\"\<L2Regularization\>\"", "]"}]}]}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"TimeGoal", "\[Rule]", "60"}], ",", 
                RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"TrainingProgressReporting", "\[Rule]", "None"}]}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Join", "[", 
             RowBox[{"config", ",", "\[IndentingNewLine]", 
              RowBox[{"<|", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\"\<Network\>\"", "\[Rule]", " ", "net"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<LogEvidence\>\"", "\[Rule]", " ", 
                 RowBox[{"networkLogEvidence", "[", 
                  RowBox[{"net", ",", "testdata", ",", 
                   RowBox[{"{", 
                    RowBox[{"\[FormalLambda]", ",", 
                    RowBox[{
                    "config", "[", "\"\<L2Regularization\>\"", "]"}]}], "}"}],
                    ",", 
                   RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], 
                  "]"}]}]}], "\[IndentingNewLine]", "|>"}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "12", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Method", "\[Rule]", "\"\<CoarsestGrained\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DistributedContexts", "\[Rule]", "All"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[148]:=",ExpressionUUID->"e5c67919-f82b-470e-ad58-dbb16adfb77c"],

Cell["\<\
View the hyperparameters corresponding to the highest logevidence:\
\>", "Text",ExpressionUUID->"a9b41a44-5591-40df-8fa9-c19d9f72ef52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "@", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"assocs", "=", 
      RowBox[{"TakeLargestBy", "[", 
       RowBox[{
        RowBox[{"KeyDrop", "[", 
         RowBox[{"result", ",", "\"\<Network\>\""}], "]"}], ",", 
        RowBox[{
         RowBox[{"#LogEvidence", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
        RowBox[{"UpTo", "[", "10", "]"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Values", "[", "assocs", "]"}], ",", 
      RowBox[{"Keys", "[", 
       RowBox[{"First", "[", "assocs", "]"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellLabel->
  "In[156]:=",ExpressionUUID->"efcdd220-bda4-4eac-a853-26ab342e9bb4"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"ErrorModel\"\>", "\<\"L2Regularization\"\>", \
"\<\"DropoutProbability\"\>", "\<\"LayerSize\"\>", "\<\"NetworkDepth\"\>", \
"\<\"ActivationFunction\"\>", "\<\"LogEvidence\"\>"},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "47", "2", "Ramp", GridBox[{
       {
        RowBox[{"1.730564248561859`", "\[VeryThinSpace]", "-", 
         RowBox[{"45.36541050672531`", " ", "\[FormalLambda]"}]}]},
       {"1.276910143494606`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "196", "1", "Ramp", GridBox[{
       {
        RowBox[{"1.3781869769096375`", "\[VeryThinSpace]", "-", 
         RowBox[{"34.55525076389313`", " ", "\[FormalLambda]"}]}]},
       {"1.0326344692707061`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "136", "3", "\<\"SELU\"\>", 
     GridBox[{
       {
        RowBox[{"1.3832840323448181`", "\[VeryThinSpace]", "-", 
         RowBox[{"43.24804922938347`", " ", "\[FormalLambda]"}]}]},
       {"0.9508035400509834`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "108", "5", "\<\"SELU\"\>", 
     GridBox[{
       {
        RowBox[{"1.5045592546463014`", "\[VeryThinSpace]", "-", 
         RowBox[{"58.165935814380646`", " ", "\[FormalLambda]"}]}]},
       {"0.9228998965024949`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HomoScedastic\"\>", "0.01`", "0.25`", "111", "5", "Ramp", GridBox[{
       {
        RowBox[{"1.3152079939842225`", "\[VeryThinSpace]", "-", 
         RowBox[{"42.47914207261056`", " ", "\[FormalLambda]"}]}]},
       {"0.8904165732581169`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "88", "5", "Tanh", GridBox[{
       {
        RowBox[{"1.2425365090370177`", "\[VeryThinSpace]", "-", 
         RowBox[{"39.59303232468665`", " ", "\[FormalLambda]"}]}]},
       {"0.8466061857901512`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "90", "2", "Tanh", GridBox[{
       {
        RowBox[{"0.8852129101753234`", "\[VeryThinSpace]", "-", 
         RowBox[{"29.595649778842926`", " ", "\[FormalLambda]"}]}]},
       {"0.5892564123868942`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HomoScedastic\"\>", "0.01`", "0.25`", "17", "2", "\<\"SELU\"\>", 
     GridBox[{
       {
        RowBox[{"0.7057634890079498`", "\[VeryThinSpace]", "-", 
         RowBox[{"11.868906691670418`", " ", "\[FormalLambda]"}]}]},
       {"0.5870744220912456`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "123", "5", "Tanh", GridBox[{
       {
        RowBox[{"0.8460267961025238`", "\[VeryThinSpace]", "-", 
         RowBox[{"27.73672022111714`", " ", "\[FormalLambda]"}]}]},
       {"0.5686595938913525`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"\<\"HeteroScedastic\"\>", "0.01`", "0.25`", "121", "1", "Tanh", GridBox[{
       {
        RowBox[{"0.8070893049240112`", "\[VeryThinSpace]", "-", 
         RowBox[{"29.788636922836304`", " ", "\[FormalLambda]"}]}]},
       {"0.5092029356956482`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
    "ErrorModel", "L2Regularization", "DropoutProbability", "LayerSize", 
     "NetworkDepth", "ActivationFunction", "LogEvidence"}, {
    "HeteroScedastic", 0.01, 0.25, 47, 2, Ramp, {
     1.730564248561859 - 45.36541050672531 \[FormalLambda], 
      1.276910143494606}}, {
    "HeteroScedastic", 0.01, 0.25, 196, 1, Ramp, {
     1.3781869769096375` - 34.55525076389313 \[FormalLambda], 
      1.0326344692707061`}}, {
    "HeteroScedastic", 0.01, 0.25, 136, 3, "SELU", {
     1.3832840323448181` - 43.24804922938347 \[FormalLambda], 
      0.9508035400509834}}, {
    "HeteroScedastic", 0.01, 0.25, 108, 5, "SELU", {
     1.5045592546463014` - 58.165935814380646` \[FormalLambda], 
      0.9228998965024949}}, {
    "HomoScedastic", 0.01, 0.25, 111, 5, Ramp, {
     1.3152079939842225` - 42.47914207261056 \[FormalLambda], 
      0.8904165732581169}}, {
    "HeteroScedastic", 0.01, 0.25, 88, 5, Tanh, {
     1.2425365090370177` - 39.59303232468665 \[FormalLambda], 
      0.8466061857901512}}, {
    "HeteroScedastic", 0.01, 0.25, 90, 2, Tanh, {
     0.8852129101753234 - 29.595649778842926` \[FormalLambda], 
      0.5892564123868942}}, {
    "HomoScedastic", 0.01, 0.25, 17, 2, "SELU", {
     0.7057634890079498 - 11.868906691670418` \[FormalLambda], 
      0.5870744220912456}}, {
    "HeteroScedastic", 0.01, 0.25, 123, 5, Tanh, {
     0.8460267961025238 - 27.73672022111714 \[FormalLambda], 
      0.5686595938913525}}, {
    "HeteroScedastic", 0.01, 0.25, 121, 1, Tanh, {
     0.8070893049240112 - 29.788636922836304` \[FormalLambda], 
      0.5092029356956482}}}]]], "Output",
 CellLabel->
  "Out[156]//TableForm=",ExpressionUUID->"1cb54d19-8026-42f1-a8d5-\
872aab0dda13"]
}, Open  ]],

Cell["Show the predictions of the top 5 networks together. ", \
"Text",ExpressionUUID->"c2eb2391-8033-40da-a9b2-565597da3993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "@", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xValues", "=", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1.5"}], ",", "1.5", ",", "0.05"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"quantiles", "=", 
       RowBox[{"{", 
        RowBox[{"0.95", ",", "0.5", ",", "0.05"}], "}"}]}], ",", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"results", " ", "=", " ", 
       RowBox[{"TakeLargestBy", "[", 
        RowBox[{"result", ",", 
         RowBox[{
          RowBox[{"#LogEvidence", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
         RowBox[{"UpTo", "[", "5", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "minMaxEvidence"}], " ", "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"minMaxEvidence", " ", "=", " ", 
      RowBox[{"MinMax", "[", 
       RowBox[{"results", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<LogEvidence\>\"", ",", "2"}], "]"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Thread", "@", 
            RowBox[{"Tooltip", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
               RowBox[{"Values", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"InverseCDF", "[", 
                   RowBox[{"#", ",", "quantiles"}], "]"}], "&"}], "/@", 
                 RowBox[{"sampleTrainedNet", "[", 
                  RowBox[{"#Network", ",", "xValues", ",", "500", ",", 
                   RowBox[{"TargetDevice", "\[Rule]", " ", "\"\<GPU\>\""}]}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"#LogEvidence", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
           RowBox[{"DataRange", "\[Rule]", 
            RowBox[{"MinMax", "[", "xValues", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", "\"\<LogEvidence\>\"", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "minMaxEvidence", ",", 
               RowBox[{"{", 
                RowBox[{"0.1", ",", "1"}], "}"}]}], "]"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"List", "@@@", "testdata"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
        "]"}], "&"}], "/@", 
      RowBox[{"Reverse", "[", "results", "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[159]:=",ExpressionUUID->"79d0fd47-d8f8-4d3f-b997-d7def80083b8"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1], 
          LineBox[CompressedData["
1:eJw10ntIU2EUAPBNm1TkqzTNBynaAx9gGVnKOtes8LmmPWyQRuJ0PUhE/wiK
SDEhDdEw0mE0qz/KZxBYI+Qjlcx8oJamSyzzOXV3c/dus7Fpee/xwOXy8Z3z
O98rMCsvTe4gEAjE/7+NPx+rJK8tsUpnWYNILizkuj6xPLrYDjlcmIm2vTP0
3Bk7KGs3wkQ80s0jV6/ZoL9vI1iiApm7yNMGvMeSOFra1SqxoseQn5rmkTSp
FT0jEebmtrnN/0VvhTB1fpfO/1hFz0AObWc1efMW9AwkcS3WFlhtwXqaKIsu
U/ZIC3DpfcukOcK5xmXYjP2WyI3UUtXkqAk4vlZLlM3dVQ0Mi94CsatTJtIV
LHpzxCnmtYJRM+jNkMYrVH3xbga9afIyIXhp3d2I3hSxzR70fpSygt5vwkyJ
RGGPDVg/QfpvSvKP7zFADZc/Tk7Js1NbSvWQzfUbJfHNupkxqR4iOP8bmdHs
03Q76dEbJLqylpUXp2ms7yF1vhr5+Cca8zuJUtmbQWJpqOTm1eSDY57NN5SG
+9z4DVm0Ukll0TRs3rDYsyvX3qAHFT8PY+ry1MLMFRyr4eEB58UQAwPHeB90
fYb12cOrON8D74oSnlvSN+9jEIZqWmxPA8xwhF8/vKKTs7Q2FhT8/kCVuSBJ
LmChjt8/BN6Lc/lVyMIgfz5gaooKfy8XUHh+cLTSde6Ll4ji86cgfsjxmfSB
A8X70zCguH3i614hhfcDHe7+ObcaBRTfbw5mms5qT8o2vQUIzAmS1n8UoKcF
ib0i5o5diN4ShOQULIZ5baH49SxDVIfHZEmSE3o0CMft3y8ItqFngOp8Z/Go
6w5qgH+fMOElDpbpXSh8v1AyJTOljrphvREme8uDohQ7sR8D3ncz5AHWXeix
oBJLtE9UnuixEPDHenF/mxd6JjD2+L0Nb/dGzwzGVp/x2c8+6Flg+Hn3cniU
H3qrsLVC5NHb4E/9A6Y21lE=
           "]]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1], 
          LineBox[CompressedData["
1:eJw1k3tIU3EUx+cYOdFMnSnRw2aS6bIcJmZh5/aklQZpqFiJ2ZyCYaEQpmKm
f9gSK0HKxwrBlgykpmWlVr/SZRk+Zpvp3VKzlW4oU/dwS0Pa7v3twI/Lj3PO
53sev8vNvJqYxWQwGHGO4/zSZkecig9fOaomFEWZDVVdmS0OrGpDIsqWUSA5
ZBvMlkBDvdOsVPztd2IYHHCaBSV7RyRWVHcAzbMge5JOKlI9BJpnRl5MXsu4
pBtongmdnC6qPVWqwLwllN4lkBwJ+4R5i2hNXRirvtiDeYtosaUvt/b6IM43
Il5lgFtcpBKo8IF5p7/4UOEo1ptDwoNTQQ0jaqDw9QY01nwtusRPjXl6lC0S
TYbsHse8GcRnt5aMviAx7zcKu3CvfDJFg3k6tDVNmLIq0WDeNDJ9SxC1NWsx
7yfaxEpeMeVqcf4PdOKV+ZZUrIE6Kp5ErVvS2PKzJAgpve+oW+C1kzVFQiTF
V6G6PD+d+xcS85TOeZSdzyNxfj/S/i1931OrwfG9SHw4g/sxVAP3KX+nU082
flcDZdRdhh4vtHgbPV31MRjxMWK3W+GT0ET7wdHfgcbLv/C9E1QJmak3umZh
P82HXusuhXRlAfv7YdiWxBnJMrrqg1A+++0d1Rzso+uHf7Ilo3+HAXLo/ig+
+5keJHT/4B3R3mmS6EFJzwc27504xkc21/zgjzJ4KiSbQdDx08DkVRrjE1cw
XwepsS8z1qqXXfsB/arMLYlnwXozMBKsfTS2w+zaL1QGkEVRnlasbwCJYnuT
MsuOeXPw4GjVgLx9FdczD+d0UsOTUAZB84zO/PD2AiaB3x9MhKy71KFjEUP0
+4TPp2M8lHvcCfx+gYhO74vf5oHzTeDYbzmX70nQemaQ5+d4vK5fj3kWOJPp
o/QZ3oB5FuDK81niIF/Ms4JjvzUyoy/mLYPj9zt+U8DBPBs8bVS8KRf6Y54d
CnJqBKznG4n/53rPYQ==
           "]]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1], 
          LineBox[CompressedData["
1:eJw10wtIU2EUAOCpmZpoSQYRGPmKpBTLShHyDIlcgj3WpLDUcm0KmYUZhIRK
JVlgmqZpJphaPkBdJZgvzsLUmQ9Gk/m65eYLn/Ox+X6svPd04HL5+c/5zv/f
/7+OEfeEElMej3fm37P95mIFheHr0jRTntyLjWU0Mq3x+V+NKGVjCV0CzBvs
xRv4Lnc7FtE6uP3LHdMN7OzYDgP25e8tEYlXkfMM+EnlmGafvoqcp8f38Qp5
DbNE3gJ+qRTYJbQayJvHUI9dn81S9eTNob47q2Ptop68ObwkuqR9fHqO6nVo
+7gwsdFbh2x6xzTG1F6p/nN0nPpNYVyku6MzM4YsnzuBN2sO6nq7R8kbx2yb
U/0vizXkjWH9gKDMKWmAvBEMbxlKDCrvIW8Yr8YqNi1tVeRp0WVk95G83+3k
adDPqPZ7o22hegavpRY/OVXUgjlsfh9GObm5rKoUeJvtp0a/V8nrwtZm9GR9
Ffp8DmKMaz/IU+JZ/8xmh9Amqm9D2+fR+SHVcspvwsDbFfMrkXJMZ+drseBO
f+aBoQZMYsdleD9EMaKNq8X/J3xosELcYlGKBdw88Fx902OEMuDGtSA4URb7
QNgFPpwPoiLNHuPBQZpvg+heN6XEmwFaH4huSTd/tqvhJLd+CJvJOFGp+QVR
3P7AaSmvcnZSCe+5/YOsvq7iQoESlNz3gbeW2WHjkhnyNHDYOVpmcneZ8rUw
LLU5N+81S/4wuPrPpii/jQKdDxy7HMm4GAeo3xiEVV0v/ihSkzcOWd/V5QI/
LXkTcNIhICP4wwR5UyB7GJ6yO0ZH65mGIcuYyRcWBvJ0sL80ysSha5m8OQiU
bVq53VuHLu5+gtgYwaQyW0D3Fx6VWBYupvH4XP0C1K3zGrtfm/C5fnrwnNkn
cAczPv0fEHL+WefijR18zjOA/0a3uMfOnE//F0BswGggfyd5S5AwUCY5nmNB
3jLoPZ5aVTlbkbcCdcm+W/FSa/5f1bvm3w==
           "]]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[0.1]},
         "0.8904165732581169`"],
        Annotation[#, 0.8904165732581169, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
        "]]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}, {{}, {}}}}, {{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`], LineBox[CompressedData["
1:eJw10ntIU1EYAPA1bTo3S3uKGLpaYoWWr7TUvouEK4jQMJLAnPlaill/lKFS
S6eYkgUpNbGymn8UWU6DMsWDWQ1TSysf6QqHa042dbv3OtcDS+8994PL5XC+
8/u+85CcLjiWxefxeHHL38qfDScaOZ5cm5ZKQzgTi6iv7NK+aR0N2Uw4UEXs
QHihioZ69UosIA1RnOelpWGgfyVoVP32oDTqKQ2sRyN/oSbRVsN5FKrYrJGt
0VLYI9GHdq2i+Qnn2dE7nvcLVQOFPRs6Euvt7qAp7NmQ/tn3odhIrp85lJvr
tzY0hQImvd+Kbhvu2pspCtezILHHjeSjcgoYXj2DBGR+14nDnGdGoylZzpfl
XD8mlP48oUbkJLFnRHKdfIvcTGJvCqX4TYiv+XGeAY0E/r7apyOxN4n0HZaE
T2Pcej0SeQQHDilIuMPkf0Mx1aJTNUkkZDL1RpBJY0uSuZGwh/G/oIAS4/U2
nR17gyj4gDbEV2vH63tRxtnUMWqbHef3oJq9r1TCFhvcZObbUUDcdpdb7+dB
yYwfI6tvyIQych64G94aKC894zMLjew8lPYJ3+RdtuBxOxj0O/iyTCtEsz4o
84WitE4Sz/fCtIvPo7BKB9cfKCOKiKkrvyCC7R+qfjaHtRb9BQW7P5AELUld
T/6DBnb/UJ5ToOiu5xGD7PmArNC5odu2isDnB/5NO5Wd43yCzTfAQ3OLYNzh
QrD+FNyRDEtth1wJfD+QoOjXRCSsJth6JlCc68pYv0uAPTPwoxMLGnsE2JuB
qLyZFGOlG/YsIC5+kN5od8P9WKFyo6u9rcwde3PgNVxXFxQqxJ4NjPslkoEq
IfGRfZ9Q/yOu5P6AkMDvF3TknxKpWYjXk7C0MBm87rUHrkcBP+2i66hahL3l
dz97vlVCi7BHw+4Lplq5rxh7C7ApXkOr28XYc8C9z00dqTme2FuEOu8YVXa8
J/acYM3yl32N9ST+AwPtx7Q=
           "]]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`], LineBox[CompressedData["
1:eJw1kwtIU1EYx8eMkhJJy4zQwCxSIixKrUQ+H5XNlCAtaqVGqYn5SBMriug1
wySbFKEZtBUKkvggrDTypFa00rIi173XlbZyynTp3MtNve3ce84Hl8vhfN/v
e/1P0PHC/VlSiUQS7f7wXzQH+mxP8eAzONgimB0pu617zlVykC2YDR303ph7
tYSF+zXYrGhnRV7kfKAO+nqxWZD28ek+lZoDkWdB6OGqh8kBLOFNo0B5ZnBz
KOWZkWdjgLdnLuVNofWbPZcb3rGEN4kSvaTGqA7Km0Re0g1n06JpvAl1fVAn
Zz3hQHDvHUea0k59azlD8hlReeyx0OY+DgR8zRhqShiWXxpgCW8U+TUlqG+k
MYQ3gutbpGEYwvuD7sVXhFT91BKeHvVYQ1SyYobwhnH/041xWsIbQr/23Srs
tNJ6BlFQS7GXNp+FasGfQesWXlH4P2cgU8g3gEwXYeqEkoFNAv8bnm/3Ct8f
hNePwnRr4/gChsRr8H5engpjiX8PelVyJ9X4lAWlcN+Oz0leHoNwWTg34P7a
J67pgG541NWQ8btoCFTiPZzJqaqVu/Tk3A5JkeWtUSfHYJvIh1R93ZKGvSZy
r4HGALnEp3WS1gcx4en1lVIzbBXrhxerFZEy3gw5Yn9wd+UC598ICzwQ+wd3
/tiyAiv0i/OBfIOrqvmIjc4P68DPobQR/2GoLvC9ncjaCV+P6z0/ccFO9wNF
0Yt75t46SL4RMH9NHqirm6H7BTy/Z9wM4Y1BeofsvSLVSXhGcOt11/dBJ6ln
HNz7un70ppPwTODep7pM56L6gy9rOMVS1Sx8EvUJjhR9zWs0S/ULPoe2z5Ye
mCPxZnDre8fh8DmSbxoq8gzqf7vn6fvA/4424AnPAsHcTEtXG0/fF55X/LKP
POHZsA4NsmxJjMizQ33tm5gILU94Dhzn/0jHw3+JDd6Q
           "]]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`], LineBox[CompressedData["
1:eJw10n0s1GEcAHBh3tJq+KPSjKUXIiLcH+pro2ZmI9YfXkKGTJSVDVPLRk2a
ELu8pWvt0mGlqck039tqGaHTvf3cHTnn/aTDeV1T+f2+992e/fbs+T6f7/f5
PY9b6s2YdHMzM7Nz/8ful4tNxGuiiOIPKvRnYwMdytdj2801mMHGOt6Sq7aV
J8ewoX431vDAoiNcKGNwaHA3jFgycGa9IUeNnGdEi+l4y+MW4+Stok7Up1Tl
MuStoGtlxQOhwuQt4zeB/+uwKZNnQAETEpGSzJBnwKQu1zhevIr2L6G30+kX
W7YKZNMHF3GkbnsntkdD9fR4VFj0VzUtR5avn0cxby00tUBJ3hwGWVs9lySo
yZvBKNsYzyYvhrwpjOdnuydNqcnTofb+4dWqilHytMiU7neT1WvIm8DuqNpg
cb6U9mvwd9/wPX6fDOvY/FEUuXrl2DFyTGPrKbC3PjT98h8Z+rK+FDXSoE7B
toI8CSacLwrMmpHS/n5c7R9a2PCVUP5nLNfeljZ3DGAVu96NXqGP3wcc6cVi
di7CsqEMF79DbWi64bSK5tnR+F4QcOvw1c5v4YmBoXk3dFXPpfhmzQCP86FF
z9tT6zJL6/2gzeL1jHdOA/UHO9dLD+bZTcNZrn8YePuxQGytg0zufGDv4NRc
eWISmrjzw8NLC2mOUTqQcP8H+OJ9xu42LXkT8ONlfpvm3Rjla6Hdxz601Pkn
+ToYDJwULjwdBbofiBYtLYfvqKneDIQ4FdXWyNTkzUGKh5D/RsyQNw++heZF
e68oyNND9MVCl5Y4JfWzCJ9keY1hARLyliBb0ZNsSJWTZ4BE+H7MuZWBYe59
wmLrqV821Uqg9wvhnvqtmixTPysQ2TF2laeSUr1VCMku03/JNHlGcK/JDRYk
qsgzQq1P44SNWkPeGpQNexcMPGLIWwdesyW/w0NN3gbciY6cuvtKRt4mZD4b
KblhJYd/HGDvXw==
           "]]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.17564159709578586`]},
         "0.9228998965024949`"],
        Annotation[#, 0.9228998965024949, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
        "]]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}, {{}, {}}}}, {{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`], LineBox[CompressedData["
1:eJw103tIU1EYAPC5nNvuvPlHoSAGVhqFUPNJrvS7rvCPoK03QQ9SbIyUVkhK
QSim62llUW4xdYnLRLI0CYTlUZfgxFeotZmQU7Mttzm3uU1NKe89++ByOZzv
+33n3HPu9lzFictsFouV8f/ZeDMRQDlkUWNGpoBKpsOPsid7RdYAj5LR4UNC
S2KXzMClXqk3Ygn1B8J+yro41ODARngRX3XYVHQxlGI8L0p4X3KlpJuNPQ/6
0GlX5xJs7LnReN/0ZJyEhb1F9NY8nNecvg6M50JJ6RrztZA1YDwX6uHfWRtZ
XQGm3omI6uJtNyXLQKcP2JH/8WafIicATL959FJ7sGrikg9oXm1D07vrC46b
vNizIoWs30x88mBvDi3nW8rtdW7szaJqbqROf2MRezMo4fXYcPpvF/YsaMuP
web4chf2plBce8PM1xAXrp9ELQ/tboN4AVR0vhk9izwjN9oWII/u9w2FK1Me
1TocIKT9UVR6v+hzdKMTeyMo5pbSUBztxPVG1La8XDG87sT5BpRq8yiH7Q54
Ss93oDryXmay1QGl9LgJ1T+4miN9YofgCUvju42JJX9Ay8yD+k3Si10hwXEH
FJxViK3uedjP+HCy7VSWaNWN540gzFe3tFYGguuDtMJVXVXNX0hh1g9dOlPi
PhGLkjP7A5e0cvSjMoTSMPuHtFgTsXOITY0w3wdUe54fIYngfZkClXy29cBI
KM63wFB3inz2Aodi/BnQQkTb2hKHwucDNolAsHA9DPebg4nkd2U92VzsWUHf
8SX60G0u9mxQ1HBUysvgYW8easkYvaaCh9djh60giqxK5WPPCX0scXXTGB97
LlhRdGh+AUENMfcThJ1RfRwdEby/UD6+qSLrO4Hr3WAoJ8qUsQLczwPT4ppz
e52C4P8BTX5hMXciHHteMBf2RyiOhQf/L+DIyR1RbBJ7PghQHu1dRGLPDymm
dp1klMReAHpPK89v1pPUPyV0yao=
           "]]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`], LineBox[CompressedData["
1:eJw1k3tIU2EUwC8GPTSH2Mu09x9mWJRU5LMzMKwZQc0eQ8x8Z7YSKaUMUkGR
WlZWa1lijcAHav4j4Qs/dNNSnO7ZmLXWWJjb1Nymzjbd2r33uwcul8N3zu+8
92YVcnP9CIJI8H3kn5Zl1Dx81jp7UQFHKXGiUwK+O7BJDnmULKHGd9I9VVoF
vK0jZRHlxBke7DfIQTZGygJK3ugXICxRAM2j9G2xhQzPge6bw7eLRUrMs6O1
FUKBa4Hh2VCN6Hbj1mol5s2jLZ9Ot09mqzBvHhW/DJH+RIz/HHI9LJiOsMiB
Mh+bQQL+n+orPUocz4oa/jZx+1kqoPB1ZmQs3RzMaVVi3jTixXRWWkLUmDeF
DqQ9G2xuUGHeb6TY931D/EEV5pnQcoqJc62L4RlR59eS1MwkDeb9QisttsEw
txr7/0DpPZxXUaNqeEPZ68h4GUabBnKoeN9Q0mfHpcxHSjhC8VVkP5xtrWrM
k6MzxtJ4W4AG+48gS3hUfTxPi+0l6DLrUCjfqoHn1Hs3WW/oR4sWyim9BflF
VgdL2nTATFiyGCHNCNLDB/odygr6yvWxJqx3gy9+ZFmBGaJpPvjq27Uuew6/
j4CvP0n31tuZ/EB1LmtHzJADjtH5w538WlmqaBHy6foAvQ/dFJ2/BPV0/bAz
Nceg8zpBTvcHXicKeLLeZaZ/sLvKquPa/2F7I7CPpw/rA12Yb4IKYWJK8aCL
mQ+Q87GmuXC8KbhRO/skmeVm5gu+/f0i5Lsxzwy+/eoPYK1gnhVO+msnAotW
cD4zcL5G9JQnW8W8OZi50PX4qnSV2T+4npc3nn3CA+P0fkLYYX25OMXD7C9Z
z+QLCeNvh9w4w4Q42IPjOUg7cUe7h7kP8N0T0eHyYt4CFCX4uxOivcx9wcCo
uHdS6sW8JbjZd3dgiEOwaZ6T7P/AmkqCje8Xgngx6lssgv0fuNjcrQ==
           "]]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`], LineBox[CompressedData["
1:eJw10n0s1GEcAPBfFzKrsEk2TC1tioVJWeRreh8t6Q8sm3Xz0lpTK+VSbkJ1
wtKL7ZAhk1lWI1aYvkfbceu8nu6ct3vzdpi8nCOTld/v23d79tuz5/v9fJ/n
9zz7+bciE3gMw5z8N7a+XKxhs3OlF89oJfFjYxUFTTMt7j0WkkQ2zHi+mRE8
ubhdUly0FStoOmTLlIq2SbrkW2HC3w7ZhX0MI+E8Ex6LFsqu/dhAzlvGauuz
1abOdeS8JTzct35XXrGKnLeIE/li+31mE3LeAnry1zKzLi0j5y2gjeR+ia5k
kernsSAqtCZevYBsunwOE+v840XW89RvFl9e7usx1xuR5YuMOK307oixnCJv
GnNea494XjGQN4nyh37nfCp05I0jDlZkpAk15BmwfST3g4fXCHk6nBm6sK7I
UpGnxeJHn6zt7JVUP4Lv351pdV8cQDGbr0ZB8ynb3l8KjGf7KbGg7PHNtE4l
+rC+Atft2nOHzQryerHWd+/uXa79VC9Dj7AD1WHF3ZT/Hdsb89VSXi8WsOtN
uFOQ8SLE3IEZ7LwGHf6cSOU7fMH/N/wmK1iRmtMA5dw6yGLzBj2MgzRvgrKa
FgdH/SQEcD60eZ1uLuqZpHUZhBbbtKZbTQHtDzQRrw62qSfgKLd/kNkYkj+m
TMB17nwQCP6bdk8N8JY7P4infCKHpePQy/0fWE7SHmc69ORpwemOS3msaJzy
dSDtqhJMoJ58A2RG9WWP+RqA7gcCyoRmTZSG+k1CyhwvMiRojLxpCMgLTihM
05BnhFrxjgfOojHyZsE0rioVXdXQfuZgPuCezjVOT948OOXUl5Sla8hbgOjP
SfmLLRro5t4nRDzzlI6mjAK9X8i4HVj7nK+i+iWwaKxKHipQUb9l+Nqo97bZ
+EmeCUbcSsODLNXkmaAhfDMmNVhF3goM7KmUuzgqyTOD9ludrVu5krxVEDkL
p6VVavLWQN7Pj7thpYC/yePspw==
           "]]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.24061882085211694`]},
         "0.9508035400509834`"],
        Annotation[#, 0.9508035400509834, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
        "]]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}, {{}, {}}}}, {{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`], LineBox[CompressedData["
1:eJw10n0slHEcAPA77+X1kMpaWDGb1jgWMX0fNeGPhFIJ1cpbOiqWyCqNmJVo
rpbIopa1UGZTZ+nntdyilHVIxOhG3u48zz13aaY8z9d3e/bst9/3+/n+3pxO
n4+I1xMIBP7/v9U/HzoSYrS1OrryD3hyoSVDLsL2crslSOCCJe1XKorCD+ng
YdlqaEisUaiFxwsd9PasBkPefX5mW1mvBd5jSHO/y+8bpjr0aHKpycq+1JpF
b5HMBdfRQ5MsempS6x4ZWSxl0VORBrE6MGI7i56KFD9tn8y6pcH6edI1k+S9
MVwDXHrPLFFqa9I95Az2myF70t+WddcywPFl0yTmrrwzW49Bb4okTqmKmmka
PSWRbg6KLcij0Zskw8fTnJNGaPQmSBUEeZo/odEbJ/mZd6CsZBG9MWLfWhWe
26XG+h8kgB24ajeqggdc/hAR15rfNLi3AHFcPwWRD6UNHnZQgTvn95OjMY1N
HVUq9PqI6KeVQ6CjGuvlJFXSGW+gp8b8DtLkawsj1Woo4eZlpMX2zKnI/YuQ
w42fE8Wjc37Wm2hYu2FZcquRfwADj/l5MNmSRydQGhzLwKKipHclgwUf3ofM
3dKcgVdanJfDjsvDX+qJbm19cF+RVSPKWwIvfv3w0vnNQEjBX0ji9wdmdbM1
+a7LUMHvH8K0DcttpivQx58PpBbuet2oL6Dw/KA8eOLaQVpA8fnj4LVNyXgE
CCnen4Be94yzHy4KKbwfyE0RHfNTCCm+nxIKU8xD9/rqoTcFO787Zlf56KM3
DVJJZ1KOmwF6M5Dl5jY+4WRI8euZhVbFwmCyjRF68+CYKJmMBmP0VBCmORAv
iTGhPvHvE8TeUYZtqesofL/w8YJFd9b79Vi/CLYa1qy0xxT70WDc8M1GVG2G
HgOF12U2hhpz9BhID6HFJwIt0dOAwb5Q8ZExS/RYGLwtNfvVZ4WeFlpmTsYJ
XUXo6cBq7mvUhlER9Q8SpMha
           "]]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`], LineBox[CompressedData["
1:eJw1kn9IU1EUx9XJ0iVpGTUqHCsjItLSSqXsTFJLZyxXiH9oiGUtsiyTMKEw
1CJszRE1LTXNMq0o6YcpKLdWWdrSpc5t6dC1FNd0zv1watrae+++A4/H4Zzv
59x7v4ebmSPM8vLw8Ih2f8SfillUYkrOqE/uhXAynEhddy7GFvEDTpAxg6y9
B8M+X+6BexVEONCeYUFUtXAAviuIsKP2vNuWOrYKKJ4dvdiv/8Xv02CeDS1P
jVKYBd2YZ0Wb0ySrzC4N5k0TvGiRRYV5FvTm68WQ2CUazLOgwKL3XVzXANab
kTu9FOKjAbJdMYFiS7OfZT/Q4nkmJJadbT7gUgGJrzAiTonJyLTQvHGUJpEv
hodpMG8MlckdbTuVNO83UuUbO5KyhjDPgDYMznWotTrM06OmXNH5BB8d5o2g
Q2LZ0dlKWj+ETrflSSyP+qGc7NeiV1VTjMQn/XCcnDeAataESqVaFWwj+X0o
MyDVmMDRYp4S5awoCmYX/MT6TnTE8JhfUD2I+z+iYYGY8dZbB2VkvRX1OA/P
ieJHoJDMG5F9sb9YvqAH2uGGDv47Z4sBaqg6fOFHyBp8xnDeChdE0lPPT45D
JMUH9z7cnB8x4nonxDfbzkQKTPT5wO1n3jGhGXZQ54eUZVvnmQtTIKLuBx+6
aqPu+k9DJXV/uHpnX6BaagUl9T7AbcotfNllpd8P/Ly2cGR77bhfD/X3P7E5
6Q7MN4CwJWi7I2WG9gckcse6a41OPG8M3H5Eq7lztL+QMapkMTb9xTwjhOqC
n9amLWCeCb7VxqVIY/7h80wQunKWw4V5ZoKfv5TtycP7R9xnkmPz5HVT+0no
/7CAwcP7Cw/jmtcWTTJ4lN4Ko8r1u1e3e/OoeTZw78eV9FFvzLMT+lu7VjIx
zw6Jfl7+AQom5jnA7XdpUtMSzJsh6terNvpinpPwQxz02hfzZiHiRoxGV8zi
/Qfom9XQ
           "]]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`], LineBox[CompressedData["
1:eJw103tIU2EUAPBl0sz6Q+nheij6V1gZC1fNys7KoAVqpkG0CEVUrBS10N5R
60EPKAOzGSY5KRhBaERiGGfhnN1ca202bJlubT5yy+50c+HWLO89HbhcPr5z
fuf77vfdpMKK3OIIgUCQ/u+Ze/PxG2/F+KtuVLOYykUA2T55kvqsF0u4mMaF
CxbutJ9k8WHDXPjxakqms2u+Gz8Y5sKHurWvpard48h7PmTyy7ztGaPkTeGI
NtK44Y+HvEl8tanX1M24yPNiolJR/ko6Sh6LLxqPHynY6SKPxRi9LvwpzkX1
ExgdJ/TPNnxHLt3gweWM/pRneIj6udGXHX1BrnAixzf8wLRt+8CRPEjeGHqU
O7Yrjw2RN4JShzjYVjVAngt7zkwLhc+s5DkxQ54M1/rN5DmwM1S6yrzRRJ4d
DcMHb64e+Ez1A5haUNN/eoMNVVz+F4yM3x5R/fUzFnH9rDi2sRzE7/tQzPkW
bMyJjzon/++Z0Pb8bMm7FR+pnkGx9fZsWj1D+V24q75sfFkkg7XcfAeyRm+l
Pox4iRtrUBw+ejT4sg3/n3COsm5CE9WMj/l5aA0U10iiNMCPO0CuX6xlohGk
vA9FtT+PiC6/pXkGDL/f2jPP64DWB32LQsV3ThhBwq8fVGrLTZ/5E5Ty+wNT
8+GUBzYLNPL7B53xQEtrfj+Y+O8DdZscewe3WMmzg7I3PSJdYaN8B3Q7ztx9
WWEn3wmxCeqE9jon0PlAyoF7S9ZljVK/EVAtLXuT1+Qmbwx61mt3XO/4Rd4P
kDi0yl2FLHluUHsk4wqYpPV44GJu4kXomiJvAoLbwitrHH7yWCiUud1PlwTA
yN9P0IuKmjQJM0D3F1hJ56AoeYbqJ+HYoUfmzYeD1G8KxJYX5rz9M+T5QHSj
JdZUEiLPB7KmJOuVJyHy/LBHGGSuCWbJmwZX2Oar1AhkvBeA2Ptr8rYunyej
/xeypd9CtVnzZH8BWF3rqA==
           "]]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[
          0.43117266694245826`]},
         "1.0326344692707061`"],
        Annotation[#, 1.0326344692707061`, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
        "]]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}, {{}, {}}}}, {{{}, {{{}, {}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJw1030slHEcAPDzco4jl8MK68qtycs05qX+OPs+lRsZW2m9UCmSIaUX8zIl
izCatzV15lRIobUcVsb6bWjcqITVyOZMbuft3D13znUp8Ty/57s9e/bb7/f9
fH+v7gnp0VfNWSxWyNa3/afDiHp35ZbeHOMSAVSso5bF5iqBC5dIosKAHNvu
nJyWWBO1ku1YQx+l+QfThBzi88h26FGelpMUNM8maE+PShpzg469ZGNPhwKW
nEatmiywRyJFjWjeZcgce1p0W2W/SsrMsKdBSS4xksgnLOxpUETOt4wb65tA
56sR7E4cqk7YAGr4yDIqUrnwszJNQNdbQsVZE2G+e4xA8ZIFFOPP8+jMMQDt
qVB6hjowvFmPPSUqfDTg2Z6iw94vFD/FSbeJIrE3hxq6eB1OIVrszSKBabD/
7aIaewqk7C2Qzj5exPnTiNvvEJ57RQVPqfGTyFVR3vOqSgWJVL3vSB/b4V+f
ugR+lD+OhKf/VB5yY7xR5Hx0r9QnTIPz5cjhhGsc/7cWj+9HgT8mQ58RJFRS
/d3IJ8f4LsefhHyq3YKCTZfemFmSwJwwWyDz07mT8Jzuh4nW+gd8JdPuBmGK
PE0h0sNh2ofstVtB7WNruF8OmTxdzYfadWZ+4FHO62qRGiGQnj94V2vjBFkm
SKbXBzMS0YvhqA2oo9cPRoNYPF/8D0bp/QHCNN7Xc5c5XwWErp6VBhSZEfT4
WZBFJtt67zMnaH8OSsDeKz7IgsDnA+KK6K8ytQVB11NC8ExfXWO5Jfa29rnt
2oG5cDb2FiDW1433utgKe0ug93l4rnuAQ9DzWQZX6yOqC73W2FNDU5yydSrG
hrl/UPGzUFtawCW+0PcTUndsOq2csmXuL+R5+V38q7TD+SRMCm1Gmz3tcT0d
ZA9fj5dH2DPvAxreHx/UuO3Enh7uh4o1K7YOzPuCtE5RcVmgA/YMcI89tOq2
n4+9dbArW046U8LHnhHkFZ+cz192JP4DC4vBEw==
           "]]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJw1kn8s1HEYx/l2UZexNsuVstWm2WRapcuM52pZUmitZGYN1TGLuq6c/AiL
YSK/NqkUK2sUW83mxx99RAnJOGTn8L3ruHP50TnHMbLu+/0+92zffffZ8zyv
5/38OBh75/ItysbGxt/yMX/O1ojhXbfryXI9HGfNTCoEvFhnmR7ErK0S2efX
DWG2enhexdgK2axfOjYk1sHPfsZM5Edt4Hihkw44non4XG/PvReqRd4yGQ6J
7XH+No08I4l62pnNb9Igb4lcKqpMGqmmkWcgvHDHjwFDKuQZiKPXp91tFzWY
v0je3vU3/pbQwIb3zxNX70nBdOYE1ptj9Kcm5UwBi6/Sk9EU/SsxPYm8WaJc
fyTKDlciT0u+9NVKdcETyJsmWyMpmTF7aORpSJA69X6H7yTy1MTdLvuFi0KJ
PBU5W3j7XAIZxfwJRm9it2YYnrHxCtLqljuZvyCHm2y9XyRRt9HldG0MjrL8
YWKUhwTF5SmQN0hcFANVzfsnML+XRM8MOraoaYzvIg1L8kqJkIYS1t9GLHOs
bvWkIYt915PmnuQjEfIpsG6YDivq8yhVQQ3nBz867HzaVzW+22AxHXQlnRo4
xfHhof6wIDNSh/5esMy30Uv2x6oPLPOj6m7MwwlOP1jWRxn8/kI81x98vyAM
rH1igJdc/6AYMEuoUCMMcvOBvbzw1PcFy9b5gbDgtJuv0wrGq+FBuaDdtLCC
fA1zFzVKmdm6H7DcS5N5fA3raUE7eEgmrVu37hcifJsrapI2kKeHYAcqLCP/
H/LmgD/2JqArbQv1zMOZ6Jlij2IbEcdbBMu+c9y324rw/hg9UcIDlGiAu08o
W0jfpfWhRHi/IPHnt0Q2bsN8I8SJxcGqNJ6Iq7cMjzv6Ysp6eMgzQc0+76v1
HnbIM4ED5ZmXILVH3gpkgE+y26Y98lbhiqZujk92IM8M0vhSf2XrTuStMf1k
zX7gi/4DZuHUkw==
           "]]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1:eJw10ntIk1EUAHDNItMeyhIKSlAEexiWjyyoTvpHGUmKppkmhPRwiWWEWL4q
CTRTMa3lK7MU6SGBkss18+Rr0zKzRmY5x+bMthw2t2/zS2cPv+944PJxuef8
zr3fvR6JFyJPL7Gzs9v7fyx8+WCxOM/391NXG/pzMYOdbYc6Nkln8QwXVmy+
d5BN8mOxsmIhLHjj9poty1VWfN+/EAwGBL+dVr1ikPcYVOv2fBfYGPLMKMqX
f2FzTeSZUFgjDt08Nk3eNILTp4Y5kZk8I75T1l2PSzCSZ8Ss8n2yc9F6qp9C
NRbUhETpkUvvNyDzMMbZKUVH/SYxZ6jezdCiQY6v0GOHQhjnsElFng6dVdJI
d8MIeRNYVj0gtbh8Jm8cN1yNz+hZLSNPi6x3qazOvoc8DSofBIVIClvJU2OJ
7ETsaHQX1SuRPZYjVPzpwHIu/yuWLvO+nFkiw1NcvyH0GhgV7z7yBrdzvgJ7
HcWeweGd5A1iZGP79QLZYn0fukwWt4iDF/O7cKk5V+7v3YMl3LoEbYkJrpPK
brzGzZ+g7rlXU+NQNy7ecOpYWGLDSgnW8utQKzHcubS+meYS2L8qM1FTVoO7
eB8c94dvVWW1Ar/eB17zES8fa2VA+4P6hMzkb74DEMDvH/LdmKIDAgUk8ecD
sVVeP7JNAdX8+WG8siEjJ2IYBvn/A91HXNqyzw6Tp4bSD2HLfUKVlK+BtTtz
06LPq8jXgmvgrEq/QgN0P7CZFWQLmrTUbwJQdlUI8ePk6aA/yLPFItKRp4fX
mVV/jzoYyJuEmMaMcm/lT9qPAT6mCpJ1aCRvCobl7m3qk9PkGeGFKLZInmKG
Af59wsUqi0O7rwno/YL8Ua9H6g+G6k2gi8q76V9joX5mWJcc3i0utJLHwMyt
u0Fjfix5DOywiuJN93+TZ4EQnzHpYfc58qxwPD39lzR5lrwZqEgrixN02shj
wX7jlWeBfvPwDzfm9TE=
           "]]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}, {
       TagBox[
        TooltipBox[
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], Opacity[1.]},
         "1.276910143494606`"],
        Annotation[#, 1.276910143494606, 
         "Tooltip"]& ], {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {{}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAUD8YAhxQ5D8WZTY5Tbv8Pzi7g0eA
3ui/4ImPieaf4L841ZIJmIfiP4yKxM8MEvM/VPOzggj7478kWCGQkpbpPxxD
j7qKjeC/MO3fwIDj0D+cIXWo78rrv7wI/TNor+g/wCTpWlmhtT/4LkNCuobn
P2C6T7rDNOG/ZLx6BDbD5D9QUbtuWJ/Kv6zJrXTCi+o/QN2S+B+p2T8wFE/1
q6XnP+Q84XJxceK/+JTe1yCa1z+QgvIa/dPfP6owSxWh5ABAIBj+UQ/Aw7/w
M1c0abjAv5yJkKYLKeC/QJDMx5t6wD/wFdBt+4nuPxY/j2eIRQRAeFy+N3jP
5D90MZKdt5PlP/w7N3q1N+s/5vpyzTAh+j9QRRHsfPvDPyDjcjvDLvE/aH47
lT6D2r8EZ/CiFxzgP+CjN5ZKr+K/AJua+lfg6z/bhKt6
        "]]}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
        AbsoluteThickness[1.6]}, {}}}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[159]=",ExpressionUUID->"94bea11b-3ca4-4281-9e03-3f8f9a859b6c"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 988},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->None,
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowGroupOpener->True,
TrackCellChangeTimes->False,
SpellingDictionaries->{"CorrectWords"->{
 "loglikelihood", "Skilling", "unnormalised", "parameterised", "logevidence"}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]


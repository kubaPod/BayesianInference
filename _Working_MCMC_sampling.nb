Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\"\<Bayesian*`*\>\"", ",", "\"\<Bayesian*`Private`*\>\""}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "BayesianInference`"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<CompiledFunctionTools`\>\"", "]"}]}], "Input",
 CellLabel->
  "In[157]:=",ExpressionUUID->"45f4969b-4ba4-40c0-b71c-cdcbb9db6bc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defineInferenceProblem", "[", "]"}]], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"0aba50b7-8be7-4282-9322-07cadc831c12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Data\"\>", ",", "\<\"Parameters\"\>", 
   ",", "\<\"LogLikelihoodFunction\"\>", ",", "\<\"LogPriorPDFFunction\"\>", 
   ",", "\<\"GeneratingDistribution\"\>", ",", "\<\"PriorDistribution\"\>", 
   ",", "\<\"PriorDistribution\"\>", ",", "\<\"PriorPDF\"\>"}], 
  "}"}]], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"46275fa3-433a-4fb0-b59d-aea2a3f1a2be"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", "=", "CauchyDistribution"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"dist", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", "10"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"obj", "=", 
  RowBox[{"defineInferenceProblem", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"dist", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "10"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<GeneratingDistribution\>\"", " ", "\[Rule]", " ", 
     RowBox[{"dist", "[", 
      RowBox[{"mu", ",", " ", "sigma"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mu", ",", 
         RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"sigma", ",", "0.01", ",", "100"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<PriorDistribution\>\"", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<LocationParameter\>\"", ",", " ", "\"\<ScaleParameter\>\""}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"obj", "=", 
  RowBox[{"generateStartingPoints", "[", 
   RowBox[{"obj", ",", "25"}], "]"}]}]}], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"1f05f520-7430-41d5-ac4c-4b3934617592"],

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"nestedSampling", "[", "\[IndentingNewLine]", 
   RowBox[{"obj", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<MonteCarloSteps\>\"", "\[Rule]", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<MinMaxAcceptanceRate\>\"", " ", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.9"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[161]:=",ExpressionUUID->"39ded403-5fbe-4a3d-baed-440a19cb2d29"],

Cell[BoxData[
 RowBox[{"parallelNestedSampling", "[", "obj", "]"}]], "Input",
 CellLabel->"In[98]:=",ExpressionUUID->"6e6756bd-bd43-4b2f-ad09-2eecfe54da7a"],

Cell[BoxData[
 RowBox[{"result", "[", "\"\<ParameterExpectedValues\>\"", "]"}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"ec61b517-23cc-404c-a0b6-7daab5c6e909"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Reverse", "@", 
   RowBox[{"Values", "@", 
    RowBox[{"result", "[", 
     RowBox[{"[", 
      RowBox[{"\"\<Samples\>\"", ",", "All", ",", "\"\<AcceptanceRate\>\""}], 
      "]"}], "]"}]}]}], "//", "ListPlot"}]], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"0ca91afa-29aa-4ad7-b6ac-c202b98dcd99"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "@", 
  RowBox[{"Transpose", "@", 
   RowBox[{"Reverse", "@", 
    RowBox[{"Values", "@", 
     RowBox[{"DeleteMissing", "@", 
      RowBox[{"result", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<Samples\>\"", ",", "All", ",", "\"\<MeanEstimate\>\""}], 
        "]"}], "]"}]}]}]}]}]}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"30682d7e-5bb1-424d-be59-687d2951c942"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"Reverse", "@", 
     RowBox[{"Values", "@", 
      RowBox[{"DeleteMissing", "@", 
       RowBox[{"result", "[", 
        RowBox[{"[", 
         RowBox[{
         "\"\<Samples\>\"", ",", "All", ",", "\"\<CovarianceEstimate\>\""}], 
         "]"}], "]"}]}]}]}]}], "]"}]}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"6c17b624-f66e-4c1e-ae1d-b9b6a92d4901"],

Cell[CellGroupData[{

Cell["Old", \
"Subsubsection",ExpressionUUID->"2a683dc0-0998-4cf1-a94f-93e4e6de7bd4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prob", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "-", 
       SuperscriptBox["y", "2"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RandomVariate", "[", "\[IndentingNewLine]", 
  RowBox[{
  "prob", ",", "\[IndentingNewLine]", "10", ",", "\[IndentingNewLine]", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MCMC\>\"", ",", 
      RowBox[{"\"\<Thinning\>\"", "\[Rule]", "1"}], ",", 
      RowBox[{"\"\<InitialPoint\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"\"\<BurnInPeriod\>\"", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"\"\<InitialVariance\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"700900b5-fe54-4cf3-9b39-3b712f178436"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.12744812305399097`"}], ",", 
     RowBox[{"-", "0.7782475419103394`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.060850339122023575`"}], ",", 
     RowBox[{"-", "0.37000925418492486`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.013835481447147094`"}], ",", 
     RowBox[{"-", "0.0816733258362376`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07849985137235203`", ",", "0.48440176044409994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12660867120166158`", ",", "0.7793851174448015`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.046685098197773764`", ",", "0.2897930994553432`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.046685098197773764`", ",", "0.2897930994553432`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020003083475527907`", ",", "0.1247819227311269`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.036463275295599645`", ",", "0.22442235781260983`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.09632549823495337`", ",", "0.5926522425874081`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"d1255be4-3e8c-4db1-bd11-f27569c47297"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "Random`Private`MCMC", "]"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"f0cbfa4f-e466-40fc-b1d4-2899e171b381"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Thinning\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"InitialPoint\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"InitialVariance\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"BurnInPeriod\"\>", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"\<\"MinEffectiveSampleSizeRatio\"\>", "\[Rule]", "Automatic"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"bd560495-98d3-468e-9c21-54c654a0d91d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Attributes", "[", "Random`Private`MCMC", "]"}], "=", 
  RowBox[{"{", "Protected", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Definition", "[", "Random`Private`MCMC", "]"}]}], "Input",
 CellLabel->"In[61]:=",ExpressionUUID->"60d7a07c-8659-4e2d-a071-97485552867d"],

Cell[BoxData[
 RowBox[{"{", "Protected", "}"}]], "Output",
 CellLabel->"Out[61]=",ExpressionUUID->"d8d9f462-39df-453e-ac4f-fe457da5d060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", "\"\<Random`Private`*\>\"", "]"}], "//", 
  "TableForm"}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"2035f4fd-9834-433e-b10b-a4e724977eb2"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Random`Private`AcceptanceRejection\"\>"},
     {"\<\"Random`Private`BTPE\"\>"},
     {"\<\"Random`Private`CompoundSum\"\>"},
     {"\<\"Random`Private`ConditionalStandardBallUniformDistribution\"\>"},
     {"\<\"Random`Private`DevroyeBinomial\"\>"},
     {"\<\"Random`Private`DoublesToInteger\"\>"},
     {"\<\"Random`Private`H2PE\"\>"},
     {"\<\"Random`Private`IntegerToDoubles\"\>"},
     {"\<\"Random`Private`IntegerUniformDistribution\"\>"},
     {"\<\"Random`Private`InternalComplexNormalDistribution\"\>"},
     {"\<\"Random`Private`InternalExponentialDistribution\"\>"},
     {"\<\"Random`Private`InternalGammaDistribution\"\>"},
     {"\<\"Random`Private`InternalNormalDistribution\"\>"},
     {"\<\"Random`Private`InternalPoissonDistribution\"\>"},
     {"\<\"Random`Private`InternalStandardBallUniformDistribution\"\>"},
     {"\<\"Random`Private`InternalStandardSimplexUniformDistribution\"\>"},
     {"\<\"Random`Private`InternalStandardSphereUniformDistribution\"\>"},
     {"\<\"Random`Private`InverseTransform\"\>"},
     {"\<\"Random`Private`LogBinomialPDF\"\>"},
     {"\<\"Random`Private`LogPoissonPDF\"\>"},
     {"\<\"Random`Private`MapThreadMax\"\>"},
     {"\<\"Random`Private`MapThreadMin\"\>"},
     {"\<\"Random`Private`MCMC\"\>"},
     {"\<\"Random`Private`MPZipfDistribution\"\>"},
     {"\<\"Random`Private`MultiUniformDistribution\"\>"},
     {"\<\"Random`Private`OrderingAndCounts\"\>"},
     {"\<\"Random`Private`PositionsOf\"\>"},
     {"\<\"Random`Private`RandomVariateVector\"\>"},
     {"\<\"Random`Private`RejectionStandardBallUniformDistribution\"\>"},
     {"\<\"Random`Private`SelectWithinRange\"\>"},
     {"\<\"Random`Private`StructureQuantityArrayRandomVector\"\>"},
     {"\<\"Random`Private`ZigguratExponentialDistribution\"\>"},
     {"\<\"Random`Private`ZigguratNormalDistribution\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[56]//TableForm=",ExpressionUUID->"a99aafaf-cfd2-4aa7-980e-8a39c00d17d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Attributes", "[", "Random`Private`MCMC", "]"}], "=", 
  RowBox[{"{", "}"}]}]], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"0966bc3f-aaaf-4f80-9fcc-e9b06de4ddb2"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabel->"Out[113]=",ExpressionUUID->"d93db74b-2ded-494a-a331-71ffc0361644"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Definition", "[", "Random`Private`MCMC", "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"7cbdeea8-d401-4c87-92fa-18b7d3307c82"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Random`Private`MCMC", "[", 
          RowBox[{
          "Statistics`RandomVariateDump`dist_", ",", 
           "Statistics`RandomVariateDump`len_Integer", ",", 
           "Statistics`RandomVariateDump`prec_", ",", 
           RowBox[{"{", 
            RowBox[{
            "Statistics`RandomVariateDump`thin_", ",", 
             "Statistics`RandomVariateDump`initial_", ",", 
             "Statistics`RandomVariateDump`ivar_", ",", 
             "Statistics`RandomVariateDump`burnin_", ",", 
             "Statistics`RandomVariateDump`minff_"}], "}"}]}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "Statistics`RandomVariateDump`mineff", ",", 
             "Statistics`RandomVariateDump`chainstate", ",", 
             "Statistics`RandomVariateDump`mthd", ",", 
             "Statistics`RandomVariateDump`head", ",", 
             "Statistics`RandomVariateDump`contQ", ",", 
             "Statistics`RandomVariateDump`sample"}], "}"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "Statistics`RandomVariateDump`burnin", "===", "Automatic"}], 
                 "||", 
                 RowBox[{
                 "Internal`NonNegativeIntegerQ", "[", 
                  "Statistics`RandomVariateDump`burnin", "]"}]}], ")"}]}], 
              ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "optvg"}], "MessageName"], 
                 ",", "\<\"BurnInPeriod\"\>", ",", 
                 "Statistics`RandomVariateDump`burnin", 
                 ",", "\<\"Automatic or a non-negative integer\"\>"}], "]"}], 
               ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "Statistics`RandomVariateDump`minff", "===", "Automatic"}], "||", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "Internal`RealValuedNumericQ", "[", 
                    "Statistics`RandomVariateDump`minff", "]"}], "&&", 
                   RowBox[{
                   "0", "\[LessEqual]", "Statistics`RandomVariateDump`minff", 
                    "<", "1"}]}], ")"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "optvg"}], "MessageName"], 
                 ",", "\<\"MinEffectiveSampleSizeRatio\"\>", ",", 
                 "Statistics`RandomVariateDump`minff", 
                 ",", "\<\"Automatic or a real number between 0 and 1\"\>"}], 
                "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "Statistics`RandomVariateDump`thin", "===", "Automatic"}], "||", 
                 RowBox[{
                 "Internal`PositiveIntegerQ", "[", 
                  "Statistics`RandomVariateDump`thin", "]"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "optvg"}], "MessageName"], 
                 ",", "\<\"Thinning\"\>", ",", 
                 "Statistics`RandomVariateDump`thin", 
                 ",", "\<\"Automatic or a positive integer\"\>"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "Statistics`RandomVariateDump`initial", "===", "Automatic"}],
                  "||", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "Internal`RealValuedNumericQ", "[", 
                    "Statistics`RandomVariateDump`initial", "]"}], "&&", 
                   RowBox[{
                    RowBox[{
                    "Statistics`Library`DistributionDimensionality", "[", 
                    "Statistics`RandomVariateDump`dist", "]"}], "\[Equal]", 
                    "1"}]}], ")"}], "||", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "Statistics`Library`RealVectorQ", "[", 
                    "Statistics`RandomVariateDump`initial", "]"}], "&&", 
                   RowBox[{
                    RowBox[{
                    "Statistics`Library`DistributionDimensionality", "[", 
                    "Statistics`RandomVariateDump`dist", "]"}], "\[Equal]", 
                    RowBox[{
                    "Length", "[", "Statistics`RandomVariateDump`initial", 
                    "]"}]}]}], ")"}]}], ")"}]}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "mcmcin1"}], "MessageName"], 
                 ",", "Statistics`RandomVariateDump`initial"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "Statistics`RandomVariateDump`thin", "=!=", "Automatic"}], "&&", 
               RowBox[{
               "Statistics`RandomVariateDump`minff", "=!=", "Automatic"}]}], 
              ",", 
              RowBox[{"Message", "[", 
               RowBox[{
                StyleBox[
                 RowBox[{"RandomVariate", "::", "szthin"}], "MessageName"], 
                ",", "Statistics`RandomVariateDump`minff"}], "]"}]}], "]"}], 
            ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Statistics`RandomVariateDump`minff", "===", 
               "Statistics`RandomVariateDump`thin", "===", "Automatic"}], ",", 
              RowBox[{
              "Statistics`RandomVariateDump`mineff", "=", 
               "Statistics`RandomVariateDump`$EffectiveSampleSizeRatio"}], 
              ",", 
              RowBox[{
              "Statistics`RandomVariateDump`mineff", "=", 
               "Statistics`RandomVariateDump`minff"}]}], "]"}], ";", 
            RowBox[{
            "Statistics`RandomVariateDump`mthd", 
             "=", "\<\"AdaptiveMetropolis\"\>"}], ";", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "Statistics`RandomVariateDump`dist", ",", "\[IndentingNewLine]", 
              RowBox[{
              "_", "?", 
               "Statistics`Library`ContinuousUnivariateDistributionQ"}], ",", 
              RowBox[{
               RowBox[{
               "Statistics`RandomVariateDump`head", "=", 
                "Statistics`RandomVariateDump`iMCMC1D"}], ";", 
               RowBox[{"Statistics`RandomVariateDump`contQ", "=", "True"}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
              "_", "?", 
               "Statistics`Library`ContinuousMultivariateDistributionQ"}], 
              ",", 
              RowBox[{
               RowBox[{
               "Statistics`RandomVariateDump`head", "=", 
                "Statistics`RandomVariateDump`iMCMCND"}], ";", 
               RowBox[{"Statistics`RandomVariateDump`contQ", "=", "True"}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
              "_", "?", 
               "Statistics`Library`DiscreteUnivariateDistributionQ"}], ",", 
              RowBox[{
               RowBox[{
               "Statistics`RandomVariateDump`head", "=", 
                "Statistics`RandomVariateDump`iMCMC1D"}], ";", 
               RowBox[{"Statistics`RandomVariateDump`contQ", "=", "False"}]}],
               ",", "\[IndentingNewLine]", 
              RowBox[{
              "_", "?", 
               "Statistics`Library`DiscreteMultivariateDistributionQ"}], ",", 
              RowBox[{
               RowBox[{
               "Statistics`RandomVariateDump`head", "=", 
                "Statistics`RandomVariateDump`iMCMCND"}], ";", 
               RowBox[{"Statistics`RandomVariateDump`contQ", "=", "False"}]}],
               ",", "\[IndentingNewLine]", "_", ",", 
              RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
            RowBox[{"Statistics`RandomVariateDump`chainstate", "=", 
             RowBox[{"Statistics`RandomVariateDump`head", "[", 
              RowBox[{
              "Statistics`RandomVariateDump`dist", ",", 
               "Statistics`RandomVariateDump`len", ",", 
               "Statistics`RandomVariateDump`prec", ",", 
               "Statistics`RandomVariateDump`mthd", ",", 
               RowBox[{"{", 
                RowBox[{
                "Statistics`RandomVariateDump`thin", ",", 
                 "Statistics`RandomVariateDump`initial", ",", 
                 "Statistics`RandomVariateDump`ivar", ",", 
                 "Statistics`RandomVariateDump`burnin", ",", 
                 "Statistics`RandomVariateDump`mineff"}], "}"}], ",", 
               "Statistics`RandomVariateDump`contQ"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Statistics`RandomVariateDump`chainstate", "===", "$Failed"}], 
              ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "mcmc"}], "MessageName"], 
                 ",", "Statistics`RandomVariateDump`dist", ",", 
                 "Statistics`RandomVariateDump`mthd"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{"Statistics`RandomVariateDump`sample", "=", 
             RowBox[{"Statistics`RandomVariateDump`iSampleFromChain", "[", 
              RowBox[{
              "Statistics`RandomVariateDump`chainstate", ",", 
               "Statistics`RandomVariateDump`len", ",", 
               RowBox[{"{", 
                RowBox[{
                "Statistics`RandomVariateDump`mineff", ",", 
                 "Statistics`RandomVariateDump`thin"}], "}"}]}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Statistics`RandomVariateDump`sample", "===", "$Failed"}], ",", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{
                 StyleBox[
                  RowBox[{"RandomVariate", "::", "mcmc"}], "MessageName"], 
                 ",", "Statistics`RandomVariateDump`dist", ",", 
                 "Statistics`RandomVariateDump`mthd"}], "]"}], ";", 
               RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
            RowBox[{
            "Statistics`RandomVariateDump`RandomSamplingExprStore", "[", 
             RowBox[{"Statistics`RandomVariateDump`put", "[", 
              RowBox[{
              "Statistics`RandomVariateDump`dist", ",", "\<\"MCobj\"\>", ",", 
               "Statistics`RandomVariateDump`chainstate"}], "]"}], "]"}], ";",
             "Statistics`RandomVariateDump`sample"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "Random`Private`MCMC", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\<\"Thinning\"\>", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"\<\"InitialPoint\"\>", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"\<\"InitialVariance\"\>", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"\<\"BurnInPeriod\"\>", "\[Rule]", "Automatic"}], ",", 
           
           RowBox[{"\<\"MinEffectiveSampleSizeRatio\"\>", "\[Rule]", 
            "Automatic"}]}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Random`Private`MCMC],
  Editable->False]], "Output",
 CellLabel->"Out[114]=",ExpressionUUID->"4a2608c0-6561-4316-8f40-bc1b4e163265"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Statistics`RandomVariateDump`head", "[", 
  RowBox[{
  "Statistics`RandomVariateDump`dist", ",", 
   "Statistics`RandomVariateDump`len", ",", 
   "Statistics`RandomVariateDump`prec", ",", 
   "Statistics`RandomVariateDump`mthd", ",", 
   RowBox[{"{", 
    RowBox[{
    "Statistics`RandomVariateDump`thin", ",", 
     "Statistics`RandomVariateDump`initial", ",", 
     "Statistics`RandomVariateDump`ivar", ",", 
     "Statistics`RandomVariateDump`burnin", ",", 
     "Statistics`RandomVariateDump`mineff"}], "}"}], ",", 
   "Statistics`RandomVariateDump`contQ"}], 
  "]"}]], "Input",ExpressionUUID->"8a6c4345-ae57-47b1-848e-2d383f689f7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   InterpretationBox["MarkovChainObject",
    Statistics`MCMC`MarkovChainObject], "[", 
   InterpretationBox[
    PanelBox[
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"Random walk Metrolopis-Hastings, Adaptive(Log)\"\>", 
        TextForm]], "InlineText",ExpressionUUID->
       "4c651631-5404-46b4-8743-088423988660"],
      Text["Random walk Metrolopis-Hastings, Adaptive(Log)"]]],
    Association[
    "StateData" -> {0.4242615163789306, 0, 0., 0.}, 
     "IteratorFunction" -> (
      Statistics`MCMCSamplersDump`iAdaptiveMonteCarlo[#, #2, 
       Statistics`MCMCSamplersDump`ff$946, {0.5, 10}, #3, MachinePrecision, 
       Statistics`MCMCSamplersDump`validDensityQ$946, {
       Statistics`MCMCSamplersDump`logQ$946, 
        Statistics`MCMCSamplersDump`discreteQ$946}]& ), 
     "RandomInputFunction" -> ({
       RandomVariate[
        NormalDistribution[], #, WorkingPrecision -> MachinePrecision], 
       Log[
        RandomReal[1, #, WorkingPrecision -> MachinePrecision]]}& ), 
     WorkingPrecision -> MachinePrecision, "MarkovChainType" -> 
     "Random walk Metrolopis-Hastings, Adaptive(Log)", "AcceptanceRate" -> 
     None]], "]"}], "//", "First"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"d5dcbcb8-a75d-4212-9eb4-b654013e5564"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"StateData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.4242615163789306`", ",", "0", ",", "0.`", ",", "0.`"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"IteratorFunction\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Statistics`MCMCSamplersDump`iAdaptiveMonteCarlo", "[", 
       RowBox[{
       "#1", ",", "#2", ",", "Statistics`MCMCSamplersDump`ff$946", ",", 
        RowBox[{"{", 
         RowBox[{"0.5`", ",", "10"}], "}"}], ",", "#3", ",", 
        "MachinePrecision", ",", 
        "Statistics`MCMCSamplersDump`validDensityQ$946", ",", 
        RowBox[{"{", 
         RowBox[{
         "Statistics`MCMCSamplersDump`logQ$946", ",", 
          "Statistics`MCMCSamplersDump`discreteQ$946"}], "}"}]}], "]"}], 
      "&"}], ")"}]}], ",", 
   RowBox[{"\<\"RandomInputFunction\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", "]"}], ",", "#1", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
         "]"}], ",", 
        RowBox[{"Log", "[", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"1", ",", "#1", ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}]}], 
          "]"}], "]"}]}], "}"}], "&"}], ")"}]}], ",", 
   RowBox[{"WorkingPrecision", "\[Rule]", "MachinePrecision"}], ",", 
   RowBox[{"\<\"MarkovChainType\"\>", 
    "\[Rule]", "\<\"Random walk Metrolopis-Hastings, Adaptive(Log)\"\>"}], 
   ",", 
   RowBox[{"\<\"AcceptanceRate\"\>", "\[Rule]", "None"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[115]=",ExpressionUUID->"98685b56-c313-4809-979d-a8a8e6099699"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Statistics`RandomVariateDump`iMCMCND", "//", 
  "Definition"}]], "Input",
 CellLabel->
  "In[116]:=",ExpressionUUID->"273dc754-7a5e-4fa9-896c-05d8798da001"],

Cell[CellGroupData[{

Cell[BoxData["Statistics`RandomVariateDump`$InitialBurnIn"], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"8cc0a2d4-d2ce-4457-8efc-f887bdb9ed4c"],

Cell[BoxData["100"], "Output",
 CellLabel->"Out[117]=",ExpressionUUID->"dd62045c-6fba-4358-b489-4dbd7de60230"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1244, 700},
WindowMargins->{{Automatic, 176}, {Automatic, 86}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
Magnification:>1.2 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]

